{
    "swagger": "2.0",
    "info": {
        "title": "Vitruvi API",
        "description": "Vitruvi",
        "version": "v1"
    },
    "basePath": "/",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "basic": {
            "type": "basic"
        }
    },
    "security": [
        {
            "basic": []
        }
    ],
    "paths": {
        "/api/v1/aggregation/design_elements_files": {
            "get": {
                "operationId": "api_v1_aggregation_design_elements_files_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Aggregation"
                ]
            },
            "parameters": []
        },
        "/api/v1/aggregation/work_items_files": {
            "get": {
                "operationId": "api_v1_aggregation_work_items_files_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Aggregation"
                ]
            },
            "parameters": []
        },
        "/api/v1/api_schema": {
            "get": {
                "operationId": "api_v1_api_schema_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Api schema"
                ]
            },
            "parameters": []
        },
        "/api/v1/async_events/event_hooks/": {
            "get": {
                "operationId": "api_v1_async_events_event_hooks_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EventHook"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Async events"
                ]
            },
            "post": {
                "operationId": "api_v1_async_events_event_hooks_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventHook"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventHook"
                        }
                    }
                },
                "tags": [
                    "Async events"
                ]
            },
            "parameters": []
        },
        "/api/v1/async_events/event_hooks/{id}/": {
            "get": {
                "operationId": "api_v1_async_events_event_hooks_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventHook"
                        }
                    }
                },
                "tags": [
                    "Async events"
                ]
            },
            "put": {
                "operationId": "api_v1_async_events_event_hooks_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventHook"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventHook"
                        }
                    }
                },
                "tags": [
                    "Async events"
                ]
            },
            "patch": {
                "operationId": "api_v1_async_events_event_hooks_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EventHook"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EventHook"
                        }
                    }
                },
                "tags": [
                    "Async events"
                ]
            },
            "delete": {
                "operationId": "api_v1_async_events_event_hooks_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Async events"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this event hook.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/async_events/scripts/": {
            "get": {
                "operationId": "api_v1_async_events_scripts_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Script"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Async events"
                ]
            },
            "post": {
                "operationId": "api_v1_async_events_scripts_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Script"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Script"
                        }
                    }
                },
                "tags": [
                    "Async events"
                ]
            },
            "parameters": []
        },
        "/api/v1/async_events/scripts/{id}/": {
            "get": {
                "operationId": "api_v1_async_events_scripts_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Script"
                        }
                    }
                },
                "tags": [
                    "Async events"
                ]
            },
            "put": {
                "operationId": "api_v1_async_events_scripts_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Script"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Script"
                        }
                    }
                },
                "tags": [
                    "Async events"
                ]
            },
            "patch": {
                "operationId": "api_v1_async_events_scripts_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Script"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Script"
                        }
                    }
                },
                "tags": [
                    "Async events"
                ]
            },
            "delete": {
                "operationId": "api_v1_async_events_scripts_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Async events"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this script.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/change_monitor/full_sync": {
            "post": {
                "operationId": "api_v1_change_monitor_full_sync_create",
                "description": "Do a full synchronization to MongoDb of all observed models. To synchronize particular models, include an\nobservers field in the body, with a list of model names separated by comma.\n\nThis view also allows to debug synchronization when in DEBUG mode if the following two fields are included in\nthe body:\n- debug: if True, the full sync will be done as part of the request. With this, for example, the\ndjango-debug-toolbar can be used to help on performance tuning.\n- limit: if a number is given, let's say `n`, only the first n instances of each model will be synchronized.",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Change monitor"
                ]
            },
            "parameters": []
        },
        "/api/v1/companies/": {
            "get": {
                "operationId": "api_v1_companies_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "with_subcontract_or_epc",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "with_no_subcontract",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Company"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Companies"
                ]
            },
            "post": {
                "operationId": "api_v1_companies_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                },
                "tags": [
                    "Companies"
                ]
            },
            "parameters": []
        },
        "/api/v1/companies/{id}/": {
            "get": {
                "operationId": "api_v1_companies_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                },
                "tags": [
                    "Companies"
                ]
            },
            "put": {
                "operationId": "api_v1_companies_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                },
                "tags": [
                    "Companies"
                ]
            },
            "patch": {
                "operationId": "api_v1_companies_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                },
                "tags": [
                    "Companies"
                ]
            },
            "delete": {
                "operationId": "api_v1_companies_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Companies"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this company.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/conditional_custom_field_overrides/": {
            "get": {
                "operationId": "api_v1_conditional_custom_field_overrides_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "network_operator",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "custom_field_settings",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ConditionalCustomFieldOverride"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Conditional custom field overrides"
                ]
            },
            "post": {
                "operationId": "api_v1_conditional_custom_field_overrides_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConditionalCustomFieldOverride"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ConditionalCustomFieldOverride"
                        }
                    }
                },
                "tags": [
                    "Conditional custom field overrides"
                ]
            },
            "parameters": []
        },
        "/api/v1/conditional_custom_field_overrides/batch/": {
            "post": {
                "operationId": "api_v1_conditional_custom_field_overrides_batch_create",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConditionalCustomFieldOverride"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ConditionalCustomFieldOverride"
                        }
                    }
                },
                "tags": [
                    "Conditional custom field overrides"
                ]
            },
            "delete": {
                "operationId": "api_v1_conditional_custom_field_overrides_batch_delete",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Conditional custom field overrides"
                ]
            },
            "parameters": []
        },
        "/api/v1/conditional_custom_field_overrides/{id}/": {
            "get": {
                "operationId": "api_v1_conditional_custom_field_overrides_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ConditionalCustomFieldOverride"
                        }
                    }
                },
                "tags": [
                    "Conditional custom field overrides"
                ]
            },
            "put": {
                "operationId": "api_v1_conditional_custom_field_overrides_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConditionalCustomFieldOverride"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ConditionalCustomFieldOverride"
                        }
                    }
                },
                "tags": [
                    "Conditional custom field overrides"
                ]
            },
            "patch": {
                "operationId": "api_v1_conditional_custom_field_overrides_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConditionalCustomFieldOverride"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ConditionalCustomFieldOverride"
                        }
                    }
                },
                "tags": [
                    "Conditional custom field overrides"
                ]
            },
            "delete": {
                "operationId": "api_v1_conditional_custom_field_overrides_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Conditional custom field overrides"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this conditional custom field override.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/content_types/": {
            "get": {
                "operationId": "api_v1_content_types_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ContentType"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Content types"
                ]
            },
            "parameters": []
        },
        "/api/v1/crew_categories/": {
            "get": {
                "operationId": "api_v1_crew_categories_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CrewCategory"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Crew categories"
                ]
            },
            "post": {
                "operationId": "api_v1_crew_categories_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewCategory"
                        }
                    }
                },
                "tags": [
                    "Crew categories"
                ]
            },
            "parameters": []
        },
        "/api/v1/crew_categories/{id}/": {
            "get": {
                "operationId": "api_v1_crew_categories_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewCategory"
                        }
                    }
                },
                "tags": [
                    "Crew categories"
                ]
            },
            "put": {
                "operationId": "api_v1_crew_categories_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewCategory"
                        }
                    }
                },
                "tags": [
                    "Crew categories"
                ]
            },
            "patch": {
                "operationId": "api_v1_crew_categories_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewCategory"
                        }
                    }
                },
                "tags": [
                    "Crew categories"
                ]
            },
            "delete": {
                "operationId": "api_v1_crew_categories_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Crew categories"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this crew category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/crews/": {
            "get": {
                "operationId": "api_v1_crews_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "crew_categories",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_employee_or_subcontractor_on_program",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "not_on_program",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company_type",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Crew"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Crews"
                ]
            },
            "post": {
                "operationId": "api_v1_crews_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Crew"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Crew"
                        }
                    }
                },
                "tags": [
                    "Crews"
                ]
            },
            "parameters": []
        },
        "/api/v1/crews/{id}/": {
            "get": {
                "operationId": "api_v1_crews_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Crew"
                        }
                    }
                },
                "tags": [
                    "Crews"
                ]
            },
            "put": {
                "operationId": "api_v1_crews_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Crew"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Crew"
                        }
                    }
                },
                "tags": [
                    "Crews"
                ]
            },
            "patch": {
                "operationId": "api_v1_crews_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Crew"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Crew"
                        }
                    }
                },
                "tags": [
                    "Crews"
                ]
            },
            "delete": {
                "operationId": "api_v1_crews_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Crews"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this crew.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/crews_with_resources/": {
            "get": {
                "operationId": "api_v1_crews_with_resources_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "crew_categories",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_employee_or_subcontractor_on_program",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "not_on_program",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company_type",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CrewNested"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Crews with resources"
                ]
            },
            "post": {
                "operationId": "api_v1_crews_with_resources_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewNested"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewNested"
                        }
                    }
                },
                "tags": [
                    "Crews with resources"
                ]
            },
            "parameters": []
        },
        "/api/v1/crews_with_resources/{id}/": {
            "get": {
                "operationId": "api_v1_crews_with_resources_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewNested"
                        }
                    }
                },
                "tags": [
                    "Crews with resources"
                ]
            },
            "put": {
                "operationId": "api_v1_crews_with_resources_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewNested"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewNested"
                        }
                    }
                },
                "tags": [
                    "Crews with resources"
                ]
            },
            "patch": {
                "operationId": "api_v1_crews_with_resources_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewNested"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewNested"
                        }
                    }
                },
                "tags": [
                    "Crews with resources"
                ]
            },
            "delete": {
                "operationId": "api_v1_crews_with_resources_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Crews with resources"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this crew.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/custom_field_categories/": {
            "get": {
                "operationId": "api_v1_custom_field_categories_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "network_operator",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CustomFieldCategory"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Custom field categories"
                ]
            },
            "post": {
                "operationId": "api_v1_custom_field_categories_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomFieldCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomFieldCategory"
                        }
                    }
                },
                "tags": [
                    "Custom field categories"
                ]
            },
            "parameters": []
        },
        "/api/v1/custom_field_categories/{id}/": {
            "get": {
                "operationId": "api_v1_custom_field_categories_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomFieldCategory"
                        }
                    }
                },
                "tags": [
                    "Custom field categories"
                ]
            },
            "put": {
                "operationId": "api_v1_custom_field_categories_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomFieldCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomFieldCategory"
                        }
                    }
                },
                "tags": [
                    "Custom field categories"
                ]
            },
            "patch": {
                "operationId": "api_v1_custom_field_categories_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomFieldCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomFieldCategory"
                        }
                    }
                },
                "tags": [
                    "Custom field categories"
                ]
            },
            "delete": {
                "operationId": "api_v1_custom_field_categories_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Custom field categories"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this custom field category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/custom_field_settings/": {
            "get": {
                "operationId": "api_v1_custom_field_settings_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "network_operator",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "data_type",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CustomFieldSettings"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Custom field settings"
                ]
            },
            "post": {
                "operationId": "api_v1_custom_field_settings_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomFieldSettings"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomFieldSettings"
                        }
                    }
                },
                "tags": [
                    "Custom field settings"
                ]
            },
            "parameters": []
        },
        "/api/v1/custom_field_settings/batch/": {
            "post": {
                "operationId": "api_v1_custom_field_settings_batch_create",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomFieldSettings"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomFieldSettings"
                        }
                    }
                },
                "tags": [
                    "Custom field settings"
                ]
            },
            "delete": {
                "operationId": "api_v1_custom_field_settings_batch_delete",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Custom field settings"
                ]
            },
            "parameters": []
        },
        "/api/v1/custom_field_settings/{id}/": {
            "get": {
                "operationId": "api_v1_custom_field_settings_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomFieldSettings"
                        }
                    }
                },
                "tags": [
                    "Custom field settings"
                ]
            },
            "put": {
                "operationId": "api_v1_custom_field_settings_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomFieldSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomFieldSettings"
                        }
                    }
                },
                "tags": [
                    "Custom field settings"
                ]
            },
            "patch": {
                "operationId": "api_v1_custom_field_settings_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomFieldSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomFieldSettings"
                        }
                    }
                },
                "tags": [
                    "Custom field settings"
                ]
            },
            "delete": {
                "operationId": "api_v1_custom_field_settings_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Custom field settings"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this custom field settings.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/custom_field_settings_by_entity": {
            "get": {
                "operationId": "api_v1_custom_field_settings_by_entity_list",
                "description": "Returns the custom field settings ids applicable to each passed entity. These settings are sourced from\nthe provider entity, indicated by the \"custom_fields_provider\" CustomMeta attribute. For example:\n\nclass WorkItem():\n    ...\n    class CustomMeta:\n        custom_fields_provider = 'design_element__category'\n\nAllowed values for \"custom_fields_provider\":\n  1. '__content_type__'           # Custom fields are defined on the content type\n  2. '__self__'                   # Custom fields are defined on the entity itself.\n  4. 'path__to__provider'         # Path to the entity that defines the custom fields.\n  5. def custom_fields_provider() # Callable that returns a path to the provider.\n\n:url params:\n  - object_ids: Comma-separated list of entity ids to retrieve custom field settings for.\n  - content_type: Content type id of the entity ids.\n\n:return: A dictionary where the keys are the entity ids and the values a list of their\n         corresponding custom field settings ids.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Custom field settings by entity"
                ]
            },
            "parameters": []
        },
        "/api/v1/custom_fields/": {
            "get": {
                "operationId": "api_v1_custom_fields_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "object_id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "network_operator",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CustomField"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Custom fields"
                ]
            },
            "post": {
                "operationId": "api_v1_custom_fields_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomField"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomField"
                        }
                    }
                },
                "tags": [
                    "Custom fields"
                ]
            },
            "parameters": []
        },
        "/api/v1/custom_fields/{id}/": {
            "get": {
                "operationId": "api_v1_custom_fields_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomField"
                        }
                    }
                },
                "tags": [
                    "Custom fields"
                ]
            },
            "put": {
                "operationId": "api_v1_custom_fields_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomField"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomField"
                        }
                    }
                },
                "tags": [
                    "Custom fields"
                ]
            },
            "patch": {
                "operationId": "api_v1_custom_fields_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomField"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomField"
                        }
                    }
                },
                "tags": [
                    "Custom fields"
                ]
            },
            "delete": {
                "operationId": "api_v1_custom_fields_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Custom fields"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this custom field.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/data_resource/": {
            "get": {
                "operationId": "api_v1_data_resource_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "extension",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DataResource"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Data resource"
                ]
            },
            "post": {
                "operationId": "api_v1_data_resource_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DataResource"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DataResource"
                        }
                    }
                },
                "tags": [
                    "Data resource"
                ]
            },
            "parameters": []
        },
        "/api/v1/data_resource/{id}/": {
            "get": {
                "operationId": "api_v1_data_resource_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DataResource"
                        }
                    }
                },
                "tags": [
                    "Data resource"
                ]
            },
            "put": {
                "operationId": "api_v1_data_resource_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DataResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DataResource"
                        }
                    }
                },
                "tags": [
                    "Data resource"
                ]
            },
            "patch": {
                "operationId": "api_v1_data_resource_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DataResource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DataResource"
                        }
                    }
                },
                "tags": [
                    "Data resource"
                ]
            },
            "delete": {
                "operationId": "api_v1_data_resource_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Data resource"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this data resource.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/design_element_categories/": {
            "get": {
                "operationId": "api_v1_design_element_categories_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DesignElementCategory"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Design element categories"
                ]
            },
            "post": {
                "operationId": "api_v1_design_element_categories_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DesignElementCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DesignElementCategory"
                        }
                    }
                },
                "tags": [
                    "Design element categories"
                ]
            },
            "parameters": []
        },
        "/api/v1/design_element_categories/{id}/": {
            "get": {
                "operationId": "api_v1_design_element_categories_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DesignElementCategory"
                        }
                    }
                },
                "tags": [
                    "Design element categories"
                ]
            },
            "put": {
                "operationId": "api_v1_design_element_categories_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DesignElementCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DesignElementCategory"
                        }
                    }
                },
                "tags": [
                    "Design element categories"
                ]
            },
            "patch": {
                "operationId": "api_v1_design_element_categories_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DesignElementCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DesignElementCategory"
                        }
                    }
                },
                "tags": [
                    "Design element categories"
                ]
            },
            "delete": {
                "operationId": "api_v1_design_element_categories_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Design element categories"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this design element category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/engineering/design_element_related_objects": {
            "get": {
                "operationId": "api_v1_engineering_design_element_related_objects_list",
                "description": "Returns a list of ids of the passed \"model\" objects, which are\nrelated to the passed element \"id\"s. Example query:\n{\n    \"ids\": [\"537eaf38-38bc-4af0-b3be-119e699269e8\"],\n    \"model\": \"workorder\",\n    \"app\": \"wbs\"     <--- optional\n}",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": []
        },
        "/api/v1/engineering/design_element_work_generation_job/": {
            "get": {
                "operationId": "api_v1_engineering_design_element_work_generation_job_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "post": {
                "operationId": "api_v1_engineering_design_element_work_generation_job_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": []
        },
        "/api/v1/engineering/design_element_work_generation_job/{id}": {
            "get": {
                "operationId": "api_v1_engineering_design_element_work_generation_job_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "post": {
                "operationId": "api_v1_engineering_design_element_work_generation_job_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/api/v1/engineering/design_elements/": {
            "get": {
                "operationId": "api_v1_engineering_design_elements_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "area",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "zoom_level",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "network_operator",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DesignElement"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "post": {
                "operationId": "api_v1_engineering_design_elements_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DesignElement"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DesignElement"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": []
        },
        "/api/v1/engineering/design_elements/{id}/": {
            "get": {
                "operationId": "api_v1_engineering_design_elements_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DesignElement"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "put": {
                "operationId": "api_v1_engineering_design_elements_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DesignElement"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DesignElement"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "patch": {
                "operationId": "api_v1_engineering_design_elements_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DesignElement"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DesignElement"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "delete": {
                "operationId": "api_v1_engineering_design_elements_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this design element.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/engineering/design_elements_categories_from_file": {
            "get": {
                "operationId": "api_v1_engineering_design_elements_categories_from_file_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": []
        },
        "/api/v1/engineering/design_elements_query": {
            "get": {
                "operationId": "api_v1_engineering_design_elements_query_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": []
        },
        "/api/v1/engineering/design_elements_with_tickets/": {
            "get": {
                "operationId": "api_v1_engineering_design_elements_with_tickets_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "area",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "zoom_level",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "network_operator",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DesignElementWithTickets"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "post": {
                "operationId": "api_v1_engineering_design_elements_with_tickets_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DesignElementWithTickets"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DesignElementWithTickets"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": []
        },
        "/api/v1/engineering/design_elements_with_tickets/{id}/": {
            "get": {
                "operationId": "api_v1_engineering_design_elements_with_tickets_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DesignElementWithTickets"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "put": {
                "operationId": "api_v1_engineering_design_elements_with_tickets_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DesignElementWithTickets"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DesignElementWithTickets"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "patch": {
                "operationId": "api_v1_engineering_design_elements_with_tickets_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DesignElementWithTickets"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DesignElementWithTickets"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "delete": {
                "operationId": "api_v1_engineering_design_elements_with_tickets_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this design element.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/engineering/design_elements_work_items/": {
            "get": {
                "operationId": "api_v1_engineering_design_elements_work_items_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DesignElementWork"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "post": {
                "operationId": "api_v1_engineering_design_elements_work_items_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DesignElementWork"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DesignElementWork"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": []
        },
        "/api/v1/engineering/design_elements_work_items/batch/": {
            "post": {
                "operationId": "api_v1_engineering_design_elements_work_items_batch_create",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DesignElementWork"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DesignElementWork"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "delete": {
                "operationId": "api_v1_engineering_design_elements_work_items_batch_delete",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": []
        },
        "/api/v1/engineering/design_elements_work_items/{id}/": {
            "get": {
                "operationId": "api_v1_engineering_design_elements_work_items_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DesignElementWork"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "put": {
                "operationId": "api_v1_engineering_design_elements_work_items_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DesignElementWork"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DesignElementWork"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "patch": {
                "operationId": "api_v1_engineering_design_elements_work_items_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DesignElementWork"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DesignElementWork"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "delete": {
                "operationId": "api_v1_engineering_design_elements_work_items_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this design element.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/engineering/design_elements_work_items/{id}/can_be_deleted/": {
            "get": {
                "operationId": "api_v1_engineering_design_elements_work_items_can_be_deleted_list",
                "description": "Returns data to check if it's possible to delete the design element",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/api/v1/engineering/design_elements_work_items_query": {
            "get": {
                "operationId": "api_v1_engineering_design_elements_work_items_query_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": []
        },
        "/api/v1/engineering/designs/": {
            "get": {
                "operationId": "api_v1_engineering_designs_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "design_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Design"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "post": {
                "operationId": "api_v1_engineering_designs_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Design"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Design"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": []
        },
        "/api/v1/engineering/designs/async/": {
            "post": {
                "operationId": "api_v1_engineering_designs_async_list",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Design"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Design"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": []
        },
        "/api/v1/engineering/designs/{id}/": {
            "get": {
                "operationId": "api_v1_engineering_designs_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Design"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "put": {
                "operationId": "api_v1_engineering_designs_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Design"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Design"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "patch": {
                "operationId": "api_v1_engineering_designs_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Design"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Design"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "delete": {
                "operationId": "api_v1_engineering_designs_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this design.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/engineering/designs/{id}/async/": {
            "put": {
                "operationId": "api_v1_engineering_designs_async_update",
                "description": "Performs job operations.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Design"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Design"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "patch": {
                "operationId": "api_v1_engineering_designs_async_partial_update",
                "description": "Performs job operations.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Design"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Design"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "delete": {
                "operationId": "api_v1_engineering_designs_async_delete",
                "description": "Performs job operations.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this design.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/engineering/designs/{id}/can_be_deleted/": {
            "get": {
                "operationId": "api_v1_engineering_designs_can_be_deleted",
                "description": "Returns if it's possible to delete the network design",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Design"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this design.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/engineering/export_to_geojson/": {
            "get": {
                "operationId": "api_v1_engineering_export_to_geojson_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "area",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "zoom_level",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "network_operator",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": []
        },
        "/api/v1/engineering/extent_view": {
            "get": {
                "operationId": "api_v1_engineering_extent_view_list",
                "description": "This api gives the extent and the element ids using related filters",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": []
        },
        "/api/v1/engineering/external_integration": {
            "get": {
                "operationId": "api_v1_engineering_external_integration_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "post": {
                "operationId": "api_v1_engineering_external_integration_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": []
        },
        "/api/v1/engineering/geometry_length": {
            "get": {
                "operationId": "api_v1_engineering_geometry_length_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": []
        },
        "/api/v1/engineering/process_job/{id}": {
            "get": {
                "operationId": "api_v1_engineering_process_job_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/api/v1/engineering/process_results": {
            "get": {
                "operationId": "api_v1_engineering_process_results_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": []
        },
        "/api/v1/engineering/process_settings_templates/": {
            "get": {
                "operationId": "api_v1_engineering_process_settings_templates_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "network_operator",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "process__id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProcessSettingsTemplate"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "post": {
                "operationId": "api_v1_engineering_process_settings_templates_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProcessSettingsTemplate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProcessSettingsTemplate"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": []
        },
        "/api/v1/engineering/process_settings_templates/{id}/": {
            "get": {
                "operationId": "api_v1_engineering_process_settings_templates_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProcessSettingsTemplate"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "put": {
                "operationId": "api_v1_engineering_process_settings_templates_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProcessSettingsTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProcessSettingsTemplate"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "patch": {
                "operationId": "api_v1_engineering_process_settings_templates_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProcessSettingsTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProcessSettingsTemplate"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "delete": {
                "operationId": "api_v1_engineering_process_settings_templates_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Config File.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/engineering/processes/": {
            "get": {
                "operationId": "api_v1_engineering_processes_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_draft",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_processed",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SimpleProcess"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "post": {
                "operationId": "api_v1_engineering_processes_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Process"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Process"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": []
        },
        "/api/v1/engineering/processes/async/": {
            "post": {
                "operationId": "api_v1_engineering_processes_async_list",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Process"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Process"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": []
        },
        "/api/v1/engineering/processes/{id}/": {
            "get": {
                "operationId": "api_v1_engineering_processes_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Process"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "put": {
                "operationId": "api_v1_engineering_processes_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Process"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Process"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "patch": {
                "operationId": "api_v1_engineering_processes_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Process"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Process"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "delete": {
                "operationId": "api_v1_engineering_processes_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this process.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/engineering/processes/{id}/async/": {
            "put": {
                "operationId": "api_v1_engineering_processes_async_update",
                "description": "Performs job operations.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Process"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Process"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "patch": {
                "operationId": "api_v1_engineering_processes_async_partial_update",
                "description": "Performs job operations.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Process"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Process"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "delete": {
                "operationId": "api_v1_engineering_processes_async_delete",
                "description": "Performs job operations.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this process.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/engineering/processes/{id}/can_be_deleted/": {
            "get": {
                "operationId": "api_v1_engineering_processes_can_be_deleted",
                "description": "Returns if it's possible to delete the process work load",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Process"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this process.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/engineering/processes/{id}/regions/": {
            "get": {
                "operationId": "api_v1_engineering_processes_regions",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Process"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this process.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/engineering/processes/{id}/unique_field_values/": {
            "get": {
                "operationId": "api_v1_engineering_processes_unique_field_values",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Process"
                        }
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this process.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/engineering/start_process/{id}": {
            "post": {
                "operationId": "api_v1_engineering_start_process_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/api/v1/engineering/validate_process/{id}": {
            "post": {
                "operationId": "api_v1_engineering_validate_process_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Engineering"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/api/v1/entity_file_folders/": {
            "get": {
                "operationId": "api_v1_entity_file_folders_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "object_id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "content_type_id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EntityFileFolder"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Entity file folders"
                ]
            },
            "post": {
                "operationId": "api_v1_entity_file_folders_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EntityFileFolder"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EntityFileFolder"
                        }
                    }
                },
                "tags": [
                    "Entity file folders"
                ]
            },
            "parameters": []
        },
        "/api/v1/entity_file_folders/{id}/": {
            "put": {
                "operationId": "api_v1_entity_file_folders_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EntityFileFolder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EntityFileFolder"
                        }
                    }
                },
                "tags": [
                    "Entity file folders"
                ]
            },
            "patch": {
                "operationId": "api_v1_entity_file_folders_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EntityFileFolder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EntityFileFolder"
                        }
                    }
                },
                "tags": [
                    "Entity file folders"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this entity file folder.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/entity_files/": {
            "get": {
                "operationId": "api_v1_entity_files_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "app_label",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "object_id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "content_type_id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "folder_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EntityFile"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Entity files"
                ]
            },
            "post": {
                "operationId": "api_v1_entity_files_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EntityFile"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EntityFile"
                        }
                    }
                },
                "tags": [
                    "Entity files"
                ]
            },
            "parameters": []
        },
        "/api/v1/entity_files/batch/": {
            "post": {
                "operationId": "api_v1_entity_files_batch_create",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EntityFile"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EntityFile"
                        }
                    }
                },
                "tags": [
                    "Entity files"
                ]
            },
            "delete": {
                "operationId": "api_v1_entity_files_batch_delete",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Entity files"
                ]
            },
            "parameters": []
        },
        "/api/v1/entity_files/delete/": {
            "delete": {
                "operationId": "api_v1_entity_files_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Entity files"
                ]
            },
            "parameters": []
        },
        "/api/v1/entity_files/linked_folder/": {
            "get": {
                "operationId": "api_v1_entity_files_linked_folder",
                "description": "Returns the list of link folders for a to-many file_relation, putting as the first result a link folder to the\nsource of such relation and then one folder for each model instance which is a target of it.\nExpects three query parameters:\n* content_type_id: id of the content type of the source of the to-many relation\n* object_id: id of the model instance of the source of the to-many relation\n* link: key of the to-many relation, which will be one of the relations declared in the file_relation property\nof the CustomMeta inner class of the model which is the source of the to-many relation",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "app_label",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "object_id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "content_type_id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "folder_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EntityFile"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Entity files"
                ]
            },
            "parameters": []
        },
        "/api/v1/entity_files/zipped_files/": {
            "post": {
                "operationId": "api_v1_entity_files_zipped_files",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EntityFile"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EntityFile"
                        }
                    }
                },
                "tags": [
                    "Entity files"
                ]
            },
            "parameters": []
        },
        "/api/v1/entity_files/{id}/": {
            "get": {
                "operationId": "api_v1_entity_files_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EntityFile"
                        }
                    }
                },
                "tags": [
                    "Entity files"
                ]
            },
            "put": {
                "operationId": "api_v1_entity_files_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EntityFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EntityFile"
                        }
                    }
                },
                "tags": [
                    "Entity files"
                ]
            },
            "patch": {
                "operationId": "api_v1_entity_files_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EntityFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EntityFile"
                        }
                    }
                },
                "tags": [
                    "Entity files"
                ]
            },
            "delete": {
                "operationId": "api_v1_entity_files_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Entity files"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this entity file.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/equipment/": {
            "get": {
                "operationId": "api_v1_equipment_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "equipment_category",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "crews",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "company_type",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Equipment"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Equipment"
                ]
            },
            "post": {
                "operationId": "api_v1_equipment_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Equipment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Equipment"
                        }
                    }
                },
                "tags": [
                    "Equipment"
                ]
            },
            "parameters": []
        },
        "/api/v1/equipment/{id}/": {
            "get": {
                "operationId": "api_v1_equipment_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Equipment"
                        }
                    }
                },
                "tags": [
                    "Equipment"
                ]
            },
            "put": {
                "operationId": "api_v1_equipment_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Equipment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Equipment"
                        }
                    }
                },
                "tags": [
                    "Equipment"
                ]
            },
            "patch": {
                "operationId": "api_v1_equipment_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Equipment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Equipment"
                        }
                    }
                },
                "tags": [
                    "Equipment"
                ]
            },
            "delete": {
                "operationId": "api_v1_equipment_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Equipment"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this equipment.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/equipment_categories/": {
            "get": {
                "operationId": "api_v1_equipment_categories_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/EquipmentCategory"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Equipment categories"
                ]
            },
            "post": {
                "operationId": "api_v1_equipment_categories_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EquipmentCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EquipmentCategory"
                        }
                    }
                },
                "tags": [
                    "Equipment categories"
                ]
            },
            "parameters": []
        },
        "/api/v1/equipment_categories/{id}/": {
            "get": {
                "operationId": "api_v1_equipment_categories_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EquipmentCategory"
                        }
                    }
                },
                "tags": [
                    "Equipment categories"
                ]
            },
            "put": {
                "operationId": "api_v1_equipment_categories_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EquipmentCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EquipmentCategory"
                        }
                    }
                },
                "tags": [
                    "Equipment categories"
                ]
            },
            "patch": {
                "operationId": "api_v1_equipment_categories_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EquipmentCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/EquipmentCategory"
                        }
                    }
                },
                "tags": [
                    "Equipment categories"
                ]
            },
            "delete": {
                "operationId": "api_v1_equipment_categories_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Equipment categories"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this equipment category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/grid_views/": {
            "get": {
                "operationId": "api_v1_grid_views_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "grid_id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "owner",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/GridView"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Grid views"
                ]
            },
            "post": {
                "operationId": "api_v1_grid_views_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GridView"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GridView"
                        }
                    }
                },
                "tags": [
                    "Grid views"
                ]
            },
            "parameters": []
        },
        "/api/v1/grid_views/{id}/": {
            "get": {
                "operationId": "api_v1_grid_views_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GridView"
                        }
                    }
                },
                "tags": [
                    "Grid views"
                ]
            },
            "put": {
                "operationId": "api_v1_grid_views_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GridView"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GridView"
                        }
                    }
                },
                "tags": [
                    "Grid views"
                ]
            },
            "patch": {
                "operationId": "api_v1_grid_views_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GridView"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GridView"
                        }
                    }
                },
                "tags": [
                    "Grid views"
                ]
            },
            "delete": {
                "operationId": "api_v1_grid_views_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Grid views"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this grid view.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/infrastructure_categories/": {
            "get": {
                "operationId": "api_v1_infrastructure_categories_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InfrastructureCategory"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Infrastructure categories"
                ]
            },
            "post": {
                "operationId": "api_v1_infrastructure_categories_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InfrastructureCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InfrastructureCategory"
                        }
                    }
                },
                "tags": [
                    "Infrastructure categories"
                ]
            },
            "parameters": []
        },
        "/api/v1/infrastructure_categories/{id}/": {
            "get": {
                "operationId": "api_v1_infrastructure_categories_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InfrastructureCategory"
                        }
                    }
                },
                "tags": [
                    "Infrastructure categories"
                ]
            },
            "put": {
                "operationId": "api_v1_infrastructure_categories_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InfrastructureCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InfrastructureCategory"
                        }
                    }
                },
                "tags": [
                    "Infrastructure categories"
                ]
            },
            "patch": {
                "operationId": "api_v1_infrastructure_categories_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InfrastructureCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InfrastructureCategory"
                        }
                    }
                },
                "tags": [
                    "Infrastructure categories"
                ]
            },
            "delete": {
                "operationId": "api_v1_infrastructure_categories_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Infrastructure categories"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this infrastructure category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/integrations/{integration_name}": {
            "post": {
                "operationId": "api_v1_integrations_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Integrations"
                ]
            },
            "parameters": [
                {
                    "name": "integration_name",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/api/v1/invoicing/deliverable_payable_item_templates/": {
            "get": {
                "operationId": "api_v1_invoicing_deliverable_payable_item_templates_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "post": {
                "operationId": "api_v1_invoicing_deliverable_payable_item_templates_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": []
        },
        "/api/v1/invoicing/deliverable_payable_item_templates/batch/": {
            "post": {
                "operationId": "api_v1_invoicing_deliverable_payable_item_templates_batch_create",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "delete": {
                "operationId": "api_v1_invoicing_deliverable_payable_item_templates_batch_delete",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": []
        },
        "/api/v1/invoicing/deliverable_payable_item_templates/{id}/": {
            "get": {
                "operationId": "api_v1_invoicing_deliverable_payable_item_templates_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "put": {
                "operationId": "api_v1_invoicing_deliverable_payable_item_templates_update",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "patch": {
                "operationId": "api_v1_invoicing_deliverable_payable_item_templates_partial_update",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this deliverable payable item template.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/invoicing/invoice_item_work_items/": {
            "get": {
                "operationId": "api_v1_invoicing_invoice_item_work_items_list",
                "description": "Returns all the Work Item information grouped by Invoice Item.",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_order",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "assign_to_person",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_workable",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "production_report",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_package",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_orders",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "area",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "crew",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "subcontractor",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "available_to_person",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "design_element",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "design_element_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name_or_system_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "siblings_for",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": []
        },
        "/api/v1/invoicing/invoice_item_work_items/{id}/": {
            "put": {
                "operationId": "api_v1_invoicing_invoice_item_work_items_update",
                "description": "Returns all the Work Item information grouped by Invoice Item.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "patch": {
                "operationId": "api_v1_invoicing_invoice_item_work_items_partial_update",
                "description": "Returns all the Work Item information grouped by Invoice Item.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Work Item.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/invoicing/invoice_items/": {
            "get": {
                "operationId": "api_v1_invoicing_invoice_items_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_packages",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_orders",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_payable",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_receivable",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "area",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "design_elements",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InvoiceItem"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": []
        },
        "/api/v1/invoicing/invoice_items/batch/": {
            "post": {
                "operationId": "api_v1_invoicing_invoice_items_batch_create",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InvoiceItem"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InvoiceItem"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "delete": {
                "operationId": "api_v1_invoicing_invoice_items_batch_delete",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": []
        },
        "/api/v1/invoicing/invoice_items/{id}/": {
            "get": {
                "operationId": "api_v1_invoicing_invoice_items_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InvoiceItem"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "put": {
                "operationId": "api_v1_invoicing_invoice_items_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InvoiceItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InvoiceItem"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "patch": {
                "operationId": "api_v1_invoicing_invoice_items_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InvoiceItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InvoiceItem"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this invoice item.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/invoicing/invoice_items_query": {
            "get": {
                "operationId": "api_v1_invoicing_invoice_items_query_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": []
        },
        "/api/v1/invoicing/invoices/": {
            "get": {
                "operationId": "api_v1_invoicing_invoices_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "payee",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "payer",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tax_code",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id_not",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "work_order",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "work_package",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "is_empty",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_payable",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_receivable",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "area",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "statuses",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "client_invoice_number_or_system_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Invoice"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "post": {
                "operationId": "api_v1_invoicing_invoices_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": []
        },
        "/api/v1/invoicing/invoices/batch/": {
            "post": {
                "operationId": "api_v1_invoicing_invoices_batch_create",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "delete": {
                "operationId": "api_v1_invoicing_invoices_batch_delete",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": []
        },
        "/api/v1/invoicing/invoices/pdf/": {
            "get": {
                "operationId": "api_v1_invoicing_invoices_multi_pdf",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "payee",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "payer",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tax_code",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id_not",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "work_order",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "work_package",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "is_empty",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_payable",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_receivable",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "area",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "statuses",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "client_invoice_number_or_system_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Invoice"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": []
        },
        "/api/v1/invoicing/invoices/{id}/": {
            "get": {
                "operationId": "api_v1_invoicing_invoices_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "put": {
                "operationId": "api_v1_invoicing_invoices_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "patch": {
                "operationId": "api_v1_invoicing_invoices_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "delete": {
                "operationId": "api_v1_invoicing_invoices_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this invoice.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/invoicing/invoices/{id}/aggregated_items/": {
            "get": {
                "operationId": "api_v1_invoicing_invoices_aggregated_items",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this invoice.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/invoicing/invoices/{id}/detailed_items/": {
            "get": {
                "operationId": "api_v1_invoicing_invoices_detailed_items",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this invoice.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/invoicing/invoices/{id}/pdf/": {
            "get": {
                "operationId": "api_v1_invoicing_invoices_single_pdf",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                },
                "produces": [
                    "application/pdf"
                ],
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this invoice.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/invoicing/invoices_query": {
            "get": {
                "operationId": "api_v1_invoicing_invoices_query_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": []
        },
        "/api/v1/invoicing/labor_material_payable_item_templates/": {
            "get": {
                "operationId": "api_v1_invoicing_labor_material_payable_item_templates_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "program",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "post": {
                "operationId": "api_v1_invoicing_labor_material_payable_item_templates_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": []
        },
        "/api/v1/invoicing/labor_material_payable_item_templates/batch/": {
            "post": {
                "operationId": "api_v1_invoicing_labor_material_payable_item_templates_batch_create",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "delete": {
                "operationId": "api_v1_invoicing_labor_material_payable_item_templates_batch_delete",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": []
        },
        "/api/v1/invoicing/labor_material_payable_item_templates/{id}/": {
            "get": {
                "operationId": "api_v1_invoicing_labor_material_payable_item_templates_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "put": {
                "operationId": "api_v1_invoicing_labor_material_payable_item_templates_update",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "patch": {
                "operationId": "api_v1_invoicing_labor_material_payable_item_templates_partial_update",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this labor material payable item template.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/invoicing/pricing_rule_sets/": {
            "get": {
                "operationId": "api_v1_invoicing_pricing_rule_sets_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "program",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "subcontract",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "no_subcontract",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PricingRuleSet"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "post": {
                "operationId": "api_v1_invoicing_pricing_rule_sets_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PricingRuleSet"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PricingRuleSet"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": []
        },
        "/api/v1/invoicing/pricing_rule_sets/{id}/": {
            "get": {
                "operationId": "api_v1_invoicing_pricing_rule_sets_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PricingRuleSet"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "put": {
                "operationId": "api_v1_invoicing_pricing_rule_sets_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PricingRuleSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PricingRuleSet"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "patch": {
                "operationId": "api_v1_invoicing_pricing_rule_sets_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PricingRuleSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PricingRuleSet"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "delete": {
                "operationId": "api_v1_invoicing_pricing_rule_sets_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this pricing rule set.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/invoicing/progress_payable_items/": {
            "get": {
                "operationId": "api_v1_invoicing_progress_payable_items_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_order",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_payable",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_receivable",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_package",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProgressPayableItem"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "post": {
                "operationId": "api_v1_invoicing_progress_payable_items_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProgressPayableItem"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProgressPayableItem"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": []
        },
        "/api/v1/invoicing/progress_payable_items/batch/": {
            "post": {
                "operationId": "api_v1_invoicing_progress_payable_items_batch_create",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProgressPayableItem"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProgressPayableItem"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "delete": {
                "operationId": "api_v1_invoicing_progress_payable_items_batch_delete",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": []
        },
        "/api/v1/invoicing/progress_payable_items/{id}/": {
            "get": {
                "operationId": "api_v1_invoicing_progress_payable_items_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProgressPayableItem"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "put": {
                "operationId": "api_v1_invoicing_progress_payable_items_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProgressPayableItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProgressPayableItem"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "patch": {
                "operationId": "api_v1_invoicing_progress_payable_items_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProgressPayableItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProgressPayableItem"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "delete": {
                "operationId": "api_v1_invoicing_progress_payable_items_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this progress payable item.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/invoicing/purchase_orders/": {
            "get": {
                "operationId": "api_v1_invoicing_purchase_orders_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_order",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_payable",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_receivable",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_package",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PurchaseOrder"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "post": {
                "operationId": "api_v1_invoicing_purchase_orders_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrder"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrder"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": []
        },
        "/api/v1/invoicing/purchase_orders/batch/": {
            "post": {
                "operationId": "api_v1_invoicing_purchase_orders_batch_create",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrder"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrder"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "delete": {
                "operationId": "api_v1_invoicing_purchase_orders_batch_delete",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": []
        },
        "/api/v1/invoicing/purchase_orders/{id}/": {
            "get": {
                "operationId": "api_v1_invoicing_purchase_orders_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrder"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "put": {
                "operationId": "api_v1_invoicing_purchase_orders_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrder"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "patch": {
                "operationId": "api_v1_invoicing_purchase_orders_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrder"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "delete": {
                "operationId": "api_v1_invoicing_purchase_orders_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this purchase order.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/invoicing/regions_tax_codes/": {
            "get": {
                "operationId": "api_v1_invoicing_regions_tax_codes_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RegionTaxCode"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "post": {
                "operationId": "api_v1_invoicing_regions_tax_codes_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RegionTaxCode"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RegionTaxCode"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": []
        },
        "/api/v1/invoicing/regions_tax_codes/{id}/": {
            "get": {
                "operationId": "api_v1_invoicing_regions_tax_codes_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RegionTaxCode"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "put": {
                "operationId": "api_v1_invoicing_regions_tax_codes_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RegionTaxCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RegionTaxCode"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "patch": {
                "operationId": "api_v1_invoicing_regions_tax_codes_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RegionTaxCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RegionTaxCode"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "delete": {
                "operationId": "api_v1_invoicing_regions_tax_codes_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this region tax code.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/invoicing/subcontract_payable_item_templates/": {
            "get": {
                "operationId": "api_v1_invoicing_subcontract_payable_item_templates_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SubcontractPayableItemTemplate"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "post": {
                "operationId": "api_v1_invoicing_subcontract_payable_item_templates_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubcontractPayableItemTemplate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SubcontractPayableItemTemplate"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": []
        },
        "/api/v1/invoicing/subcontract_payable_item_templates/batch/": {
            "post": {
                "operationId": "api_v1_invoicing_subcontract_payable_item_templates_batch_create",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubcontractPayableItemTemplate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SubcontractPayableItemTemplate"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "delete": {
                "operationId": "api_v1_invoicing_subcontract_payable_item_templates_batch_delete",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": []
        },
        "/api/v1/invoicing/subcontract_payable_item_templates/{id}/": {
            "get": {
                "operationId": "api_v1_invoicing_subcontract_payable_item_templates_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SubcontractPayableItemTemplate"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "put": {
                "operationId": "api_v1_invoicing_subcontract_payable_item_templates_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubcontractPayableItemTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SubcontractPayableItemTemplate"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "patch": {
                "operationId": "api_v1_invoicing_subcontract_payable_item_templates_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubcontractPayableItemTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SubcontractPayableItemTemplate"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "delete": {
                "operationId": "api_v1_invoicing_subcontract_payable_item_templates_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this subcontract payable item template.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/invoicing/tax_codes/": {
            "get": {
                "operationId": "api_v1_invoicing_tax_codes_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TaxCode"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "post": {
                "operationId": "api_v1_invoicing_tax_codes_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaxCode"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TaxCode"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": []
        },
        "/api/v1/invoicing/tax_codes/{id}/": {
            "get": {
                "operationId": "api_v1_invoicing_tax_codes_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TaxCode"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "put": {
                "operationId": "api_v1_invoicing_tax_codes_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaxCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TaxCode"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "patch": {
                "operationId": "api_v1_invoicing_tax_codes_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaxCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TaxCode"
                        }
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "delete": {
                "operationId": "api_v1_invoicing_tax_codes_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Invoicing"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this tax code.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/job_status/{id}": {
            "get": {
                "operationId": "api_v1_job_status_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Job status"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/api/v1/labor_items/": {
            "get": {
                "operationId": "api_v1_labor_items_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/QuantityDescription"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Labor items"
                ]
            },
            "post": {
                "operationId": "api_v1_labor_items_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QuantityDescription"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantityDescription"
                        }
                    }
                },
                "tags": [
                    "Labor items"
                ]
            },
            "parameters": []
        },
        "/api/v1/labor_items/{id}/": {
            "get": {
                "operationId": "api_v1_labor_items_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantityDescription"
                        }
                    }
                },
                "tags": [
                    "Labor items"
                ]
            },
            "put": {
                "operationId": "api_v1_labor_items_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QuantityDescription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantityDescription"
                        }
                    }
                },
                "tags": [
                    "Labor items"
                ]
            },
            "patch": {
                "operationId": "api_v1_labor_items_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QuantityDescription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantityDescription"
                        }
                    }
                },
                "tags": [
                    "Labor items"
                ]
            },
            "delete": {
                "operationId": "api_v1_labor_items_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Labor items"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this quantity description.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/material_categories/": {
            "get": {
                "operationId": "api_v1_material_categories_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rank",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MaterialCategory"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Material categories"
                ]
            },
            "post": {
                "operationId": "api_v1_material_categories_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MaterialCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MaterialCategory"
                        }
                    }
                },
                "tags": [
                    "Material categories"
                ]
            },
            "parameters": []
        },
        "/api/v1/material_categories/batch/": {
            "post": {
                "operationId": "api_v1_material_categories_batch_create",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MaterialCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MaterialCategory"
                        }
                    }
                },
                "tags": [
                    "Material categories"
                ]
            },
            "delete": {
                "operationId": "api_v1_material_categories_batch_delete",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Material categories"
                ]
            },
            "parameters": []
        },
        "/api/v1/material_categories/{id}/": {
            "get": {
                "operationId": "api_v1_material_categories_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MaterialCategory"
                        }
                    }
                },
                "tags": [
                    "Material categories"
                ]
            },
            "put": {
                "operationId": "api_v1_material_categories_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MaterialCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MaterialCategory"
                        }
                    }
                },
                "tags": [
                    "Material categories"
                ]
            },
            "patch": {
                "operationId": "api_v1_material_categories_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MaterialCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MaterialCategory"
                        }
                    }
                },
                "tags": [
                    "Material categories"
                ]
            },
            "delete": {
                "operationId": "api_v1_material_categories_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Material categories"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this material category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/material_quantity_descriptions/": {
            "get": {
                "operationId": "api_v1_material_quantity_descriptions_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/QuantityDescription"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Material quantity descriptions"
                ]
            },
            "post": {
                "operationId": "api_v1_material_quantity_descriptions_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QuantityDescription"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantityDescription"
                        }
                    }
                },
                "tags": [
                    "Material quantity descriptions"
                ]
            },
            "parameters": []
        },
        "/api/v1/material_quantity_descriptions/{id}/": {
            "get": {
                "operationId": "api_v1_material_quantity_descriptions_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantityDescription"
                        }
                    }
                },
                "tags": [
                    "Material quantity descriptions"
                ]
            },
            "put": {
                "operationId": "api_v1_material_quantity_descriptions_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QuantityDescription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantityDescription"
                        }
                    }
                },
                "tags": [
                    "Material quantity descriptions"
                ]
            },
            "patch": {
                "operationId": "api_v1_material_quantity_descriptions_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QuantityDescription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantityDescription"
                        }
                    }
                },
                "tags": [
                    "Material quantity descriptions"
                ]
            },
            "delete": {
                "operationId": "api_v1_material_quantity_descriptions_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Material quantity descriptions"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this quantity description.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/materials/": {
            "get": {
                "operationId": "api_v1_materials_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "material_categories",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rank",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Material"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Materials"
                ]
            },
            "post": {
                "operationId": "api_v1_materials_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Material"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Material"
                        }
                    }
                },
                "tags": [
                    "Materials"
                ]
            },
            "parameters": []
        },
        "/api/v1/materials/batch/": {
            "post": {
                "operationId": "api_v1_materials_batch_create",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Material"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Material"
                        }
                    }
                },
                "tags": [
                    "Materials"
                ]
            },
            "delete": {
                "operationId": "api_v1_materials_batch_delete",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Materials"
                ]
            },
            "parameters": []
        },
        "/api/v1/materials/{id}/": {
            "get": {
                "operationId": "api_v1_materials_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Material"
                        }
                    }
                },
                "tags": [
                    "Materials"
                ]
            },
            "put": {
                "operationId": "api_v1_materials_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Material"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Material"
                        }
                    }
                },
                "tags": [
                    "Materials"
                ]
            },
            "patch": {
                "operationId": "api_v1_materials_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Material"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Material"
                        }
                    }
                },
                "tags": [
                    "Materials"
                ]
            },
            "delete": {
                "operationId": "api_v1_materials_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Materials"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this material.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/mobile/crews/": {
            "get": {
                "operationId": "api_v1_mobile_crews_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "crew_categories",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_employee_or_subcontractor_on_program",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "not_on_program",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company_type",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CrewNested"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "post": {
                "operationId": "api_v1_mobile_crews_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewNested"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewNested"
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "parameters": []
        },
        "/api/v1/mobile/crews/{id}/": {
            "get": {
                "operationId": "api_v1_mobile_crews_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewNested"
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "put": {
                "operationId": "api_v1_mobile_crews_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewNested"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewNested"
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "patch": {
                "operationId": "api_v1_mobile_crews_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CrewNested"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CrewNested"
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "delete": {
                "operationId": "api_v1_mobile_crews_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this crew.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/mobile/devices/": {
            "post": {
                "operationId": "api_v1_mobile_devices_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "put": {
                "operationId": "api_v1_mobile_devices_update",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "patch": {
                "operationId": "api_v1_mobile_devices_partial_update",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "delete": {
                "operationId": "api_v1_mobile_devices_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "parameters": []
        },
        "/api/v1/mobile/devices/notification_key": {
            "get": {
                "operationId": "api_v1_mobile_devices_notification_key_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "parameters": []
        },
        "/api/v1/mobile/equipment/": {
            "get": {
                "operationId": "api_v1_mobile_equipment_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "equipment_category",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "crews",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "company_type",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Equipment"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "post": {
                "operationId": "api_v1_mobile_equipment_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Equipment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Equipment"
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "parameters": []
        },
        "/api/v1/mobile/equipment/{id}/": {
            "get": {
                "operationId": "api_v1_mobile_equipment_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Equipment"
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "put": {
                "operationId": "api_v1_mobile_equipment_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Equipment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Equipment"
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "patch": {
                "operationId": "api_v1_mobile_equipment_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Equipment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Equipment"
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "delete": {
                "operationId": "api_v1_mobile_equipment_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this equipment.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/mobile/extra_work_order_requests/": {
            "get": {
                "operationId": "api_v1_mobile_extra_work_order_requests_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "approver",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "system_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullExtraWorkOrderRequest"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "post": {
                "operationId": "api_v1_mobile_extra_work_order_requests_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FullExtraWorkOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FullExtraWorkOrderRequest"
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "parameters": []
        },
        "/api/v1/mobile/extra_work_order_requests/{id}/": {
            "get": {
                "operationId": "api_v1_mobile_extra_work_order_requests_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FullExtraWorkOrderRequest"
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "put": {
                "operationId": "api_v1_mobile_extra_work_order_requests_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FullExtraWorkOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FullExtraWorkOrderRequest"
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "patch": {
                "operationId": "api_v1_mobile_extra_work_order_requests_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FullExtraWorkOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FullExtraWorkOrderRequest"
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "delete": {
                "operationId": "api_v1_mobile_extra_work_order_requests_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this extra work order request.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/mobile/materials/": {
            "get": {
                "operationId": "api_v1_mobile_materials_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "quantity_description",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "material",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "network_operator",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "network_operators",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "network_operator_categories",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullMaterial"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "parameters": []
        },
        "/api/v1/mobile/materials/{id}/": {
            "get": {
                "operationId": "api_v1_mobile_materials_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FullMaterial"
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this material.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/mobile/production_reports/": {
            "get": {
                "operationId": "api_v1_mobile_production_reports_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "approver",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "system_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created_from",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "area",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_order",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "approver_or_created_by",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullProductionReportRead"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "post": {
                "operationId": "api_v1_mobile_production_reports_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FullProductionReportWrite"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FullProductionReportWrite"
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "parameters": []
        },
        "/api/v1/mobile/production_reports/{id}/": {
            "get": {
                "operationId": "api_v1_mobile_production_reports_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FullProductionReportRead"
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "put": {
                "operationId": "api_v1_mobile_production_reports_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FullProductionReportWrite"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FullProductionReportWrite"
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "patch": {
                "operationId": "api_v1_mobile_production_reports_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FullProductionReportWrite"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FullProductionReportWrite"
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "delete": {
                "operationId": "api_v1_mobile_production_reports_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this production report.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/mobile/timesheets/": {
            "get": {
                "operationId": "api_v1_mobile_timesheets_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullTimesheet"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "post": {
                "operationId": "api_v1_mobile_timesheets_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FullTimesheet"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FullTimesheet"
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "parameters": []
        },
        "/api/v1/mobile/timesheets/{id}/": {
            "get": {
                "operationId": "api_v1_mobile_timesheets_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FullTimesheet"
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "put": {
                "operationId": "api_v1_mobile_timesheets_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FullTimesheet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FullTimesheet"
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "patch": {
                "operationId": "api_v1_mobile_timesheets_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FullTimesheet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FullTimesheet"
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "delete": {
                "operationId": "api_v1_mobile_timesheets_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this timesheet.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/mobile/work_items/": {
            "get": {
                "operationId": "api_v1_mobile_work_items_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_order",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "assign_to_person",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_workable",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "production_report",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_package",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_orders",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "area",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "crew",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "subcontractor",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "available_to_person",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "design_element",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "design_element_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name_or_system_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "siblings_for",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullWorkItemWithNestedFields"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "post": {
                "operationId": "api_v1_mobile_work_items_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FullWorkItemWithNestedFields"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FullWorkItemWithNestedFields"
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "parameters": []
        },
        "/api/v1/mobile/work_items/{id}/": {
            "get": {
                "operationId": "api_v1_mobile_work_items_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FullWorkItemWithNestedFields"
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "put": {
                "operationId": "api_v1_mobile_work_items_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FullWorkItemWithNestedFields"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FullWorkItemWithNestedFields"
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "patch": {
                "operationId": "api_v1_mobile_work_items_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FullWorkItemWithNestedFields"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FullWorkItemWithNestedFields"
                        }
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "delete": {
                "operationId": "api_v1_mobile_work_items_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Mobile"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Work Item.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/monitoring/heartbeat": {
            "get": {
                "operationId": "api_v1_monitoring_heartbeat_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Monitoring"
                ]
            },
            "parameters": []
        },
        "/api/v1/monitoring/migrations": {
            "get": {
                "operationId": "api_v1_monitoring_migrations_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Monitoring"
                ]
            },
            "parameters": []
        },
        "/api/v1/monitoring/version": {
            "get": {
                "operationId": "api_v1_monitoring_version_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Monitoring"
                ]
            },
            "parameters": []
        },
        "/api/v1/network_calculus/external_integration": {
            "get": {
                "operationId": "api_v1_network_calculus_external_integration_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network calculus"
                ]
            },
            "post": {
                "operationId": "api_v1_network_calculus_external_integration_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network calculus"
                ]
            },
            "parameters": []
        },
        "/api/v1/network_operator/element_categories/": {
            "get": {
                "operationId": "api_v1_network_operator_element_categories_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "design_element_category",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "network_operator",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ElementCategory"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "post": {
                "operationId": "api_v1_network_operator_element_categories_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ElementCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ElementCategory"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": []
        },
        "/api/v1/network_operator/element_categories/{id}/": {
            "get": {
                "operationId": "api_v1_network_operator_element_categories_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ElementCategory"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "put": {
                "operationId": "api_v1_network_operator_element_categories_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ElementCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ElementCategory"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "patch": {
                "operationId": "api_v1_network_operator_element_categories_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ElementCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ElementCategory"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "delete": {
                "operationId": "api_v1_network_operator_element_categories_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this element category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/network_operator/infrastructure_categories/": {
            "get": {
                "operationId": "api_v1_network_operator_infrastructure_categories_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "infrastructure_category",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "network_operator",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rank",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NetworkOperatorInfrastructureCategorySerializer"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "post": {
                "operationId": "api_v1_network_operator_infrastructure_categories_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorInfrastructureCategorySerializer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorInfrastructureCategorySerializer"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": []
        },
        "/api/v1/network_operator/infrastructure_categories/{id}/": {
            "get": {
                "operationId": "api_v1_network_operator_infrastructure_categories_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorInfrastructureCategorySerializer"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "put": {
                "operationId": "api_v1_network_operator_infrastructure_categories_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorInfrastructureCategorySerializer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorInfrastructureCategorySerializer"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "patch": {
                "operationId": "api_v1_network_operator_infrastructure_categories_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorInfrastructureCategorySerializer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorInfrastructureCategorySerializer"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "delete": {
                "operationId": "api_v1_network_operator_infrastructure_categories_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this infrastructure category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/network_operator/labor_items/": {
            "get": {
                "operationId": "api_v1_network_operator_labor_items_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/LaborItem"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "post": {
                "operationId": "api_v1_network_operator_labor_items_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LaborItem"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LaborItem"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": []
        },
        "/api/v1/network_operator/labor_items/batch/": {
            "post": {
                "operationId": "api_v1_network_operator_labor_items_batch_create",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LaborItem"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LaborItem"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "delete": {
                "operationId": "api_v1_network_operator_labor_items_batch_delete",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": []
        },
        "/api/v1/network_operator/labor_items/{id}/": {
            "get": {
                "operationId": "api_v1_network_operator_labor_items_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LaborItem"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "put": {
                "operationId": "api_v1_network_operator_labor_items_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LaborItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LaborItem"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "patch": {
                "operationId": "api_v1_network_operator_labor_items_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LaborItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LaborItem"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "delete": {
                "operationId": "api_v1_network_operator_labor_items_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this labor item.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/network_operator/material_categories/": {
            "get": {
                "operationId": "api_v1_network_operator_material_categories_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "material_category",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "network_operator",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rank",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NetworkOperatorMaterialCategorySerializer"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "post": {
                "operationId": "api_v1_network_operator_material_categories_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorMaterialCategorySerializer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorMaterialCategorySerializer"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": []
        },
        "/api/v1/network_operator/material_categories/batch/": {
            "post": {
                "operationId": "api_v1_network_operator_material_categories_batch_create",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorMaterialCategorySerializer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorMaterialCategorySerializer"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "delete": {
                "operationId": "api_v1_network_operator_material_categories_batch_delete",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": []
        },
        "/api/v1/network_operator/material_categories/{id}/": {
            "get": {
                "operationId": "api_v1_network_operator_material_categories_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorMaterialCategorySerializer"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "put": {
                "operationId": "api_v1_network_operator_material_categories_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorMaterialCategorySerializer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorMaterialCategorySerializer"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "patch": {
                "operationId": "api_v1_network_operator_material_categories_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorMaterialCategorySerializer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorMaterialCategorySerializer"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "delete": {
                "operationId": "api_v1_network_operator_material_categories_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this material category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/network_operator/materials/": {
            "get": {
                "operationId": "api_v1_network_operator_materials_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "quantity_description",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "material",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "network_operator",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "network_operators",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "network_operator_categories",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "post": {
                "operationId": "api_v1_network_operator_materials_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": []
        },
        "/api/v1/network_operator/materials/batch/": {
            "post": {
                "operationId": "api_v1_network_operator_materials_batch_create",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "delete": {
                "operationId": "api_v1_network_operator_materials_batch_delete",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": []
        },
        "/api/v1/network_operator/materials/{id}/": {
            "get": {
                "operationId": "api_v1_network_operator_materials_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "put": {
                "operationId": "api_v1_network_operator_materials_update",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "patch": {
                "operationId": "api_v1_network_operator_materials_partial_update",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "delete": {
                "operationId": "api_v1_network_operator_materials_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this material.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/network_operator/payable_item_categories/": {
            "get": {
                "operationId": "api_v1_network_operator_payable_item_categories_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "payable_item_category",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "network_operator",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rank",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NetworkOperatorPayableItemCategorySerializer"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "post": {
                "operationId": "api_v1_network_operator_payable_item_categories_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorPayableItemCategorySerializer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorPayableItemCategorySerializer"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": []
        },
        "/api/v1/network_operator/payable_item_categories/{id}/": {
            "get": {
                "operationId": "api_v1_network_operator_payable_item_categories_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorPayableItemCategorySerializer"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "put": {
                "operationId": "api_v1_network_operator_payable_item_categories_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorPayableItemCategorySerializer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorPayableItemCategorySerializer"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "patch": {
                "operationId": "api_v1_network_operator_payable_item_categories_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorPayableItemCategorySerializer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorPayableItemCategorySerializer"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "delete": {
                "operationId": "api_v1_network_operator_payable_item_categories_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this payable item category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/network_operator/premise_categories/": {
            "get": {
                "operationId": "api_v1_network_operator_premise_categories_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "premise_category",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "network_operator",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rank",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NetworkOperatorPremiseCategorySerializer"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "post": {
                "operationId": "api_v1_network_operator_premise_categories_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorPremiseCategorySerializer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorPremiseCategorySerializer"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": []
        },
        "/api/v1/network_operator/premise_categories/{id}/": {
            "get": {
                "operationId": "api_v1_network_operator_premise_categories_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorPremiseCategorySerializer"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "put": {
                "operationId": "api_v1_network_operator_premise_categories_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorPremiseCategorySerializer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorPremiseCategorySerializer"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "patch": {
                "operationId": "api_v1_network_operator_premise_categories_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorPremiseCategorySerializer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorPremiseCategorySerializer"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "delete": {
                "operationId": "api_v1_network_operator_premise_categories_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this premise category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/network_operator/premises/": {
            "get": {
                "operationId": "api_v1_network_operator_premises_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "area",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Premise"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "post": {
                "operationId": "api_v1_network_operator_premises_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Premise"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Premise"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": []
        },
        "/api/v1/network_operator/premises/{id}/": {
            "get": {
                "operationId": "api_v1_network_operator_premises_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Premise"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "put": {
                "operationId": "api_v1_network_operator_premises_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Premise"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Premise"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "patch": {
                "operationId": "api_v1_network_operator_premises_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Premise"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Premise"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "delete": {
                "operationId": "api_v1_network_operator_premises_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this premise.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/network_operator/program_segments/": {
            "get": {
                "operationId": "api_v1_network_operator_program_segments_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProgramSegment"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "post": {
                "operationId": "api_v1_network_operator_program_segments_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProgramSegment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProgramSegment"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": []
        },
        "/api/v1/network_operator/program_segments/{id}/": {
            "get": {
                "operationId": "api_v1_network_operator_program_segments_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProgramSegment"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "put": {
                "operationId": "api_v1_network_operator_program_segments_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProgramSegment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProgramSegment"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "patch": {
                "operationId": "api_v1_network_operator_program_segments_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProgramSegment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProgramSegment"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "delete": {
                "operationId": "api_v1_network_operator_program_segments_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this program segment.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/network_operator/program_segments/{id}/regions/": {
            "get": {
                "operationId": "api_v1_network_operator_program_segments_regions",
                "description": "Return a nested list of regions for a given program segment\nthe URL looks like this:\n/api/v1/program_segments/1/regions\n:param request:\n:param kwargs:\n:return:",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProgramSegment"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this program segment.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/network_operator/program_standards/": {
            "get": {
                "operationId": "api_v1_network_operator_program_standards_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProgramStandard"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "post": {
                "operationId": "api_v1_network_operator_program_standards_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProgramStandard"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProgramStandard"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": []
        },
        "/api/v1/network_operator/program_standards/{id}/": {
            "get": {
                "operationId": "api_v1_network_operator_program_standards_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProgramStandard"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "put": {
                "operationId": "api_v1_network_operator_program_standards_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProgramStandard"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProgramStandard"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "patch": {
                "operationId": "api_v1_network_operator_program_standards_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProgramStandard"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProgramStandard"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "delete": {
                "operationId": "api_v1_network_operator_program_standards_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this program standard.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/network_operator/programs/": {
            "get": {
                "operationId": "api_v1_network_operator_programs_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Program"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "post": {
                "operationId": "api_v1_network_operator_programs_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Program"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Program"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": []
        },
        "/api/v1/network_operator/programs/{id}/": {
            "get": {
                "operationId": "api_v1_network_operator_programs_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Program"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "put": {
                "operationId": "api_v1_network_operator_programs_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Program"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Program"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "patch": {
                "operationId": "api_v1_network_operator_programs_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Program"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Program"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "delete": {
                "operationId": "api_v1_network_operator_programs_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this program.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/network_operator/programs/{id}/regions/": {
            "get": {
                "operationId": "api_v1_network_operator_programs_regions",
                "summary": "Return a nested list of regions for a given program",
                "description": "the URL looks like this:\n/api/v1/programs/1/regions\n:param request:\n:param kwargs:\n:return:",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Program"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this program.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/network_operator/region_levels/": {
            "get": {
                "operationId": "api_v1_network_operator_region_levels_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "network_operator",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RegionLevel"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "post": {
                "operationId": "api_v1_network_operator_region_levels_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RegionLevel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RegionLevel"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": []
        },
        "/api/v1/network_operator/region_levels/{id}/": {
            "get": {
                "operationId": "api_v1_network_operator_region_levels_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RegionLevel"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "put": {
                "operationId": "api_v1_network_operator_region_levels_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RegionLevel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RegionLevel"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "patch": {
                "operationId": "api_v1_network_operator_region_levels_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RegionLevel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RegionLevel"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "delete": {
                "operationId": "api_v1_network_operator_region_levels_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this region level.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/network_operator/regions/": {
            "get": {
                "operationId": "api_v1_network_operator_regions_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Region"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "post": {
                "operationId": "api_v1_network_operator_regions_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Region"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Region"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": []
        },
        "/api/v1/network_operator/regions/{id}/": {
            "get": {
                "operationId": "api_v1_network_operator_regions_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Region"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "put": {
                "operationId": "api_v1_network_operator_regions_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Region"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Region"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "patch": {
                "operationId": "api_v1_network_operator_regions_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Region"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Region"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "delete": {
                "operationId": "api_v1_network_operator_regions_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this region.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/network_operator/simple_regions/": {
            "get": {
                "operationId": "api_v1_network_operator_simple_regions_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SimpleRegion"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "post": {
                "operationId": "api_v1_network_operator_simple_regions_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SimpleRegion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SimpleRegion"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": []
        },
        "/api/v1/network_operator/simple_regions/{id}/": {
            "get": {
                "operationId": "api_v1_network_operator_simple_regions_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SimpleRegion"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "put": {
                "operationId": "api_v1_network_operator_simple_regions_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SimpleRegion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SimpleRegion"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "patch": {
                "operationId": "api_v1_network_operator_simple_regions_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SimpleRegion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SimpleRegion"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "delete": {
                "operationId": "api_v1_network_operator_simple_regions_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this region.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/network_operator/work_order_categories/": {
            "get": {
                "operationId": "api_v1_network_operator_work_order_categories_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_order_category",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "network_operator",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rank",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NetworkOperatorWorkOrderCategorySerializer"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "post": {
                "operationId": "api_v1_network_operator_work_order_categories_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorWorkOrderCategorySerializer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorWorkOrderCategorySerializer"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": []
        },
        "/api/v1/network_operator/work_order_categories/{id}/": {
            "get": {
                "operationId": "api_v1_network_operator_work_order_categories_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorWorkOrderCategorySerializer"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "put": {
                "operationId": "api_v1_network_operator_work_order_categories_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorWorkOrderCategorySerializer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorWorkOrderCategorySerializer"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "patch": {
                "operationId": "api_v1_network_operator_work_order_categories_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorWorkOrderCategorySerializer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkOperatorWorkOrderCategorySerializer"
                        }
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "delete": {
                "operationId": "api_v1_network_operator_work_order_categories_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network operator"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this work order category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/network_operators/": {
            "get": {
                "operationId": "api_v1_network_operators_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NetworkOperator"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Network operators"
                ]
            },
            "post": {
                "operationId": "api_v1_network_operators_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkOperator"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkOperator"
                        }
                    }
                },
                "tags": [
                    "Network operators"
                ]
            },
            "parameters": []
        },
        "/api/v1/network_operators/{id}/": {
            "get": {
                "operationId": "api_v1_network_operators_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkOperator"
                        }
                    }
                },
                "tags": [
                    "Network operators"
                ]
            },
            "put": {
                "operationId": "api_v1_network_operators_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkOperator"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkOperator"
                        }
                    }
                },
                "tags": [
                    "Network operators"
                ]
            },
            "patch": {
                "operationId": "api_v1_network_operators_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetworkOperator"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkOperator"
                        }
                    }
                },
                "tags": [
                    "Network operators"
                ]
            },
            "delete": {
                "operationId": "api_v1_network_operators_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Network operators"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this company.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/network_operators/{id}/regions/": {
            "get": {
                "operationId": "api_v1_network_operators_regions",
                "summary": "Return a nested list of regions for a given network operator",
                "description": "the URL looks like this:\n/api/v1/network_operators/1/regions\n:param request:\n:param kwargs:\n:return:",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkOperator"
                        }
                    }
                },
                "tags": [
                    "Network operators"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this company.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/payable_item_categories/": {
            "get": {
                "operationId": "api_v1_payable_item_categories_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PayableItemCategory"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Payable item categories"
                ]
            },
            "post": {
                "operationId": "api_v1_payable_item_categories_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayableItemCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PayableItemCategory"
                        }
                    }
                },
                "tags": [
                    "Payable item categories"
                ]
            },
            "parameters": []
        },
        "/api/v1/payable_item_categories/{id}/": {
            "get": {
                "operationId": "api_v1_payable_item_categories_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PayableItemCategory"
                        }
                    }
                },
                "tags": [
                    "Payable item categories"
                ]
            },
            "put": {
                "operationId": "api_v1_payable_item_categories_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayableItemCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PayableItemCategory"
                        }
                    }
                },
                "tags": [
                    "Payable item categories"
                ]
            },
            "patch": {
                "operationId": "api_v1_payable_item_categories_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayableItemCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PayableItemCategory"
                        }
                    }
                },
                "tags": [
                    "Payable item categories"
                ]
            },
            "delete": {
                "operationId": "api_v1_payable_item_categories_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Payable item categories"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this payable item category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/permissions_tree_view/{permission_for}/{permission_type}": {
            "get": {
                "operationId": "api_v1_permissions_tree_view_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Permissions tree view"
                ]
            },
            "post": {
                "operationId": "api_v1_permissions_tree_view_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Permissions tree view"
                ]
            },
            "parameters": [
                {
                    "name": "permission_for",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "permission_type",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/api/v1/premise_categories/": {
            "get": {
                "operationId": "api_v1_premise_categories_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PremiseCategory"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Premise categories"
                ]
            },
            "post": {
                "operationId": "api_v1_premise_categories_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PremiseCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PremiseCategory"
                        }
                    }
                },
                "tags": [
                    "Premise categories"
                ]
            },
            "parameters": []
        },
        "/api/v1/premise_categories/{id}/": {
            "get": {
                "operationId": "api_v1_premise_categories_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PremiseCategory"
                        }
                    }
                },
                "tags": [
                    "Premise categories"
                ]
            },
            "put": {
                "operationId": "api_v1_premise_categories_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PremiseCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PremiseCategory"
                        }
                    }
                },
                "tags": [
                    "Premise categories"
                ]
            },
            "patch": {
                "operationId": "api_v1_premise_categories_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PremiseCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PremiseCategory"
                        }
                    }
                },
                "tags": [
                    "Premise categories"
                ]
            },
            "delete": {
                "operationId": "api_v1_premise_categories_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Premise categories"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this premise category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/production/custom_field_visibility/": {
            "get": {
                "operationId": "api_v1_production_custom_field_visibility_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "network_operator",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_item_template",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "custom_field_settings",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_item_templates",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProductionReportCustomFieldVisibility"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "post": {
                "operationId": "api_v1_production_custom_field_visibility_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductionReportCustomFieldVisibility"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReportCustomFieldVisibility"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "parameters": []
        },
        "/api/v1/production/custom_field_visibility/bulk/": {
            "post": {
                "operationId": "api_v1_production_custom_field_visibility_bulk",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductionReportCustomFieldVisibility"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReportCustomFieldVisibility"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "parameters": []
        },
        "/api/v1/production/custom_field_visibility/{id}/": {
            "get": {
                "operationId": "api_v1_production_custom_field_visibility_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReportCustomFieldVisibility"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "put": {
                "operationId": "api_v1_production_custom_field_visibility_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductionReportCustomFieldVisibility"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReportCustomFieldVisibility"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "patch": {
                "operationId": "api_v1_production_custom_field_visibility_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductionReportCustomFieldVisibility"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReportCustomFieldVisibility"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "delete": {
                "operationId": "api_v1_production_custom_field_visibility_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this production report custom field visibility.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/production/custom_fields": {
            "get": {
                "operationId": "api_v1_production_custom_fields_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "parameters": []
        },
        "/api/v1/production/extra_work_order_requests/": {
            "get": {
                "operationId": "api_v1_production_extra_work_order_requests_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "approver",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "system_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullExtraWorkOrderRequest"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "post": {
                "operationId": "api_v1_production_extra_work_order_requests_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FullExtraWorkOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FullExtraWorkOrderRequest"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "parameters": []
        },
        "/api/v1/production/extra_work_order_requests/{id}/": {
            "get": {
                "operationId": "api_v1_production_extra_work_order_requests_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FullExtraWorkOrderRequest"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "put": {
                "operationId": "api_v1_production_extra_work_order_requests_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FullExtraWorkOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FullExtraWorkOrderRequest"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "patch": {
                "operationId": "api_v1_production_extra_work_order_requests_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FullExtraWorkOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FullExtraWorkOrderRequest"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "delete": {
                "operationId": "api_v1_production_extra_work_order_requests_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this extra work order request.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/production/production_report_grid/": {
            "get": {
                "operationId": "api_v1_production_production_report_grid_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "production_report_line",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "production_report",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created_from",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "area",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProductionReportGrid"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "post": {
                "operationId": "api_v1_production_production_report_grid_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductionReportGrid"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReportGrid"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "parameters": []
        },
        "/api/v1/production/production_report_grid/{id}/": {
            "get": {
                "operationId": "api_v1_production_production_report_grid_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReportGrid"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "put": {
                "operationId": "api_v1_production_production_report_grid_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductionReportGrid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReportGrid"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "patch": {
                "operationId": "api_v1_production_production_report_grid_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductionReportGrid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReportGrid"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "delete": {
                "operationId": "api_v1_production_production_report_grid_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this production report quantity.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/production/production_report_lines/": {
            "get": {
                "operationId": "api_v1_production_production_report_lines_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProductionReportLine"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "post": {
                "operationId": "api_v1_production_production_report_lines_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductionReportLine"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReportLine"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "parameters": []
        },
        "/api/v1/production/production_report_lines/batch/": {
            "post": {
                "operationId": "api_v1_production_production_report_lines_batch_create",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductionReportLine"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReportLine"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "delete": {
                "operationId": "api_v1_production_production_report_lines_batch_delete",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "parameters": []
        },
        "/api/v1/production/production_report_lines/{id}/": {
            "get": {
                "operationId": "api_v1_production_production_report_lines_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReportLine"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "put": {
                "operationId": "api_v1_production_production_report_lines_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductionReportLine"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReportLine"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "patch": {
                "operationId": "api_v1_production_production_report_lines_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductionReportLine"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReportLine"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "delete": {
                "operationId": "api_v1_production_production_report_lines_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Production Report Item.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/production/production_report_locations/": {
            "get": {
                "operationId": "api_v1_production_production_report_locations_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProductionReportLocation"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "post": {
                "operationId": "api_v1_production_production_report_locations_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductionReportLocation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReportLocation"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "parameters": []
        },
        "/api/v1/production/production_report_locations/{id}/": {
            "get": {
                "operationId": "api_v1_production_production_report_locations_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReportLocation"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "put": {
                "operationId": "api_v1_production_production_report_locations_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductionReportLocation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReportLocation"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "patch": {
                "operationId": "api_v1_production_production_report_locations_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductionReportLocation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReportLocation"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "delete": {
                "operationId": "api_v1_production_production_report_locations_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this production report location.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/production/production_report_quantities/": {
            "get": {
                "operationId": "api_v1_production_production_report_quantities_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "production_report_line",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "quantity_description",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created_from",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProductionReportQuantity"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "post": {
                "operationId": "api_v1_production_production_report_quantities_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductionReportQuantity"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReportQuantity"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "parameters": []
        },
        "/api/v1/production/production_report_quantities/{id}/": {
            "get": {
                "operationId": "api_v1_production_production_report_quantities_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReportQuantity"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "put": {
                "operationId": "api_v1_production_production_report_quantities_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductionReportQuantity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReportQuantity"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "patch": {
                "operationId": "api_v1_production_production_report_quantities_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductionReportQuantity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReportQuantity"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "delete": {
                "operationId": "api_v1_production_production_report_quantities_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this production report quantity.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/production/production_reports/": {
            "get": {
                "operationId": "api_v1_production_production_reports_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "approver",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "system_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created_from",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "area",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_order",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "approver_or_created_by",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ProductionReport"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "post": {
                "operationId": "api_v1_production_production_reports_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductionReport"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReport"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "parameters": []
        },
        "/api/v1/production/production_reports/batch/": {
            "post": {
                "operationId": "api_v1_production_production_reports_batch_create",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductionReport"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReport"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "delete": {
                "operationId": "api_v1_production_production_reports_batch_delete",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "parameters": []
        },
        "/api/v1/production/production_reports/{content_object_pk}/comments/": {
            "get": {
                "operationId": "api_v1_production_production_reports_comments_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Comment"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "post": {
                "operationId": "api_v1_production_production_reports_comments_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Comment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Comment"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "parameters": [
                {
                    "name": "content_object_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/api/v1/production/production_reports/{content_object_pk}/comments/{id}/": {
            "get": {
                "operationId": "api_v1_production_production_reports_comments_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Comment"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "parameters": [
                {
                    "name": "content_object_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/api/v1/production/production_reports/{id}/": {
            "get": {
                "operationId": "api_v1_production_production_reports_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReport"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "put": {
                "operationId": "api_v1_production_production_reports_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductionReport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReport"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "patch": {
                "operationId": "api_v1_production_production_reports_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductionReport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReport"
                        }
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "delete": {
                "operationId": "api_v1_production_production_reports_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Production"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this production report.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/production/production_reports/{id}/pdf/": {
            "get": {
                "operationId": "api_v1_production_production_reports_pdf",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ProductionReport"
                        }
                    }
                },
                "produces": [
                    "application/pdf"
                ],
                "tags": [
                    "Production"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this production report.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/qualifications/": {
            "get": {
                "operationId": "api_v1_qualifications_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "roles",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Qualification"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Qualifications"
                ]
            },
            "post": {
                "operationId": "api_v1_qualifications_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Qualification"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Qualification"
                        }
                    }
                },
                "tags": [
                    "Qualifications"
                ]
            },
            "parameters": []
        },
        "/api/v1/qualifications/{id}/": {
            "get": {
                "operationId": "api_v1_qualifications_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Qualification"
                        }
                    }
                },
                "tags": [
                    "Qualifications"
                ]
            },
            "put": {
                "operationId": "api_v1_qualifications_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Qualification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Qualification"
                        }
                    }
                },
                "tags": [
                    "Qualifications"
                ]
            },
            "patch": {
                "operationId": "api_v1_qualifications_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Qualification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Qualification"
                        }
                    }
                },
                "tags": [
                    "Qualifications"
                ]
            },
            "delete": {
                "operationId": "api_v1_qualifications_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Qualifications"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this qualification.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/quantity_descriptions/": {
            "get": {
                "operationId": "api_v1_quantity_descriptions_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/QuantityDescription"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Quantity descriptions"
                ]
            },
            "post": {
                "operationId": "api_v1_quantity_descriptions_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QuantityDescription"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantityDescription"
                        }
                    }
                },
                "tags": [
                    "Quantity descriptions"
                ]
            },
            "parameters": []
        },
        "/api/v1/quantity_descriptions/{id}/": {
            "get": {
                "operationId": "api_v1_quantity_descriptions_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantityDescription"
                        }
                    }
                },
                "tags": [
                    "Quantity descriptions"
                ]
            },
            "put": {
                "operationId": "api_v1_quantity_descriptions_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QuantityDescription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantityDescription"
                        }
                    }
                },
                "tags": [
                    "Quantity descriptions"
                ]
            },
            "patch": {
                "operationId": "api_v1_quantity_descriptions_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/QuantityDescription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/QuantityDescription"
                        }
                    }
                },
                "tags": [
                    "Quantity descriptions"
                ]
            },
            "delete": {
                "operationId": "api_v1_quantity_descriptions_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Quantity descriptions"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this quantity description.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/raw/{app_label}/{model_name}": {
            "get": {
                "operationId": "api_v1_raw_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Raw"
                ]
            },
            "parameters": [
                {
                    "name": "app_label",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "model_name",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/api/v1/revision_changesets/{id}/": {
            "get": {
                "operationId": "api_v1_revision_changesets_read",
                "description": "Returns all the historical changes on an object, registered by \"django-reversion\". Changes are gruped\nby changesets, which represent a collection of changes done by the same user nearly at the same time.\n\nURL params:\n  - contentTypeId: Mandatory",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Revision changesets"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/api/v1/roles/": {
            "get": {
                "operationId": "api_v1_roles_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "crew_categories",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CoreRoleSerializer"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Roles"
                ]
            },
            "post": {
                "operationId": "api_v1_roles_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CoreRoleSerializer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CoreRoleSerializer"
                        }
                    }
                },
                "tags": [
                    "Roles"
                ]
            },
            "parameters": []
        },
        "/api/v1/roles/{id}/": {
            "get": {
                "operationId": "api_v1_roles_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CoreRoleSerializer"
                        }
                    }
                },
                "tags": [
                    "Roles"
                ]
            },
            "put": {
                "operationId": "api_v1_roles_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CoreRoleSerializer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CoreRoleSerializer"
                        }
                    }
                },
                "tags": [
                    "Roles"
                ]
            },
            "patch": {
                "operationId": "api_v1_roles_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CoreRoleSerializer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CoreRoleSerializer"
                        }
                    }
                },
                "tags": [
                    "Roles"
                ]
            },
            "delete": {
                "operationId": "api_v1_roles_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Roles"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this role.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/safety/assessments/": {
            "get": {
                "operationId": "api_v1_safety_assessments_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SafetyWorkProcedureAssessment"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "post": {
                "operationId": "api_v1_safety_assessments_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedureAssessment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedureAssessment"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "parameters": []
        },
        "/api/v1/safety/assessments/{id}/": {
            "get": {
                "operationId": "api_v1_safety_assessments_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedureAssessment"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "put": {
                "operationId": "api_v1_safety_assessments_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedureAssessment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedureAssessment"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "patch": {
                "operationId": "api_v1_safety_assessments_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedureAssessment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedureAssessment"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "delete": {
                "operationId": "api_v1_safety_assessments_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Hazard Requirement Assessment.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/safety/field_level_hazard_assessments/": {
            "get": {
                "operationId": "api_v1_safety_field_level_hazard_assessments_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NestedFieldLevelHazardAssessment"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "post": {
                "operationId": "api_v1_safety_field_level_hazard_assessments_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NestedFieldLevelHazardAssessment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NestedFieldLevelHazardAssessment"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "parameters": []
        },
        "/api/v1/safety/field_level_hazard_assessments/{id}/": {
            "get": {
                "operationId": "api_v1_safety_field_level_hazard_assessments_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NestedFieldLevelHazardAssessment"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "put": {
                "operationId": "api_v1_safety_field_level_hazard_assessments_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NestedFieldLevelHazardAssessment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NestedFieldLevelHazardAssessment"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "patch": {
                "operationId": "api_v1_safety_field_level_hazard_assessments_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NestedFieldLevelHazardAssessment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NestedFieldLevelHazardAssessment"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "delete": {
                "operationId": "api_v1_safety_field_level_hazard_assessments_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this field level hazard assessment.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/safety/field_level_hazards/": {
            "get": {
                "operationId": "api_v1_safety_field_level_hazards_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FieldLevelHazard"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "post": {
                "operationId": "api_v1_safety_field_level_hazards_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FieldLevelHazard"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FieldLevelHazard"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "parameters": []
        },
        "/api/v1/safety/field_level_hazards/{id}/": {
            "get": {
                "operationId": "api_v1_safety_field_level_hazards_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FieldLevelHazard"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "put": {
                "operationId": "api_v1_safety_field_level_hazards_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FieldLevelHazard"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FieldLevelHazard"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "patch": {
                "operationId": "api_v1_safety_field_level_hazards_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FieldLevelHazard"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FieldLevelHazard"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "delete": {
                "operationId": "api_v1_safety_field_level_hazards_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Field Level Work Step.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/safety/field_level_safety_work_procedures/": {
            "get": {
                "operationId": "api_v1_safety_field_level_safety_work_procedures_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FieldLevelSafetyWorkProcedure"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "post": {
                "operationId": "api_v1_safety_field_level_safety_work_procedures_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FieldLevelSafetyWorkProcedure"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FieldLevelSafetyWorkProcedure"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "parameters": []
        },
        "/api/v1/safety/field_level_safety_work_procedures/{id}/": {
            "get": {
                "operationId": "api_v1_safety_field_level_safety_work_procedures_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FieldLevelSafetyWorkProcedure"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "put": {
                "operationId": "api_v1_safety_field_level_safety_work_procedures_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FieldLevelSafetyWorkProcedure"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FieldLevelSafetyWorkProcedure"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "patch": {
                "operationId": "api_v1_safety_field_level_safety_work_procedures_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FieldLevelSafetyWorkProcedure"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FieldLevelSafetyWorkProcedure"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "delete": {
                "operationId": "api_v1_safety_field_level_safety_work_procedures_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Field Level Hazard.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/safety/hazards/": {
            "get": {
                "operationId": "api_v1_safety_hazards_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Hazard"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "post": {
                "operationId": "api_v1_safety_hazards_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Hazard"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Hazard"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "parameters": []
        },
        "/api/v1/safety/hazards/{id}/": {
            "get": {
                "operationId": "api_v1_safety_hazards_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Hazard"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "put": {
                "operationId": "api_v1_safety_hazards_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Hazard"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Hazard"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "patch": {
                "operationId": "api_v1_safety_hazards_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Hazard"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Hazard"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "delete": {
                "operationId": "api_v1_safety_hazards_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Work Step.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/safety/requirement_files/": {
            "get": {
                "operationId": "api_v1_safety_requirement_files_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SafetyWorkProcedureRequirementFile"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "post": {
                "operationId": "api_v1_safety_requirement_files_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedureRequirementFile"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedureRequirementFile"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "parameters": []
        },
        "/api/v1/safety/requirement_files/{id}/": {
            "get": {
                "operationId": "api_v1_safety_requirement_files_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedureRequirementFile"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "put": {
                "operationId": "api_v1_safety_requirement_files_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedureRequirementFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedureRequirementFile"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "patch": {
                "operationId": "api_v1_safety_requirement_files_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedureRequirementFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedureRequirementFile"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "delete": {
                "operationId": "api_v1_safety_requirement_files_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Critical Requirements File.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/safety/requirements/": {
            "get": {
                "operationId": "api_v1_safety_requirements_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SafetyWorkProcedureRequirement"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "post": {
                "operationId": "api_v1_safety_requirements_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedureRequirement"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedureRequirement"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "parameters": []
        },
        "/api/v1/safety/requirements/{id}/": {
            "get": {
                "operationId": "api_v1_safety_requirements_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedureRequirement"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "put": {
                "operationId": "api_v1_safety_requirements_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedureRequirement"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedureRequirement"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "patch": {
                "operationId": "api_v1_safety_requirements_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedureRequirement"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedureRequirement"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "delete": {
                "operationId": "api_v1_safety_requirements_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Hazard Requirement.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/safety/safety_package": {
            "get": {
                "operationId": "api_v1_safety_safety_package_list",
                "description": "This api gives the safety package.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "parameters": []
        },
        "/api/v1/safety/safety_work_procedures/": {
            "get": {
                "operationId": "api_v1_safety_safety_work_procedures_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SafetyWorkProcedure"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "post": {
                "operationId": "api_v1_safety_safety_work_procedures_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedure"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedure"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "parameters": []
        },
        "/api/v1/safety/safety_work_procedures/{id}/": {
            "get": {
                "operationId": "api_v1_safety_safety_work_procedures_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedure"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "put": {
                "operationId": "api_v1_safety_safety_work_procedures_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedure"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedure"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "patch": {
                "operationId": "api_v1_safety_safety_work_procedures_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedure"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SafetyWorkProcedure"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "delete": {
                "operationId": "api_v1_safety_safety_work_procedures_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Hazard.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/safety/signatures/": {
            "get": {
                "operationId": "api_v1_safety_signatures_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FieldLevelHazardAssessmentSignature"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "post": {
                "operationId": "api_v1_safety_signatures_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FieldLevelHazardAssessmentSignature"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FieldLevelHazardAssessmentSignature"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "parameters": []
        },
        "/api/v1/safety/signatures/{id}/": {
            "get": {
                "operationId": "api_v1_safety_signatures_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FieldLevelHazardAssessmentSignature"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "put": {
                "operationId": "api_v1_safety_signatures_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FieldLevelHazardAssessmentSignature"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FieldLevelHazardAssessmentSignature"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "patch": {
                "operationId": "api_v1_safety_signatures_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FieldLevelHazardAssessmentSignature"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FieldLevelHazardAssessmentSignature"
                        }
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "delete": {
                "operationId": "api_v1_safety_signatures_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Safety"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this field level hazard assessment signature.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/scheduling/schedule_dependencies_by_item": {
            "get": {
                "operationId": "api_v1_scheduling_schedule_dependencies_by_item_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "parameters": []
        },
        "/api/v1/scheduling/schedule_item_dependencies/batch/": {
            "post": {
                "operationId": "api_v1_scheduling_schedule_item_dependencies_batch_create",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ScheduleItemDependency"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ScheduleItemDependency"
                        }
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "delete": {
                "operationId": "api_v1_scheduling_schedule_item_dependencies_batch_delete",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "parameters": []
        },
        "/api/v1/scheduling/schedule_item_dependencies/{id}/": {
            "delete": {
                "operationId": "api_v1_scheduling_schedule_item_dependencies_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this schedule item dependency.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/scheduling/schedule_items": {
            "get": {
                "operationId": "api_v1_scheduling_schedule_items_list",
                "description": "Returns a single level dictionary which contains all the items in a dependency chain.\nThis is items with passed ids + successor items + predecessor items.\nKeys are the ids. Values are a \"partial\" with the predecessor dependencies.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "patch": {
                "operationId": "api_v1_scheduling_schedule_items_partial_update",
                "description": "Updates the predecessors of a passed Schedule Item.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "parameters": []
        },
        "/api/v1/scheduling/schedule_work_package/{id}": {
            "post": {
                "operationId": "api_v1_scheduling_schedule_work_package_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/api/v1/scheduling/task_dependencies/": {
            "get": {
                "operationId": "api_v1_scheduling_task_dependencies_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dependency_type",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset_time",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DefaultDynamicModelSerializer"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "post": {
                "operationId": "api_v1_scheduling_task_dependencies_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DefaultDynamicModelSerializer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DefaultDynamicModelSerializer"
                        }
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "parameters": []
        },
        "/api/v1/scheduling/task_dependencies/{id}/": {
            "get": {
                "operationId": "api_v1_scheduling_task_dependencies_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DefaultDynamicModelSerializer"
                        }
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "put": {
                "operationId": "api_v1_scheduling_task_dependencies_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DefaultDynamicModelSerializer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DefaultDynamicModelSerializer"
                        }
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "patch": {
                "operationId": "api_v1_scheduling_task_dependencies_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DefaultDynamicModelSerializer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DefaultDynamicModelSerializer"
                        }
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "delete": {
                "operationId": "api_v1_scheduling_task_dependencies_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this schedule item dependency.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/scheduling/task_items/": {
            "get": {
                "operationId": "api_v1_scheduling_task_items_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "base_start_date",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "base_end_date",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "task_type",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Task"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "post": {
                "operationId": "api_v1_scheduling_task_items_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "parameters": []
        },
        "/api/v1/scheduling/task_items/{id}/": {
            "get": {
                "operationId": "api_v1_scheduling_task_items_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "put": {
                "operationId": "api_v1_scheduling_task_items_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "patch": {
                "operationId": "api_v1_scheduling_task_items_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Task"
                        }
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "delete": {
                "operationId": "api_v1_scheduling_task_items_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this task.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/scheduling/task_template_dependencies/": {
            "get": {
                "operationId": "api_v1_scheduling_task_template_dependencies_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dependency_type",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "offset_time",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DefaultDynamicModelSerializer"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "post": {
                "operationId": "api_v1_scheduling_task_template_dependencies_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DefaultDynamicModelSerializer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DefaultDynamicModelSerializer"
                        }
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "parameters": []
        },
        "/api/v1/scheduling/task_template_dependencies/{id}/": {
            "get": {
                "operationId": "api_v1_scheduling_task_template_dependencies_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DefaultDynamicModelSerializer"
                        }
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "put": {
                "operationId": "api_v1_scheduling_task_template_dependencies_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DefaultDynamicModelSerializer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DefaultDynamicModelSerializer"
                        }
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "patch": {
                "operationId": "api_v1_scheduling_task_template_dependencies_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DefaultDynamicModelSerializer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DefaultDynamicModelSerializer"
                        }
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "delete": {
                "operationId": "api_v1_scheduling_task_template_dependencies_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this schedule item dependency.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/scheduling/task_templates/": {
            "get": {
                "operationId": "api_v1_scheduling_task_templates_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "program",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_package_template",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DefaultDynamicModelSerializer"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "post": {
                "operationId": "api_v1_scheduling_task_templates_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DefaultDynamicModelSerializer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DefaultDynamicModelSerializer"
                        }
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "parameters": []
        },
        "/api/v1/scheduling/task_templates/{id}/": {
            "get": {
                "operationId": "api_v1_scheduling_task_templates_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DefaultDynamicModelSerializer"
                        }
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "put": {
                "operationId": "api_v1_scheduling_task_templates_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DefaultDynamicModelSerializer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DefaultDynamicModelSerializer"
                        }
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "patch": {
                "operationId": "api_v1_scheduling_task_templates_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DefaultDynamicModelSerializer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DefaultDynamicModelSerializer"
                        }
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "delete": {
                "operationId": "api_v1_scheduling_task_templates_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this work order template.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/scheduling/tasks/": {
            "get": {
                "operationId": "api_v1_scheduling_tasks_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/WorkOrderTask"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "post": {
                "operationId": "api_v1_scheduling_tasks_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkOrderTask"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkOrderTask"
                        }
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "parameters": []
        },
        "/api/v1/scheduling/tasks/{id}/": {
            "get": {
                "operationId": "api_v1_scheduling_tasks_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkOrderTask"
                        }
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "put": {
                "operationId": "api_v1_scheduling_tasks_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkOrderTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkOrderTask"
                        }
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "patch": {
                "operationId": "api_v1_scheduling_tasks_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkOrderTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkOrderTask"
                        }
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "delete": {
                "operationId": "api_v1_scheduling_tasks_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Scheduling"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Work Order.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/settings/": {
            "get": {
                "operationId": "api_v1_settings_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Settings"
                ]
            },
            "parameters": []
        },
        "/api/v1/subcontractors/": {
            "get": {
                "operationId": "api_v1_subcontractors_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "with_subcontract_or_epc",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "with_no_subcontract",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Company"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Subcontractors"
                ]
            },
            "post": {
                "operationId": "api_v1_subcontractors_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                },
                "tags": [
                    "Subcontractors"
                ]
            },
            "parameters": []
        },
        "/api/v1/subcontractors/{id}/": {
            "get": {
                "operationId": "api_v1_subcontractors_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                },
                "tags": [
                    "Subcontractors"
                ]
            },
            "put": {
                "operationId": "api_v1_subcontractors_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                },
                "tags": [
                    "Subcontractors"
                ]
            },
            "patch": {
                "operationId": "api_v1_subcontractors_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                },
                "tags": [
                    "Subcontractors"
                ]
            },
            "delete": {
                "operationId": "api_v1_subcontractors_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Subcontractors"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this company.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/ticketing/ticket_actions/": {
            "get": {
                "operationId": "api_v1_ticketing_ticket_actions_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ticket",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TicketAction"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Ticketing"
                ]
            },
            "parameters": []
        },
        "/api/v1/ticketing/ticket_actions/{id}/": {
            "get": {
                "operationId": "api_v1_ticketing_ticket_actions_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TicketAction"
                        }
                    }
                },
                "tags": [
                    "Ticketing"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this ticket action.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/ticketing/ticket_collections/": {
            "get": {
                "operationId": "api_v1_ticketing_ticket_collections_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "app_label",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "object_ids",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "content_type",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TicketCollection"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Ticketing"
                ]
            },
            "parameters": []
        },
        "/api/v1/ticketing/tickets/": {
            "get": {
                "operationId": "api_v1_ticketing_tickets_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "object_id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "collection_model",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "collection_object_id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "statuses",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "stakeholder",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "area",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Ticket"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Ticketing"
                ]
            },
            "post": {
                "operationId": "api_v1_ticketing_tickets_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Ticket"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Ticket"
                        }
                    }
                },
                "tags": [
                    "Ticketing"
                ]
            },
            "parameters": []
        },
        "/api/v1/ticketing/tickets/{id}/": {
            "get": {
                "operationId": "api_v1_ticketing_tickets_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Ticket"
                        }
                    }
                },
                "tags": [
                    "Ticketing"
                ]
            },
            "put": {
                "operationId": "api_v1_ticketing_tickets_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Ticket"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Ticket"
                        }
                    }
                },
                "tags": [
                    "Ticketing"
                ]
            },
            "patch": {
                "operationId": "api_v1_ticketing_tickets_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Ticket"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Ticket"
                        }
                    }
                },
                "tags": [
                    "Ticketing"
                ]
            },
            "delete": {
                "operationId": "api_v1_ticketing_tickets_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Ticketing"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this ticket.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/time_keeping/custom_field_visibility/": {
            "get": {
                "operationId": "api_v1_time_keeping_custom_field_visibility_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TimesheetCustomFieldVisibility"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "post": {
                "operationId": "api_v1_time_keeping_custom_field_visibility_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimesheetCustomFieldVisibility"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimesheetCustomFieldVisibility"
                        }
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "parameters": []
        },
        "/api/v1/time_keeping/custom_field_visibility/{id}/": {
            "get": {
                "operationId": "api_v1_time_keeping_custom_field_visibility_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimesheetCustomFieldVisibility"
                        }
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "put": {
                "operationId": "api_v1_time_keeping_custom_field_visibility_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimesheetCustomFieldVisibility"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimesheetCustomFieldVisibility"
                        }
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "patch": {
                "operationId": "api_v1_time_keeping_custom_field_visibility_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimesheetCustomFieldVisibility"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimesheetCustomFieldVisibility"
                        }
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "delete": {
                "operationId": "api_v1_time_keeping_custom_field_visibility_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this timesheet custom field visibility.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/time_keeping/shifts/": {
            "get": {
                "operationId": "api_v1_time_keeping_shifts_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "modified",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timesheet",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "comments",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "area",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_order",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timesheets",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "approver_or_created_by",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ShiftPlusTimesheet"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "post": {
                "operationId": "api_v1_time_keeping_shifts_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ShiftPlusTimesheet"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ShiftPlusTimesheet"
                        }
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "parameters": []
        },
        "/api/v1/time_keeping/shifts/{id}/": {
            "get": {
                "operationId": "api_v1_time_keeping_shifts_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ShiftPlusTimesheet"
                        }
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "put": {
                "operationId": "api_v1_time_keeping_shifts_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ShiftPlusTimesheet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ShiftPlusTimesheet"
                        }
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "patch": {
                "operationId": "api_v1_time_keeping_shifts_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ShiftPlusTimesheet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ShiftPlusTimesheet"
                        }
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "delete": {
                "operationId": "api_v1_time_keeping_shifts_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this shift.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/time_keeping/timesheet_acknowledgments/": {
            "get": {
                "operationId": "api_v1_time_keeping_timesheet_acknowledgments_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TimesheetAcknowledgment"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "post": {
                "operationId": "api_v1_time_keeping_timesheet_acknowledgments_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimesheetAcknowledgment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimesheetAcknowledgment"
                        }
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "parameters": []
        },
        "/api/v1/time_keeping/timesheet_acknowledgments/{id}/": {
            "get": {
                "operationId": "api_v1_time_keeping_timesheet_acknowledgments_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimesheetAcknowledgment"
                        }
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "delete": {
                "operationId": "api_v1_time_keeping_timesheet_acknowledgments_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this timesheet acknowledgment.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/time_keeping/timesheet_lines/": {
            "get": {
                "operationId": "api_v1_time_keeping_timesheet_lines_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "area",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_order",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "timesheets",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "approver_or_created_by",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TimesheetLinePlusShift"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "post": {
                "operationId": "api_v1_time_keeping_timesheet_lines_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimesheetLinePlusShift"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimesheetLinePlusShift"
                        }
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "parameters": []
        },
        "/api/v1/time_keeping/timesheet_lines/{id}/": {
            "get": {
                "operationId": "api_v1_time_keeping_timesheet_lines_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimesheetLinePlusShift"
                        }
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "put": {
                "operationId": "api_v1_time_keeping_timesheet_lines_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimesheetLinePlusShift"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimesheetLinePlusShift"
                        }
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "patch": {
                "operationId": "api_v1_time_keeping_timesheet_lines_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimesheetLinePlusShift"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimesheetLinePlusShift"
                        }
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "delete": {
                "operationId": "api_v1_time_keeping_timesheet_lines_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this timesheet line.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/time_keeping/timesheets/": {
            "get": {
                "operationId": "api_v1_time_keeping_timesheets_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "approver",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "system_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created_from",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "area",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_order",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "approver_or_created_by",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Timesheet"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "post": {
                "operationId": "api_v1_time_keeping_timesheets_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Timesheet"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Timesheet"
                        }
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "parameters": []
        },
        "/api/v1/time_keeping/timesheets/{id}/": {
            "get": {
                "operationId": "api_v1_time_keeping_timesheets_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Timesheet"
                        }
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "put": {
                "operationId": "api_v1_time_keeping_timesheets_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Timesheet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Timesheet"
                        }
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "patch": {
                "operationId": "api_v1_time_keeping_timesheets_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Timesheet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Timesheet"
                        }
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "delete": {
                "operationId": "api_v1_time_keeping_timesheets_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Time keeping"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this timesheet.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/unique_field_check/{contentType}/": {
            "get": {
                "operationId": "api_v1_unique_field_check_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Unique field check"
                ]
            },
            "parameters": [
                {
                    "name": "contentType",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/api/v1/unit_dimensions/": {
            "get": {
                "operationId": "api_v1_unit_dimensions_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UnitDimension"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Unit dimensions"
                ]
            },
            "post": {
                "operationId": "api_v1_unit_dimensions_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UnitDimension"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UnitDimension"
                        }
                    }
                },
                "tags": [
                    "Unit dimensions"
                ]
            },
            "parameters": []
        },
        "/api/v1/unit_dimensions/{id}/": {
            "get": {
                "operationId": "api_v1_unit_dimensions_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UnitDimension"
                        }
                    }
                },
                "tags": [
                    "Unit dimensions"
                ]
            },
            "put": {
                "operationId": "api_v1_unit_dimensions_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UnitDimension"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UnitDimension"
                        }
                    }
                },
                "tags": [
                    "Unit dimensions"
                ]
            },
            "patch": {
                "operationId": "api_v1_unit_dimensions_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UnitDimension"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UnitDimension"
                        }
                    }
                },
                "tags": [
                    "Unit dimensions"
                ]
            },
            "delete": {
                "operationId": "api_v1_unit_dimensions_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Unit dimensions"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this unit dimension.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/units/": {
            "get": {
                "operationId": "api_v1_units_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "metric_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "imperial_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Unit"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Units"
                ]
            },
            "post": {
                "operationId": "api_v1_units_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Unit"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Unit"
                        }
                    }
                },
                "tags": [
                    "Units"
                ]
            },
            "parameters": []
        },
        "/api/v1/units/{id}/": {
            "get": {
                "operationId": "api_v1_units_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Unit"
                        }
                    }
                },
                "tags": [
                    "Units"
                ]
            },
            "put": {
                "operationId": "api_v1_units_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Unit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Unit"
                        }
                    }
                },
                "tags": [
                    "Units"
                ]
            },
            "patch": {
                "operationId": "api_v1_units_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Unit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Unit"
                        }
                    }
                },
                "tags": [
                    "Units"
                ]
            },
            "delete": {
                "operationId": "api_v1_units_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Units"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this unit.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/user_groups/": {
            "get": {
                "operationId": "api_v1_user_groups_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UserGroup"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "User groups"
                ]
            },
            "post": {
                "operationId": "api_v1_user_groups_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserGroup"
                        }
                    }
                },
                "tags": [
                    "User groups"
                ]
            },
            "parameters": []
        },
        "/api/v1/user_groups/{id}/": {
            "get": {
                "operationId": "api_v1_user_groups_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserGroup"
                        }
                    }
                },
                "tags": [
                    "User groups"
                ]
            },
            "put": {
                "operationId": "api_v1_user_groups_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserGroup"
                        }
                    }
                },
                "tags": [
                    "User groups"
                ]
            },
            "patch": {
                "operationId": "api_v1_user_groups_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserGroup"
                        }
                    }
                },
                "tags": [
                    "User groups"
                ]
            },
            "delete": {
                "operationId": "api_v1_user_groups_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "User groups"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this group.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/user_permissions/": {
            "get": {
                "operationId": "api_v1_user_permissions_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "codename",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "group",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UserPermission"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "User permissions"
                ]
            },
            "parameters": []
        },
        "/api/v1/user_permissions/{id}/": {
            "get": {
                "operationId": "api_v1_user_permissions_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserPermission"
                        }
                    }
                },
                "tags": [
                    "User permissions"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this permission.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/user_tiers/": {
            "get": {
                "operationId": "api_v1_user_tiers_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "profile",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user_tier",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/UserTierChange"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "User tiers"
                ]
            },
            "post": {
                "operationId": "api_v1_user_tiers_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserTierChange"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserTierChange"
                        }
                    }
                },
                "tags": [
                    "User tiers"
                ]
            },
            "parameters": []
        },
        "/api/v1/user_tiers/{id}/": {
            "get": {
                "operationId": "api_v1_user_tiers_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserTierChange"
                        }
                    }
                },
                "tags": [
                    "User tiers"
                ]
            },
            "put": {
                "operationId": "api_v1_user_tiers_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserTierChange"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserTierChange"
                        }
                    }
                },
                "tags": [
                    "User tiers"
                ]
            },
            "patch": {
                "operationId": "api_v1_user_tiers_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserTierChange"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserTierChange"
                        }
                    }
                },
                "tags": [
                    "User tiers"
                ]
            },
            "delete": {
                "operationId": "api_v1_user_tiers_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "User tiers"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this user tier change.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/users/": {
            "get": {
                "operationId": "api_v1_users_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "account",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "roles",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "in_shared_crew",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "crew_person_roles__crew__id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "company_type",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "network_operator",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "managers_from_work_orders",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "multi_step_approvers_from_work_orders",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "crews",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Users"
                ]
            },
            "post": {
                "operationId": "api_v1_users_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Users"
                ]
            },
            "parameters": []
        },
        "/api/v1/users/batch/": {
            "post": {
                "operationId": "api_v1_users_batch_create",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Users"
                ]
            },
            "delete": {
                "operationId": "api_v1_users_batch_delete",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Users"
                ]
            },
            "parameters": []
        },
        "/api/v1/users/{id}/": {
            "get": {
                "operationId": "api_v1_users_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Users"
                ]
            },
            "put": {
                "operationId": "api_v1_users_update",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Users"
                ]
            },
            "patch": {
                "operationId": "api_v1_users_partial_update",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Users"
                ]
            },
            "delete": {
                "operationId": "api_v1_users_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Users"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this profile.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/users/{id}/avatar/": {
            "put": {
                "operationId": "api_v1_users_avatar",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Users"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this profile.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/variables/": {
            "get": {
                "operationId": "api_v1_variables_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Variable"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Variables"
                ]
            },
            "post": {
                "operationId": "api_v1_variables_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Variable"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Variable"
                        }
                    }
                },
                "tags": [
                    "Variables"
                ]
            },
            "parameters": []
        },
        "/api/v1/variables/async/": {
            "post": {
                "operationId": "api_v1_variables_async_list",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Variable"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Variable"
                        }
                    }
                },
                "tags": [
                    "Variables"
                ]
            },
            "parameters": []
        },
        "/api/v1/variables/batch/": {
            "post": {
                "operationId": "api_v1_variables_batch_create",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Variable"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Variable"
                        }
                    }
                },
                "tags": [
                    "Variables"
                ]
            },
            "delete": {
                "operationId": "api_v1_variables_batch_delete",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Variables"
                ]
            },
            "parameters": []
        },
        "/api/v1/variables/{id}/": {
            "get": {
                "operationId": "api_v1_variables_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Variable"
                        }
                    }
                },
                "tags": [
                    "Variables"
                ]
            },
            "put": {
                "operationId": "api_v1_variables_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Variable"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Variable"
                        }
                    }
                },
                "tags": [
                    "Variables"
                ]
            },
            "patch": {
                "operationId": "api_v1_variables_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Variable"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Variable"
                        }
                    }
                },
                "tags": [
                    "Variables"
                ]
            },
            "delete": {
                "operationId": "api_v1_variables_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Variables"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this variable.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/variables/{id}/async/": {
            "put": {
                "operationId": "api_v1_variables_async_update",
                "description": "Performs job operations.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Variable"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Variable"
                        }
                    }
                },
                "tags": [
                    "Variables"
                ]
            },
            "patch": {
                "operationId": "api_v1_variables_async_partial_update",
                "description": "Performs job operations.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Variable"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Variable"
                        }
                    }
                },
                "tags": [
                    "Variables"
                ]
            },
            "delete": {
                "operationId": "api_v1_variables_async_delete",
                "description": "Performs job operations.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Variables"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this variable.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/wbs/design_elements_work_status/": {
            "get": {
                "operationId": "api_v1_wbs_design_elements_work_status_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {}
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/element_work_templates/": {
            "get": {
                "operationId": "api_v1_wbs_element_work_templates_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "program",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_package_template",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_package_template__work_packages",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ElementWorkTemplate"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "post": {
                "operationId": "api_v1_wbs_element_work_templates_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ElementWorkTemplate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ElementWorkTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/element_work_templates/clone_from_library/": {
            "post": {
                "operationId": "api_v1_wbs_element_work_templates_clone_from_library",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ElementWorkTemplate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ElementWorkTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/element_work_templates/{id}/": {
            "get": {
                "operationId": "api_v1_wbs_element_work_templates_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ElementWorkTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "put": {
                "operationId": "api_v1_wbs_element_work_templates_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ElementWorkTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ElementWorkTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "patch": {
                "operationId": "api_v1_wbs_element_work_templates_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ElementWorkTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ElementWorkTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "delete": {
                "operationId": "api_v1_wbs_element_work_templates_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this element work template.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/wbs/estimations_export/": {
            "get": {
                "operationId": "api_v1_wbs_estimations_export_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/library_element_work_templates/": {
            "get": {
                "operationId": "api_v1_wbs_library_element_work_templates_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/LibraryElementWorkTemplate"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "post": {
                "operationId": "api_v1_wbs_library_element_work_templates_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LibraryElementWorkTemplate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LibraryElementWorkTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/library_element_work_templates/{id}/": {
            "get": {
                "operationId": "api_v1_wbs_library_element_work_templates_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LibraryElementWorkTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "put": {
                "operationId": "api_v1_wbs_library_element_work_templates_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LibraryElementWorkTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LibraryElementWorkTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "patch": {
                "operationId": "api_v1_wbs_library_element_work_templates_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LibraryElementWorkTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LibraryElementWorkTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "delete": {
                "operationId": "api_v1_wbs_library_element_work_templates_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this library element work template.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/wbs/library_work_item_templates/": {
            "get": {
                "operationId": "api_v1_wbs_library_work_item_templates_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "library_work_package_template",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exclude_ids",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/LibraryWorkItemTemplate"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "post": {
                "operationId": "api_v1_wbs_library_work_item_templates_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LibraryWorkItemTemplate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LibraryWorkItemTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/library_work_item_templates/{id}/": {
            "get": {
                "operationId": "api_v1_wbs_library_work_item_templates_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LibraryWorkItemTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "put": {
                "operationId": "api_v1_wbs_library_work_item_templates_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LibraryWorkItemTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LibraryWorkItemTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "patch": {
                "operationId": "api_v1_wbs_library_work_item_templates_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LibraryWorkItemTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LibraryWorkItemTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "delete": {
                "operationId": "api_v1_wbs_library_work_item_templates_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this library work item template.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/wbs/library_work_order_templates/": {
            "get": {
                "operationId": "api_v1_wbs_library_work_order_templates_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/LibraryWorkOrderTemplate"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "post": {
                "operationId": "api_v1_wbs_library_work_order_templates_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LibraryWorkOrderTemplate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LibraryWorkOrderTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/library_work_order_templates/{id}/": {
            "get": {
                "operationId": "api_v1_wbs_library_work_order_templates_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LibraryWorkOrderTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "put": {
                "operationId": "api_v1_wbs_library_work_order_templates_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LibraryWorkOrderTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LibraryWorkOrderTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "patch": {
                "operationId": "api_v1_wbs_library_work_order_templates_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LibraryWorkOrderTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LibraryWorkOrderTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "delete": {
                "operationId": "api_v1_wbs_library_work_order_templates_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this library work order template.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/wbs/library_work_package_templates/": {
            "get": {
                "operationId": "api_v1_wbs_library_work_package_templates_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/LibraryWorkPackageTemplate"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "post": {
                "operationId": "api_v1_wbs_library_work_package_templates_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LibraryWorkPackageTemplate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LibraryWorkPackageTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/library_work_package_templates/{id}/": {
            "get": {
                "operationId": "api_v1_wbs_library_work_package_templates_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LibraryWorkPackageTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "put": {
                "operationId": "api_v1_wbs_library_work_package_templates_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LibraryWorkPackageTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LibraryWorkPackageTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "patch": {
                "operationId": "api_v1_wbs_library_work_package_templates_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LibraryWorkPackageTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LibraryWorkPackageTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "delete": {
                "operationId": "api_v1_wbs_library_work_package_templates_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this library work package template.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/wbs/material_forecast_categories": {
            "get": {
                "operationId": "api_v1_wbs_material_forecast_categories_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/material_forecasts": {
            "get": {
                "operationId": "api_v1_wbs_material_forecasts_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/material_requirements/": {
            "get": {
                "operationId": "api_v1_wbs_material_requirements_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MaterialRequirements"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "post": {
                "operationId": "api_v1_wbs_material_requirements_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MaterialRequirements"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MaterialRequirements"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/material_requirements/{id}/": {
            "get": {
                "operationId": "api_v1_wbs_material_requirements_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MaterialRequirements"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "put": {
                "operationId": "api_v1_wbs_material_requirements_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MaterialRequirements"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MaterialRequirements"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "patch": {
                "operationId": "api_v1_wbs_material_requirements_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MaterialRequirements"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MaterialRequirements"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "delete": {
                "operationId": "api_v1_wbs_material_requirements_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this material requirement.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/wbs/subcontracts/": {
            "get": {
                "operationId": "api_v1_wbs_subcontracts_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Subcontract"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "post": {
                "operationId": "api_v1_wbs_subcontracts_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Subcontract"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Subcontract"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/subcontracts/{id}/": {
            "get": {
                "operationId": "api_v1_wbs_subcontracts_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Subcontract"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "put": {
                "operationId": "api_v1_wbs_subcontracts_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Subcontract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Subcontract"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "patch": {
                "operationId": "api_v1_wbs_subcontracts_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Subcontract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Subcontract"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "delete": {
                "operationId": "api_v1_wbs_subcontracts_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this subcontract.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/wbs/work_item_materials/": {
            "get": {
                "operationId": "api_v1_wbs_work_item_materials_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_item__work_order",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "area",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_order",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/WorkItemMaterial"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "post": {
                "operationId": "api_v1_wbs_work_item_materials_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkItemMaterial"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkItemMaterial"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_item_materials/{id}/": {
            "get": {
                "operationId": "api_v1_wbs_work_item_materials_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkItemMaterial"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "put": {
                "operationId": "api_v1_wbs_work_item_materials_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkItemMaterial"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkItemMaterial"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "patch": {
                "operationId": "api_v1_wbs_work_item_materials_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkItemMaterial"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkItemMaterial"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "delete": {
                "operationId": "api_v1_wbs_work_item_materials_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this work item quantity.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/wbs/work_item_quantities/": {
            "get": {
                "operationId": "api_v1_wbs_work_item_quantities_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "quantity_description",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_item__work_order",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "area",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_order",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FullWorkItemQuantity"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "post": {
                "operationId": "api_v1_wbs_work_item_quantities_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FullWorkItemQuantity"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FullWorkItemQuantity"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_item_quantities/{id}/": {
            "get": {
                "operationId": "api_v1_wbs_work_item_quantities_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FullWorkItemQuantity"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "put": {
                "operationId": "api_v1_wbs_work_item_quantities_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FullWorkItemQuantity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FullWorkItemQuantity"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "patch": {
                "operationId": "api_v1_wbs_work_item_quantities_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FullWorkItemQuantity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FullWorkItemQuantity"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "delete": {
                "operationId": "api_v1_wbs_work_item_quantities_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this work item quantity.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/wbs/work_item_quantities_query": {
            "get": {
                "operationId": "api_v1_wbs_work_item_quantities_query_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_item_quantity_templates/": {
            "get": {
                "operationId": "api_v1_wbs_work_item_quantity_templates_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_item_template__name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "quantity_description__name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/WorkItemQuantityTemplate"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "post": {
                "operationId": "api_v1_wbs_work_item_quantity_templates_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkItemQuantityTemplate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkItemQuantityTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_item_quantity_templates/{id}/": {
            "get": {
                "operationId": "api_v1_wbs_work_item_quantity_templates_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkItemQuantityTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "put": {
                "operationId": "api_v1_wbs_work_item_quantity_templates_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkItemQuantityTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkItemQuantityTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "patch": {
                "operationId": "api_v1_wbs_work_item_quantity_templates_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkItemQuantityTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkItemQuantityTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "delete": {
                "operationId": "api_v1_wbs_work_item_quantity_templates_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this work item quantity template.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/wbs/work_item_split/{id}/": {
            "put": {
                "operationId": "api_v1_wbs_work_item_split_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SplitWorkItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SplitWorkItem"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "patch": {
                "operationId": "api_v1_wbs_work_item_split_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SplitWorkItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SplitWorkItem"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Work Item.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/wbs/work_item_templates/": {
            "get": {
                "operationId": "api_v1_wbs_work_item_templates_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "program",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_order_template",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "network_operator",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exclude_ids",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_package_template",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_order",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/WorkItemTemplate"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "post": {
                "operationId": "api_v1_wbs_work_item_templates_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkItemTemplate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkItemTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_item_templates/clone_from_library/": {
            "post": {
                "operationId": "api_v1_wbs_work_item_templates_clone_from_library",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkItemTemplate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkItemTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_item_templates/{id}/": {
            "get": {
                "operationId": "api_v1_wbs_work_item_templates_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkItemTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "put": {
                "operationId": "api_v1_wbs_work_item_templates_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkItemTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkItemTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "patch": {
                "operationId": "api_v1_wbs_work_item_templates_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkItemTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkItemTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "delete": {
                "operationId": "api_v1_wbs_work_item_templates_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this work item template.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/wbs/work_items/": {
            "get": {
                "operationId": "api_v1_wbs_work_items_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_order",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "assign_to_person",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_workable",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "production_report",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_package",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_orders",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "area",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "crew",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "subcontractor",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "available_to_person",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "design_element",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "design_element_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name_or_system_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "siblings_for",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "post": {
                "operationId": "api_v1_wbs_work_items_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_items/batch/": {
            "post": {
                "operationId": "api_v1_wbs_work_items_batch_create",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkItemBatch"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkItemBatch"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "delete": {
                "operationId": "api_v1_wbs_work_items_batch_delete",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_items/bulk_pdf/": {
            "get": {
                "operationId": "api_v1_wbs_work_items_bulk_pdf",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_order",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "assign_to_person",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_workable",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "production_report",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_package",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_orders",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "area",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "crew",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "subcontractor",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "available_to_person",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "design_element",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "design_element_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name_or_system_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "siblings_for",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "produces": [
                    "application/pdf"
                ],
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_items/next_unique_name/": {
            "get": {
                "operationId": "api_v1_wbs_work_items_next_unique_name",
                "description": "Returns the next available Work Item name, based on the NamingConventionHelper. If\nthe 'for_sibling' query param is True it will return the next available Work Item\nsibling name, based on the NamingConventionHelper.",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_order",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "assign_to_person",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_workable",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "production_report",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_package",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_orders",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "area",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "crew",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "subcontractor",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "available_to_person",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "design_element",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "design_element_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name_or_system_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "siblings_for",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_items/{id}/": {
            "get": {
                "operationId": "api_v1_wbs_work_items_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "put": {
                "operationId": "api_v1_wbs_work_items_update",
                "description": "Grab the as-built data from the request and handle it here. Pass the rest on to the parent viewset.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "patch": {
                "operationId": "api_v1_wbs_work_items_partial_update",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "delete": {
                "operationId": "api_v1_wbs_work_items_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Work Item.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/wbs/work_items/{id}/pdf/": {
            "get": {
                "operationId": "api_v1_wbs_work_items_pdf",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "produces": [
                    "application/pdf"
                ],
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Work Item.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/wbs/work_items/{id}/photos/": {
            "get": {
                "operationId": "api_v1_wbs_work_items_photos",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Work Item.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/wbs/work_items_query": {
            "get": {
                "operationId": "api_v1_wbs_work_items_query_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_order_invoice_items/": {
            "get": {
                "operationId": "api_v1_wbs_work_order_invoice_items_list",
                "description": "Returns the Invoicing Information grouped by Work Order.",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_packages",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_orders",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_payable",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_receivable",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "area",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "design_elements",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {}
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_order_purchase_orders/": {
            "get": {
                "operationId": "api_v1_wbs_work_order_purchase_orders_list",
                "description": "Returns the Purchase Orders Information grouped by Work Order.",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_orders",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {}
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_order_split/": {
            "post": {
                "operationId": "api_v1_wbs_work_order_split_create",
                "description": "Creates a new Work Order and moves the existing, passed Work Items to it.",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_order_split/async/": {
            "post": {
                "operationId": "api_v1_wbs_work_order_split_async_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_order_split/{id}/": {
            "put": {
                "operationId": "api_v1_wbs_work_order_split_update",
                "description": "Updates an existing Work Order, adding the existing, passed Work Items to it.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "patch": {
                "operationId": "api_v1_wbs_work_order_split_partial_update",
                "description": "Updates one or more field of an existing Work Order and adds the existing, passed Work Items to it.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Work Order.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/wbs/work_order_split/{id}/async/": {
            "put": {
                "operationId": "api_v1_wbs_work_order_split_async_update",
                "description": "Performs job operations.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "patch": {
                "operationId": "api_v1_wbs_work_order_split_async_partial_update",
                "description": "Performs job operations.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "delete": {
                "operationId": "api_v1_wbs_work_order_split_async_delete",
                "description": "Performs job operations.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Work Order.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/wbs/work_order_templates/": {
            "get": {
                "operationId": "api_v1_wbs_work_order_templates_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "program",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "network_operator",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_order_category",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_package_template",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_package",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exclude_ids",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/WorkOrderTemplate"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "post": {
                "operationId": "api_v1_wbs_work_order_templates_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkOrderTemplate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkOrderTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_order_templates/clone_from_library/": {
            "post": {
                "operationId": "api_v1_wbs_work_order_templates_clone_from_library",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkOrderTemplate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkOrderTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_order_templates/{id}/": {
            "get": {
                "operationId": "api_v1_wbs_work_order_templates_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkOrderTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "put": {
                "operationId": "api_v1_wbs_work_order_templates_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkOrderTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkOrderTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "patch": {
                "operationId": "api_v1_wbs_work_order_templates_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkOrderTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkOrderTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "delete": {
                "operationId": "api_v1_wbs_work_order_templates_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this work order template.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/wbs/work_orders/": {
            "get": {
                "operationId": "api_v1_wbs_work_orders_list",
                "description": "Returns all Work Orders.",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_package",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_order_template",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "subcontractor",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "responsible_crew",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_order_category",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "has_workable_work_items",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "area",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name_or_system_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "only_my_company",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "has_work_items",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "available_to_person",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "post": {
                "operationId": "api_v1_wbs_work_orders_create",
                "description": "Creates a new Work Order.",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_orders/async/": {
            "post": {
                "operationId": "api_v1_wbs_work_orders_async_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_orders/batch/": {
            "post": {
                "operationId": "api_v1_wbs_work_orders_batch_create",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "delete": {
                "operationId": "api_v1_wbs_work_orders_batch_delete",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_orders/{id}/": {
            "get": {
                "operationId": "api_v1_wbs_work_orders_read",
                "description": "Returns a Work Order instance.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "put": {
                "operationId": "api_v1_wbs_work_orders_update",
                "description": "Updates a Work Order.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "patch": {
                "operationId": "api_v1_wbs_work_orders_partial_update",
                "description": "Updates one or more fields on an existing Work Order.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "delete": {
                "operationId": "api_v1_wbs_work_orders_delete",
                "description": "Removes a Work Order and its associated Work Items and Pay Items.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Work Order.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/wbs/work_orders/{id}/async/": {
            "put": {
                "operationId": "api_v1_wbs_work_orders_async_update",
                "description": "Performs job operations.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "patch": {
                "operationId": "api_v1_wbs_work_orders_async_partial_update",
                "description": "Performs job operations.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "delete": {
                "operationId": "api_v1_wbs_work_orders_async_delete",
                "description": "Performs job operations.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Work Order.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/wbs/work_orders_query": {
            "get": {
                "operationId": "api_v1_wbs_work_orders_query_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_package_files/{id}": {
            "get": {
                "operationId": "api_v1_wbs_work_package_files_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/api/v1/wbs/work_package_invoice_items/": {
            "get": {
                "operationId": "api_v1_wbs_work_package_invoice_items_list",
                "description": "Returns the Invoicing Information grouped by Work Package.",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoice",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_packages",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_orders",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_payable",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_receivable",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "area",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_status",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "design_elements",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {}
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_package_tasks/": {
            "get": {
                "operationId": "api_v1_wbs_work_package_tasks_list",
                "description": "Returns the status tasks associated to the WP, with information about them.",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_package",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {}
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_package_templates/": {
            "get": {
                "operationId": "api_v1_wbs_work_package_templates_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "program",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "network_operator",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/WorkPackageTemplate"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "post": {
                "operationId": "api_v1_wbs_work_package_templates_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkPackageTemplate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkPackageTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_package_templates/clone_from_library/": {
            "post": {
                "operationId": "api_v1_wbs_work_package_templates_clone_from_library",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkPackageTemplate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkPackageTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_package_templates/{id}/": {
            "get": {
                "operationId": "api_v1_wbs_work_package_templates_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkPackageTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "put": {
                "operationId": "api_v1_wbs_work_package_templates_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkPackageTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkPackageTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "patch": {
                "operationId": "api_v1_wbs_work_package_templates_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkPackageTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkPackageTemplate"
                        }
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "delete": {
                "operationId": "api_v1_wbs_work_package_templates_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this work package template.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/wbs/work_packages/": {
            "get": {
                "operationId": "api_v1_wbs_work_packages_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "regions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "work_package_template",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "has_workable_work_items",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "area",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name_or_system_name",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "has_work_for_subcontractor",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "has_work_for_crew",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "premise",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "post": {
                "operationId": "api_v1_wbs_work_packages_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_packages/batch/": {
            "post": {
                "operationId": "api_v1_wbs_work_packages_batch_create",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "delete": {
                "operationId": "api_v1_wbs_work_packages_batch_delete",
                "description": "Performs batch operations.\nFor deleting, the request method must be DELETE and the body must be an array of primary keys.\nFor updating and/or creating, the method must be POST and the body must be an array of model-like objects. If\nan object does not have a primary key defined, a model instance will be created; otherwise an update will be\nperformed. Updates and creations can be done in the same request.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/work_packages/{id}/": {
            "get": {
                "operationId": "api_v1_wbs_work_packages_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "put": {
                "operationId": "api_v1_wbs_work_packages_update",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "patch": {
                "operationId": "api_v1_wbs_work_packages_partial_update",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "delete": {
                "operationId": "api_v1_wbs_work_packages_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Work Package.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/wbs/work_packages/{id}/pdf/": {
            "get": {
                "operationId": "api_v1_wbs_work_packages_pdf",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this Work Package.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/wbs/work_packages_query": {
            "get": {
                "operationId": "api_v1_wbs_work_packages_query_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/workable_work_orders": {
            "get": {
                "operationId": "api_v1_wbs_workable_work_orders_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/wbs/workable_work_packages": {
            "get": {
                "operationId": "api_v1_wbs_workable_work_packages_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Wbs"
                ]
            },
            "parameters": []
        },
        "/api/v1/work_item_categories/": {
            "get": {
                "operationId": "api_v1_work_item_categories_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/WorkItemCategory"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Work item categories"
                ]
            },
            "post": {
                "operationId": "api_v1_work_item_categories_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkItemCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkItemCategory"
                        }
                    }
                },
                "tags": [
                    "Work item categories"
                ]
            },
            "parameters": []
        },
        "/api/v1/work_item_categories/{id}/": {
            "get": {
                "operationId": "api_v1_work_item_categories_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkItemCategory"
                        }
                    }
                },
                "tags": [
                    "Work item categories"
                ]
            },
            "put": {
                "operationId": "api_v1_work_item_categories_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkItemCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkItemCategory"
                        }
                    }
                },
                "tags": [
                    "Work item categories"
                ]
            },
            "patch": {
                "operationId": "api_v1_work_item_categories_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkItemCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkItemCategory"
                        }
                    }
                },
                "tags": [
                    "Work item categories"
                ]
            },
            "delete": {
                "operationId": "api_v1_work_item_categories_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Work item categories"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this work item category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/api/v1/work_order_categories/": {
            "get": {
                "operationId": "api_v1_work_order_categories_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/WorkOrderCategory"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Work order categories"
                ]
            },
            "post": {
                "operationId": "api_v1_work_order_categories_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkOrderCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkOrderCategory"
                        }
                    }
                },
                "tags": [
                    "Work order categories"
                ]
            },
            "parameters": []
        },
        "/api/v1/work_order_categories/{id}/": {
            "get": {
                "operationId": "api_v1_work_order_categories_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkOrderCategory"
                        }
                    }
                },
                "tags": [
                    "Work order categories"
                ]
            },
            "put": {
                "operationId": "api_v1_work_order_categories_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkOrderCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkOrderCategory"
                        }
                    }
                },
                "tags": [
                    "Work order categories"
                ]
            },
            "patch": {
                "operationId": "api_v1_work_order_categories_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WorkOrderCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WorkOrderCategory"
                        }
                    }
                },
                "tags": [
                    "Work order categories"
                ]
            },
            "delete": {
                "operationId": "api_v1_work_order_categories_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Work order categories"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this work order category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/auth/auth_info": {
            "get": {
                "operationId": "auth_auth_info_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "parameters": []
        },
        "/auth/change_password": {
            "post": {
                "operationId": "auth_change_password_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "operationId": "auth_change_password_update",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "parameters": []
        },
        "/auth/login_complete": {
            "get": {
                "operationId": "auth_login_complete_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "parameters": []
        },
        "/auth/logout": {
            "post": {
                "operationId": "auth_logout_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "parameters": []
        },
        "/auth/permissions/": {
            "get": {
                "operationId": "auth_permissions_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "codename",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "group",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Permission"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "operationId": "auth_permissions_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Permission"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Permission"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "parameters": []
        },
        "/auth/permissions/{id}/": {
            "get": {
                "operationId": "auth_permissions_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Permission"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "operationId": "auth_permissions_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Permission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Permission"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "patch": {
                "operationId": "auth_permissions_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Permission"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Permission"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "delete": {
                "operationId": "auth_permissions_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this permission.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/auth/redirect_to_login": {
            "get": {
                "operationId": "auth_redirect_to_login_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "parameters": []
        },
        "/auth/reset_password": {
            "get": {
                "operationId": "auth_reset_password_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "operationId": "auth_reset_password_create",
                "description": "",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "operationId": "auth_reset_password_update",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "parameters": []
        },
        "/auth/security_groups/": {
            "get": {
                "operationId": "auth_security_groups_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "permissions",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Role"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "operationId": "auth_security_groups_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "parameters": []
        },
        "/auth/security_groups/{id}/": {
            "get": {
                "operationId": "auth_security_groups_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "operationId": "auth_security_groups_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "patch": {
                "operationId": "auth_security_groups_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "delete": {
                "operationId": "auth_security_groups_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this group.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/auth/token/obtain": {
            "post": {
                "operationId": "auth_token_obtain_create",
                "summary": "API View that receives a POST with a user's username and password.",
                "description": "Returns a JSON Web Token that can be used for authenticated requests.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WebToken"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WebToken"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "parameters": []
        },
        "/auth/token/refresh": {
            "post": {
                "operationId": "auth_token_refresh_create",
                "summary": "API View that returns a refreshed token (with new expiration) based on\nexisting token",
                "description": "If the token was created based on an external token, then we should refresh it using the same\nexternal provider, if not, use the original logic",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RefreshToken"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RefreshToken"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "parameters": []
        },
        "/auth/token/verify": {
            "post": {
                "operationId": "auth_token_verify_create",
                "description": "API View that checks the veracity of a token, returning the token if it\nis valid.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/VerifyJSONWebToken"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/VerifyJSONWebToken"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "parameters": []
        },
        "/auth/user_info": {
            "get": {
                "operationId": "auth_user_info_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "parameters": []
        },
        "/auth/users/": {
            "get": {
                "operationId": "auth_users_list",
                "description": "",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_staff",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Account"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "post": {
                "operationId": "auth_users_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "parameters": []
        },
        "/auth/users/{id}/": {
            "get": {
                "operationId": "auth_users_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "put": {
                "operationId": "auth_users_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "patch": {
                "operationId": "auth_users_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "delete": {
                "operationId": "auth_users_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "Auth"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this account.",
                    "required": true,
                    "type": "integer"
                }
            ]
        }
    },
    "definitions": {
        "EventHook": {
            "required": [
                "on_event_type",
                "execution_order",
                "content_type",
                "script"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "on_event_type": {
                    "title": "On event type",
                    "type": "string",
                    "enum": [
                        "ADD",
                        "UPD",
                        "DEL",
                        "CUS"
                    ]
                },
                "event_custom_type": {
                    "title": "Event custom type",
                    "type": "string",
                    "maxLength": 16,
                    "x-nullable": true
                },
                "execution_order": {
                    "title": "Execution order",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "config": {
                    "title": "Config",
                    "type": "object",
                    "x-nullable": true
                },
                "content_type": {
                    "title": "Content type",
                    "type": "integer"
                },
                "script": {
                    "title": "Script",
                    "type": "integer"
                }
            }
        },
        "Script": {
            "required": [
                "name",
                "version",
                "code",
                "author"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "version": {
                    "title": "Version",
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 1
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "minLength": 1
                },
                "author": {
                    "title": "Author",
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 1
                }
            }
        },
        "Company": {
            "required": [
                "code",
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "primary_contact_information": {
                    "title": "Primary contact information",
                    "type": "string",
                    "readOnly": true
                },
                "billing_contact_information": {
                    "title": "Billing contact information",
                    "type": "string",
                    "readOnly": true
                },
                "employee_count": {
                    "title": "Employee count",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "NO",
                        "EPC",
                        "SC"
                    ]
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "is_active": {
                    "title": "Is active",
                    "type": "boolean"
                },
                "phone1": {
                    "title": "Phone1",
                    "type": "string",
                    "maxLength": 20,
                    "x-nullable": true
                },
                "phone2": {
                    "title": "Phone2",
                    "type": "string",
                    "maxLength": 20,
                    "x-nullable": true
                },
                "post_code": {
                    "title": "Post code",
                    "type": "string",
                    "maxLength": 10,
                    "x-nullable": true
                },
                "address1": {
                    "title": "Address1",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "address2": {
                    "title": "Address2",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "country": {
                    "title": "Country",
                    "type": "string",
                    "maxLength": 30,
                    "x-nullable": true
                },
                "region": {
                    "title": "Region",
                    "type": "string",
                    "maxLength": 30,
                    "x-nullable": true
                },
                "city": {
                    "title": "City",
                    "type": "string",
                    "maxLength": 30,
                    "x-nullable": true
                },
                "company_color": {
                    "title": "Company color",
                    "type": "string",
                    "maxLength": 7,
                    "minLength": 1
                },
                "logo": {
                    "title": "Logo",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true,
                    "format": "uri"
                },
                "show_coded_labor_material_only": {
                    "title": "Show coded labor material only",
                    "type": "boolean"
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "default_user_tier": {
                    "title": "Default user tier",
                    "type": "string",
                    "enum": [
                        "Office User",
                        "Field User",
                        "Read Only",
                        "Support",
                        "Service",
                        "No Login"
                    ]
                },
                "system_admin_email": {
                    "title": "System admin email",
                    "type": "string",
                    "format": "email",
                    "maxLength": 255
                },
                "primary_contact": {
                    "title": "Primary contact",
                    "type": "integer",
                    "x-nullable": true
                },
                "billing_contact": {
                    "title": "Billing contact",
                    "type": "integer",
                    "x-nullable": true
                },
                "permission_group": {
                    "title": "Permission group",
                    "type": "integer",
                    "x-nullable": true
                },
                "admin_permission_group": {
                    "title": "Admin permission group",
                    "type": "integer",
                    "x-nullable": true
                },
                "read_permission": {
                    "title": "Read permission",
                    "type": "integer",
                    "x-nullable": true
                },
                "admin_permission": {
                    "title": "Admin permission",
                    "type": "integer",
                    "x-nullable": true
                },
                "denied_permission": {
                    "title": "Denied permission",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "CustomFieldOverrideCondition": {
            "required": [
                "values",
                "custom_field_settings",
                "override"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "values": {
                    "title": "Values",
                    "type": "object"
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "custom_field_settings": {
                    "title": "Custom field settings",
                    "type": "integer"
                },
                "override": {
                    "title": "Override",
                    "type": "integer"
                }
            }
        },
        "ConditionalCustomFieldOverride": {
            "required": [
                "condition",
                "order",
                "custom_field_settings"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "condition": {
                    "$ref": "#/definitions/CustomFieldOverrideCondition"
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "is_mandatory": {
                    "title": "Is mandatory",
                    "type": "boolean"
                },
                "visibility_on_mobile_app": {
                    "title": "Visibility on mobile app",
                    "type": "string",
                    "enum": [
                        "hidden",
                        "view only",
                        "editable"
                    ]
                },
                "order": {
                    "title": "Order",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "custom_field_settings": {
                    "title": "Custom field settings",
                    "type": "integer"
                }
            }
        },
        "ContentType": {
            "required": [
                "app_label",
                "model"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "app_label": {
                    "title": "App label",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "model": {
                    "title": "Python model class name",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                }
            }
        },
        "CrewCategory": {
            "required": [
                "name",
                "lead_role"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "lead_role_name": {
                    "title": "Lead role name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "crew_count": {
                    "title": "Crew count",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "default_velocity": {
                    "title": "Default velocity",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "lead_role": {
                    "title": "Lead role",
                    "type": "integer"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "equipment_categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "CrewPersonRole": {
            "required": [
                "crew",
                "person",
                "role"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "crew": {
                    "title": "Crew",
                    "type": "integer"
                },
                "person": {
                    "title": "Person",
                    "type": "integer"
                },
                "role": {
                    "title": "Role",
                    "type": "integer"
                }
            }
        },
        "Crew": {
            "required": [
                "name",
                "company"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "lead_name": {
                    "title": "Lead name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "crew_person_roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CrewPersonRole"
                    },
                    "readOnly": true
                },
                "equipment": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "crew_categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "crew_categories_equipment_ids": {
                    "title": "Crew categories equipment ids",
                    "type": "string",
                    "readOnly": true
                },
                "company_type": {
                    "title": "Company type",
                    "type": "string",
                    "readOnly": true
                },
                "crew_category_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "default_velocity": {
                    "title": "Default velocity",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "company": {
                    "title": "Company",
                    "type": "integer"
                },
                "lead": {
                    "title": "Lead",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "DefaultDynamicModelSerializer": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string",
                    "readOnly": true
                },
                "full_name": {
                    "title": "Full name",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "CrewNested": {
            "required": [
                "persons",
                "name",
                "company"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "persons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DefaultDynamicModelSerializer"
                    }
                },
                "equipment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DefaultDynamicModelSerializer"
                    },
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "company": {
                    "title": "Company",
                    "type": "integer"
                },
                "lead": {
                    "title": "Lead",
                    "type": "integer",
                    "x-nullable": true
                },
                "crew_categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "CustomFieldCategory": {
            "required": [
                "name",
                "content_type"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "color": {
                    "title": "Color",
                    "type": "string",
                    "maxLength": 7,
                    "x-nullable": true
                },
                "rank": {
                    "title": "Rank",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "network_operator": {
                    "title": "Network operator",
                    "type": "integer",
                    "x-nullable": true
                },
                "content_type": {
                    "title": "Content type",
                    "type": "integer"
                }
            }
        },
        "CustomFieldListOption": {
            "required": [
                "label",
                "settings"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "rank": {
                    "title": "Rank",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "settings": {
                    "title": "Settings",
                    "type": "integer"
                }
            }
        },
        "ChildCustomFieldSettings": {
            "required": [
                "label"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "readOnly": true
                },
                "list_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomFieldListOption"
                    },
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "data_type": {
                    "title": "Data type",
                    "type": "string",
                    "enum": [
                        "boolean",
                        "date",
                        "date_time",
                        "string",
                        "number",
                        "list",
                        "entity_list",
                        "file",
                        "table"
                    ]
                },
                "data_format": {
                    "title": "Data format",
                    "type": "string",
                    "enum": [
                        "url",
                        "multiline"
                    ]
                },
                "label": {
                    "title": "Label",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "rank": {
                    "title": "Rank",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "entity_list_content_type": {
                    "title": "Entity list content type",
                    "type": "integer",
                    "x-nullable": true
                },
                "parent": {
                    "title": "Parent",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "CustomFieldSettings": {
            "required": [
                "label",
                "content_type",
                "network_operator"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "readOnly": true
                },
                "list_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomFieldListOption"
                    },
                    "readOnly": true
                },
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ChildCustomFieldSettings"
                    },
                    "readOnly": true
                },
                "entity_list_content_type": {
                    "title": "Entity list content type",
                    "type": "integer",
                    "x-nullable": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "data_type": {
                    "title": "Data type",
                    "type": "string",
                    "enum": [
                        "boolean",
                        "date",
                        "date_time",
                        "string",
                        "number",
                        "list",
                        "entity_list",
                        "file",
                        "table"
                    ],
                    "default": "string"
                },
                "data_format": {
                    "title": "Data format",
                    "type": "string",
                    "enum": [
                        "url",
                        "multiline"
                    ]
                },
                "label": {
                    "title": "Label",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "rank": {
                    "title": "Rank",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "content_type": {
                    "title": "Content type",
                    "type": "integer",
                    "x-nullable": true
                },
                "network_operator": {
                    "title": "Network operator",
                    "type": "integer",
                    "x-nullable": true
                },
                "parent": {
                    "title": "Parent",
                    "type": "integer",
                    "x-nullable": true
                },
                "category": {
                    "title": "Category",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "CustomField": {
            "required": [
                "content_type"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "settings": {
                    "title": "Settings",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "readOnly": true
                },
                "data_type": {
                    "title": "Data type",
                    "type": "string",
                    "readOnly": true
                },
                "data_format": {
                    "title": "Data format",
                    "type": "string",
                    "readOnly": true
                },
                "entity_list_content_type": {
                    "title": "Entity list content type",
                    "type": "string",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "type": "string",
                    "readOnly": true
                },
                "rank": {
                    "title": "Rank",
                    "type": "string",
                    "readOnly": true
                },
                "parent": {
                    "title": "Parent",
                    "type": "string",
                    "readOnly": true
                },
                "network_operator": {
                    "title": "Network operator",
                    "type": "string",
                    "readOnly": true
                },
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ChildCustomFieldSettings"
                    },
                    "readOnly": true
                },
                "category": {
                    "title": "Category",
                    "type": "string",
                    "readOnly": true
                },
                "list_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomFieldListOption"
                    },
                    "readOnly": true
                },
                "object_id": {
                    "title": "Object id",
                    "description": "Object where the field will be defined. Leave empty to make it available to all objects             with this Content Type.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "x-nullable": true
                },
                "content_type": {
                    "title": "Content type",
                    "type": "integer"
                }
            }
        },
        "DataResource": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "added": {
                    "title": "Added",
                    "type": "string",
                    "format": "date-time"
                },
                "upload": {
                    "title": "Upload",
                    "type": "string",
                    "readOnly": true,
                    "format": "uri"
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "extension": {
                    "title": "Extension",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "thumbnail": {
                    "title": "Thumbnail",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true,
                    "format": "uri"
                }
            }
        },
        "DesignElementCategory": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "minLength": 1
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "networking",
                        "infrastructure"
                    ]
                },
                "icon": {
                    "title": "Icon",
                    "type": "string",
                    "maxLength": 50,
                    "x-nullable": true
                },
                "color": {
                    "title": "Color",
                    "type": "string",
                    "maxLength": 7,
                    "x-nullable": true
                },
                "incomplete_color": {
                    "title": "Incomplete color",
                    "type": "string",
                    "maxLength": 7,
                    "x-nullable": true
                },
                "complete_linetype": {
                    "title": "Complete linetype",
                    "type": "string",
                    "enum": [
                        "solid",
                        "dashed"
                    ],
                    "x-nullable": true
                },
                "incomplete_linetype": {
                    "title": "Incomplete linetype",
                    "type": "string",
                    "enum": [
                        "solid",
                        "dashed"
                    ],
                    "x-nullable": true
                },
                "map_zoom_visibility": {
                    "title": "Map zoom visibility",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                }
            }
        },
        "CustomFieldToAnnotation": {
            "type": "object",
            "properties": {
                "value": {
                    "title": "Value",
                    "type": "object",
                    "x-nullable": true
                },
                "data_type": {
                    "title": "Data type",
                    "type": "string",
                    "readOnly": true
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "readOnly": true
                },
                "design_element": {
                    "title": "Design element",
                    "type": "integer",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "Offset": {
            "required": [
                "redline_vertex"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "offset_to": {
                    "title": "Offset to",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "station": {
                    "title": "Station",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "offset": {
                    "title": "Offset",
                    "type": "number",
                    "x-nullable": true
                },
                "unit": {
                    "title": "Unit",
                    "type": "string",
                    "enum": [
                        "m",
                        "f"
                    ],
                    "x-nullable": true
                },
                "redline_vertex": {
                    "title": "Redline vertex",
                    "type": "integer"
                }
            }
        },
        "RedlineVertex": {
            "required": [
                "offsets",
                "design_element"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "offsets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Offset"
                    }
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "reference_point_lat": {
                    "title": "Reference point lat",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 1
                },
                "reference_point_lon": {
                    "title": "Reference point lon",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 1
                },
                "design_element": {
                    "title": "Design element",
                    "type": "integer"
                }
            }
        },
        "DesignElement": {
            "required": [
                "uid",
                "label",
                "category",
                "network_operator"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "the_geom": {
                    "title": "The geom",
                    "type": "string",
                    "readOnly": true
                },
                "as_built_annotations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomFieldToAnnotation"
                    },
                    "readOnly": true
                },
                "redline_vertices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RedlineVertex"
                    },
                    "readOnly": true
                },
                "category_name": {
                    "title": "Category name",
                    "type": "string",
                    "readOnly": true
                },
                "category_icon": {
                    "title": "Category icon",
                    "type": "string",
                    "readOnly": true
                },
                "location": {
                    "title": "Location",
                    "type": "string",
                    "readOnly": true
                },
                "custom_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomField"
                    },
                    "readOnly": true
                },
                "custom_field_values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "feature_length": {
                    "title": "Feature length",
                    "type": "string",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "label": {
                    "title": "Label",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 65535,
                    "minLength": 1
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "planned",
                        "completed",
                        "verified",
                        "disputed"
                    ]
                },
                "go_from": {
                    "title": "Go from",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "go_to": {
                    "title": "Go to",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "full_address": {
                    "title": "Full address",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "measured_length": {
                    "title": "Measured length",
                    "type": "number",
                    "format": "decimal",
                    "x-nullable": true
                },
                "region": {
                    "title": "Region",
                    "type": "integer",
                    "x-nullable": true
                },
                "design": {
                    "title": "Design",
                    "type": "integer",
                    "x-nullable": true
                },
                "category": {
                    "title": "Category",
                    "type": "integer"
                },
                "element_work_template": {
                    "title": "Element work template",
                    "type": "integer",
                    "x-nullable": true
                },
                "network_operator": {
                    "title": "Network operator",
                    "type": "integer"
                }
            }
        },
        "SimpleTicket": {
            "type": "object",
            "properties": {
                "priority": {
                    "title": "Priority",
                    "type": "integer",
                    "enum": [
                        10,
                        20,
                        30,
                        40
                    ],
                    "x-nullable": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "SimpleNestedTicketCollection": {
            "required": [
                "tickets"
            ],
            "type": "object",
            "properties": {
                "tickets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SimpleTicket"
                    }
                }
            }
        },
        "DesignElementWithTickets": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "the_geom": {
                    "title": "The geom",
                    "type": "string",
                    "readOnly": true
                },
                "ticket_collection": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SimpleNestedTicketCollection"
                    },
                    "readOnly": true
                }
            }
        },
        "DesignElementWork": {
            "required": [
                "category"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "integer",
                    "readOnly": true
                },
                "the_geom": {
                    "title": "The geom",
                    "type": "object"
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "label": {
                    "title": "Label",
                    "type": "string",
                    "x-nullable": true
                },
                "container_design_element": {
                    "title": "Container design element",
                    "type": "string",
                    "readOnly": true
                },
                "category_name": {
                    "title": "Category name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "network_operator": {
                    "title": "Network operator",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "x-nullable": true
                },
                "go_from": {
                    "title": "Go from",
                    "type": "string",
                    "default": "",
                    "x-nullable": true
                },
                "go_to": {
                    "title": "Go to",
                    "type": "string",
                    "default": "",
                    "x-nullable": true
                },
                "full_address": {
                    "title": "Full address",
                    "type": "string",
                    "default": "",
                    "x-nullable": true
                },
                "centroid": {
                    "title": "Centroid",
                    "type": "string",
                    "readOnly": true
                },
                "design": {
                    "title": "Design",
                    "type": "string",
                    "readOnly": true
                },
                "region": {
                    "title": "Region",
                    "type": "string",
                    "readOnly": true
                },
                "region_name": {
                    "title": "Region name",
                    "type": "string",
                    "readOnly": true
                },
                "location": {
                    "title": "Location",
                    "type": "string",
                    "readOnly": true
                },
                "work_items": {
                    "title": "Work items",
                    "type": "string",
                    "readOnly": true
                },
                "custom_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomField"
                    },
                    "readOnly": true
                },
                "custom_field_values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "redline_vertices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RedlineVertex"
                    },
                    "readOnly": true
                },
                "files_count": {
                    "title": "Files count",
                    "type": "string",
                    "readOnly": true
                },
                "feature_length": {
                    "title": "Feature length",
                    "type": "string",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "measured_length": {
                    "title": "Measured length",
                    "type": "number",
                    "format": "decimal",
                    "x-nullable": true
                },
                "category": {
                    "title": "Category",
                    "type": "integer"
                },
                "element_work_template": {
                    "title": "Element work template",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "SimpleProcess": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "source": {
                    "title": "Source",
                    "type": "string",
                    "readOnly": true
                },
                "count_work_items": {
                    "title": "Count work items",
                    "type": "integer",
                    "readOnly": true
                },
                "created_by_name": {
                    "title": "Created by name",
                    "type": "string",
                    "readOnly": true
                },
                "work_load_status": {
                    "title": "Work load status",
                    "type": "string",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 1024,
                    "x-nullable": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "queued",
                        "finished",
                        "failed",
                        "started",
                        "preexisting",
                        "deleted"
                    ],
                    "x-nullable": true
                },
                "validation_status": {
                    "title": "Validation status",
                    "type": "string",
                    "enum": [
                        "queued",
                        "finished",
                        "failed",
                        "started"
                    ],
                    "x-nullable": true
                },
                "upload_status": {
                    "title": "Upload status",
                    "type": "string",
                    "enum": [
                        "queued",
                        "finished",
                        "failed",
                        "started"
                    ],
                    "x-nullable": true
                },
                "processed_design_elements_count": {
                    "title": "Processed design elements count",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "failed_design_elements_count": {
                    "title": "Failed design elements count",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "created_work_items_count": {
                    "title": "Created work items count",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "Add Work",
                        "Design Elements Import",
                        "Design Elements Work Import",
                        "Design Elements Attributes Import",
                        "Design Elements Delete Work Import",
                        "Design Elements Replace Work Import"
                    ],
                    "x-nullable": true
                },
                "job_id": {
                    "title": "Job id",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "validation_job_id": {
                    "title": "Validation job id",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "upload_job_id": {
                    "title": "Upload job id",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "deleted_date": {
                    "title": "Deleted date",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "settings": {
                    "title": "Settings",
                    "type": "object",
                    "x-nullable": true
                },
                "table_slug": {
                    "title": "Table slug",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "file_fields": {
                    "title": "File fields",
                    "type": "object",
                    "x-nullable": true
                },
                "shrinked_file_fields": {
                    "title": "Shrinked file fields",
                    "type": "object",
                    "x-nullable": true
                },
                "fatal_error_message": {
                    "title": "Fatal error message",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "current_step": {
                    "title": "Current step",
                    "type": "string",
                    "maxLength": 64,
                    "x-nullable": true
                },
                "created_by": {
                    "title": "Created by",
                    "type": "integer",
                    "x-nullable": true
                },
                "deleted_by": {
                    "title": "Deleted by",
                    "type": "integer",
                    "x-nullable": true
                },
                "data_resource": {
                    "title": "Data resource",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "Design": {
            "required": [
                "design_name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "modified_by_name": {
                    "title": "Modified by name",
                    "type": "string",
                    "readOnly": true
                },
                "process": {
                    "$ref": "#/definitions/SimpleProcess"
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "design_type": {
                    "title": "Design type",
                    "type": "string",
                    "enum": [
                        "f",
                        "e",
                        "n",
                        "o"
                    ]
                },
                "design_name": {
                    "title": "Design name",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "modified_by": {
                    "title": "Modified by",
                    "type": "integer",
                    "x-nullable": true
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "ProcessSettingsTemplate": {
            "required": [
                "name",
                "network_operator"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 200,
                    "minLength": 1
                },
                "modified_by": {
                    "title": "Modified by",
                    "type": "integer",
                    "readOnly": true
                },
                "network_operator": {
                    "title": "Network operator",
                    "type": "integer"
                },
                "process": {
                    "title": "Process",
                    "type": "integer",
                    "x-nullable": true
                },
                "data": {
                    "title": "Data",
                    "type": "object",
                    "readOnly": true
                }
            }
        },
        "Process": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "total_items": {
                    "title": "Total items",
                    "type": "string",
                    "readOnly": true
                },
                "statuses_results_count": {
                    "title": "Statuses results count",
                    "type": "string",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 1024,
                    "x-nullable": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "queued",
                        "finished",
                        "failed",
                        "started",
                        "preexisting",
                        "deleted"
                    ],
                    "x-nullable": true
                },
                "validation_status": {
                    "title": "Validation status",
                    "type": "string",
                    "enum": [
                        "queued",
                        "finished",
                        "failed",
                        "started"
                    ],
                    "x-nullable": true
                },
                "upload_status": {
                    "title": "Upload status",
                    "type": "string",
                    "enum": [
                        "queued",
                        "finished",
                        "failed",
                        "started"
                    ],
                    "x-nullable": true
                },
                "processed_design_elements_count": {
                    "title": "Processed design elements count",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "failed_design_elements_count": {
                    "title": "Failed design elements count",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "created_work_items_count": {
                    "title": "Created work items count",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "Add Work",
                        "Design Elements Import",
                        "Design Elements Work Import",
                        "Design Elements Attributes Import",
                        "Design Elements Delete Work Import",
                        "Design Elements Replace Work Import"
                    ],
                    "x-nullable": true
                },
                "job_id": {
                    "title": "Job id",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "validation_job_id": {
                    "title": "Validation job id",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "upload_job_id": {
                    "title": "Upload job id",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "deleted_date": {
                    "title": "Deleted date",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "settings": {
                    "title": "Settings",
                    "type": "object",
                    "x-nullable": true
                },
                "table_slug": {
                    "title": "Table slug",
                    "type": "string",
                    "maxLength": 100,
                    "x-nullable": true
                },
                "file_fields": {
                    "title": "File fields",
                    "type": "object",
                    "x-nullable": true
                },
                "shrinked_file_fields": {
                    "title": "Shrinked file fields",
                    "type": "object",
                    "x-nullable": true
                },
                "fatal_error_message": {
                    "title": "Fatal error message",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "current_step": {
                    "title": "Current step",
                    "type": "string",
                    "maxLength": 64,
                    "x-nullable": true
                },
                "created_by": {
                    "title": "Created by",
                    "type": "integer",
                    "x-nullable": true
                },
                "deleted_by": {
                    "title": "Deleted by",
                    "type": "integer",
                    "x-nullable": true
                },
                "data_resource": {
                    "title": "Data resource",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "EntityFileFolder": {
            "required": [
                "label",
                "content_type"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "object_id": {
                    "title": "Object id",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "x-nullable": true
                },
                "label": {
                    "title": "Label",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "added": {
                    "title": "Added",
                    "type": "string",
                    "format": "date-time"
                },
                "content_type": {
                    "title": "Content type",
                    "type": "integer"
                },
                "created_by": {
                    "title": "Created by",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "EntityFile": {
            "required": [
                "folder_name",
                "content_type"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created_by_name": {
                    "title": "Created by name",
                    "type": "string",
                    "readOnly": true
                },
                "folder_name": {
                    "title": "Folder name",
                    "type": "string"
                },
                "added": {
                    "title": "Added",
                    "type": "string",
                    "format": "date-time"
                },
                "upload": {
                    "title": "Upload",
                    "type": "string",
                    "readOnly": true,
                    "format": "uri"
                },
                "thumbnail": {
                    "title": "Thumbnail",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true,
                    "format": "uri"
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "extension": {
                    "title": "Extension",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1,
                    "x-nullable": true
                },
                "original_file_name": {
                    "title": "Original file name",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "file_size": {
                    "title": "File size",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "metadata": {
                    "title": "Metadata",
                    "type": "object",
                    "x-nullable": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "object_id": {
                    "title": "Object id",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "x-nullable": true
                },
                "label": {
                    "title": "Label",
                    "type": "string",
                    "maxLength": 255
                },
                "created_by": {
                    "title": "Created by",
                    "type": "integer",
                    "readOnly": true
                },
                "content_type": {
                    "title": "Content type",
                    "type": "integer"
                }
            }
        },
        "Equipment": {
            "required": [
                "equipment_category"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "equipment_category_type": {
                    "title": "Equipment category type",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "equipment_category_make": {
                    "title": "Equipment category make",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "equipment_category_model": {
                    "title": "Equipment category model",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "equipment_category_code": {
                    "title": "Equipment category code",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "equipment_category_daily_rate": {
                    "title": "Equipment category daily rate",
                    "type": "number",
                    "readOnly": true
                },
                "crews": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "is_active": {
                    "title": "Is active",
                    "type": "boolean"
                },
                "identifier": {
                    "title": "Identifier",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "serial_number": {
                    "title": "Serial number",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "equipment_category": {
                    "title": "Equipment category",
                    "type": "integer"
                }
            }
        },
        "EquipmentCategory": {
            "required": [
                "name",
                "make",
                "model"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "equipment_count": {
                    "title": "Equipment count",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "is_active": {
                    "title": "Is active",
                    "type": "boolean"
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "make": {
                    "title": "Make",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "model": {
                    "title": "Model",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "daily_rate": {
                    "title": "Daily rate",
                    "type": "number",
                    "x-nullable": true
                },
                "rank": {
                    "title": "Rank",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                }
            }
        },
        "GridView": {
            "required": [
                "name",
                "grid_id",
                "preferences"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "owner": {
                    "title": "Owner",
                    "type": "integer"
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "grid_id": {
                    "title": "Grid id",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "is_temporary": {
                    "title": "Is temporary",
                    "type": "boolean"
                },
                "preferences": {
                    "title": "Preferences",
                    "type": "object"
                }
            }
        },
        "InfrastructureCategory": {
            "required": [
                "name",
                "code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "is_active": {
                    "title": "Is active",
                    "type": "boolean"
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "color": {
                    "title": "Color",
                    "type": "string",
                    "maxLength": 7,
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "rank": {
                    "title": "Rank",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                }
            }
        },
        "InvoiceItem": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "readOnly": true
                },
                "is_past_due": {
                    "title": "Is past due",
                    "type": "string",
                    "readOnly": true
                },
                "system_name": {
                    "title": "System name",
                    "type": "string",
                    "readOnly": true
                },
                "system_code": {
                    "title": "System code",
                    "type": "string",
                    "readOnly": true
                },
                "operator_code": {
                    "title": "Operator code",
                    "type": "string",
                    "readOnly": true
                },
                "payee_name": {
                    "title": "Payee name",
                    "type": "string",
                    "readOnly": true
                },
                "payee_code": {
                    "title": "Payee code",
                    "type": "string",
                    "readOnly": true
                },
                "payee_type": {
                    "title": "Payee type",
                    "type": "string",
                    "readOnly": true
                },
                "payer_name": {
                    "title": "Payer name",
                    "type": "string",
                    "readOnly": true
                },
                "payer_code": {
                    "title": "Payer code",
                    "type": "string",
                    "readOnly": true
                },
                "applied_pricing_rules": {
                    "title": "Applied pricing rules",
                    "type": "string",
                    "readOnly": true
                },
                "pricing_rule_set_name": {
                    "title": "Pricing rule set name",
                    "type": "string",
                    "readOnly": true
                },
                "forecasted_quantity": {
                    "title": "Forecasted quantity",
                    "type": "string",
                    "readOnly": true
                },
                "final_price": {
                    "title": "Final price",
                    "type": "string",
                    "readOnly": true
                },
                "final_unit_price": {
                    "title": "Final unit price",
                    "type": "number",
                    "format": "decimal",
                    "readOnly": true
                },
                "base_price": {
                    "title": "Base price",
                    "type": "string",
                    "readOnly": true
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "readOnly": true
                },
                "unit_price_adjustment": {
                    "title": "Unit price adjustment",
                    "type": "number",
                    "format": "decimal",
                    "readOnly": true
                },
                "total_forecasted_price": {
                    "title": "Total forecasted price",
                    "type": "number",
                    "format": "decimal",
                    "readOnly": true
                },
                "total_actual_price": {
                    "title": "Total actual price",
                    "type": "number",
                    "format": "decimal",
                    "readOnly": true
                },
                "total_estimated_price": {
                    "title": "Total estimated price",
                    "type": "number",
                    "format": "decimal",
                    "readOnly": true
                },
                "total_remaining_price": {
                    "title": "Total remaining price",
                    "type": "number",
                    "format": "decimal",
                    "readOnly": true
                },
                "design_element": {
                    "title": "Design element",
                    "type": "string",
                    "readOnly": true
                },
                "unit": {
                    "title": "Unit",
                    "type": "string",
                    "readOnly": true
                },
                "unit_abbreviation": {
                    "title": "Unit abbreviation",
                    "type": "string",
                    "readOnly": true
                },
                "work_items": {
                    "title": "Work items",
                    "type": "string",
                    "readOnly": true
                },
                "work_orders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true
                },
                "work_package": {
                    "title": "Work package",
                    "type": "string",
                    "readOnly": true
                },
                "region": {
                    "title": "Region",
                    "type": "string",
                    "readOnly": true
                },
                "invoice_system_name": {
                    "title": "Invoice system name",
                    "type": "string",
                    "readOnly": true
                },
                "invoice_client_invoice_number": {
                    "title": "Invoice client invoice number",
                    "type": "string",
                    "readOnly": true
                },
                "invoice_status": {
                    "title": "Invoice status",
                    "type": "string",
                    "readOnly": true
                },
                "client_invoice_number": {
                    "title": "Client invoice number",
                    "type": "string",
                    "readOnly": true
                },
                "is_deliverable": {
                    "title": "Is deliverable",
                    "type": "string",
                    "readOnly": true
                },
                "work_item_quantities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "custom_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomField"
                    },
                    "readOnly": true
                },
                "custom_field_values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "actual_quantity": {
                    "title": "Actual quantity",
                    "type": "number",
                    "format": "decimal"
                },
                "estimated_quantity": {
                    "title": "Estimated quantity",
                    "type": "number",
                    "format": "decimal",
                    "minimum": 0
                },
                "remaining_quantity": {
                    "title": "Remaining quantity",
                    "type": "number",
                    "format": "decimal",
                    "minimum": 0
                },
                "unit_price": {
                    "title": "Unit price",
                    "type": "number",
                    "format": "decimal"
                },
                "overridden_unit_price": {
                    "title": "Overridden unit price",
                    "type": "number",
                    "format": "decimal",
                    "minimum": 0,
                    "x-nullable": true
                },
                "payee": {
                    "title": "Payee",
                    "type": "integer",
                    "readOnly": true
                },
                "payer": {
                    "title": "Payer",
                    "type": "integer",
                    "readOnly": true
                },
                "invoice": {
                    "title": "Invoice",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "CompanyInvoice": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "address1": {
                    "title": "Address1",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "city": {
                    "title": "City",
                    "type": "string",
                    "maxLength": 30,
                    "x-nullable": true
                },
                "region": {
                    "title": "Region",
                    "type": "string",
                    "maxLength": 30,
                    "x-nullable": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "post_code": {
                    "title": "Post code",
                    "type": "string",
                    "maxLength": 10,
                    "x-nullable": true
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "NO",
                        "EPC",
                        "SC"
                    ]
                }
            }
        },
        "BillingContact": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "address1": {
                    "title": "Address1",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "address2": {
                    "title": "Address2",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "city": {
                    "title": "City",
                    "type": "string",
                    "maxLength": 30,
                    "x-nullable": true
                },
                "region": {
                    "title": "Region",
                    "type": "string",
                    "maxLength": 30,
                    "x-nullable": true
                },
                "phone1": {
                    "title": "Phone1",
                    "type": "string",
                    "maxLength": 20,
                    "x-nullable": true
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "first_name": {
                    "title": "First name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "last_name": {
                    "title": "Last name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "full_name": {
                    "title": "Full name",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "Invoice": {
            "required": [
                "payee",
                "payer",
                "program_segment"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "should_recalculate": {
                    "title": "Should recalculate",
                    "type": "boolean",
                    "x-nullable": true
                },
                "payee_name": {
                    "title": "Payee name",
                    "type": "string",
                    "readOnly": true
                },
                "payee_code": {
                    "title": "Payee code",
                    "type": "string",
                    "readOnly": true
                },
                "payee_logo": {
                    "title": "Payee logo",
                    "type": "string",
                    "readOnly": true,
                    "format": "uri"
                },
                "payer_name": {
                    "title": "Payer name",
                    "type": "string",
                    "readOnly": true
                },
                "payer_code": {
                    "title": "Payer code",
                    "type": "string",
                    "readOnly": true
                },
                "payer_data": {
                    "$ref": "#/definitions/CompanyInvoice"
                },
                "payee_data": {
                    "$ref": "#/definitions/CompanyInvoice"
                },
                "total_price": {
                    "title": "Total price",
                    "type": "number",
                    "format": "decimal",
                    "readOnly": true
                },
                "total_actual_price": {
                    "title": "Total actual price",
                    "type": "number",
                    "format": "decimal",
                    "readOnly": true
                },
                "total_estimated_price": {
                    "title": "Total estimated price",
                    "type": "number",
                    "format": "decimal",
                    "readOnly": true
                },
                "sub_total_price": {
                    "title": "Sub total price",
                    "type": "number",
                    "format": "decimal",
                    "readOnly": true
                },
                "sub_total_actual_price": {
                    "title": "Sub total actual price",
                    "type": "number",
                    "format": "decimal",
                    "readOnly": true
                },
                "sub_total_estimated_price": {
                    "title": "Sub total estimated price",
                    "type": "number",
                    "format": "decimal",
                    "readOnly": true
                },
                "tax_breakdown": {
                    "title": "Tax breakdown",
                    "type": "string",
                    "readOnly": true
                },
                "tax_actual_breakdown": {
                    "title": "Tax actual breakdown",
                    "type": "string",
                    "readOnly": true
                },
                "tax_estimated_breakdown": {
                    "title": "Tax estimated breakdown",
                    "type": "string",
                    "readOnly": true
                },
                "total_price_by_item_type": {
                    "title": "Total price by item type",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "default": "pending",
                    "minLength": 1
                },
                "is_past_due": {
                    "title": "Is past due",
                    "type": "string",
                    "readOnly": true
                },
                "is_locked": {
                    "title": "Is locked",
                    "type": "string",
                    "readOnly": true
                },
                "has_pricing_rule_set": {
                    "title": "Has pricing rule set",
                    "type": "string",
                    "readOnly": true
                },
                "payee_billing_contact": {
                    "$ref": "#/definitions/BillingContact"
                },
                "payer_billing_contact": {
                    "$ref": "#/definitions/BillingContact"
                },
                "subcontract_code": {
                    "title": "Subcontract code",
                    "type": "string",
                    "readOnly": true
                },
                "contract_code": {
                    "title": "Contract code",
                    "type": "string",
                    "readOnly": true
                },
                "contract_name": {
                    "title": "Contract name",
                    "type": "string",
                    "readOnly": true
                },
                "is_payable": {
                    "title": "Is payable",
                    "type": "string",
                    "readOnly": true
                },
                "billing_terms": {
                    "title": "Billing terms",
                    "type": "string",
                    "readOnly": true
                },
                "related_work_orders": {
                    "title": "Related work orders",
                    "type": "string",
                    "readOnly": true
                },
                "related_work_packages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true
                },
                "invoice_items": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "custom_fields": {
                    "title": "Custom fields",
                    "type": "string",
                    "readOnly": true
                },
                "custom_field_values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "can_recalculate": {
                    "title": "Can recalculate",
                    "type": "string",
                    "readOnly": true
                },
                "purchase_order_numbers": {
                    "title": "Purchase order numbers",
                    "type": "string",
                    "readOnly": true
                },
                "attention": {
                    "title": "Attention",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "status_last_modified": {
                    "title": "Status last modified",
                    "type": "object"
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "client_invoice_number": {
                    "title": "Invoice No.",
                    "type": "string",
                    "maxLength": 24,
                    "x-nullable": true
                },
                "invoice_date": {
                    "title": "Date Issued",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "last_pricing_recalculation": {
                    "title": "Last pricing recalculation",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "due_date": {
                    "title": "Due date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "system_name": {
                    "title": "System name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "payee": {
                    "title": "Payee",
                    "type": "integer"
                },
                "payer": {
                    "title": "Payer",
                    "type": "integer"
                },
                "program_segment": {
                    "title": "Program segment",
                    "type": "integer"
                },
                "tax_code": {
                    "title": "Tax code",
                    "type": "integer",
                    "x-nullable": true
                },
                "subcontract": {
                    "title": "Subcontract",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "DatePricingConditionNested": {
            "required": [
                "start_date",
                "end_date"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "pricing_rule": {
                    "title": "Pricing rule",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "start_date": {
                    "title": "Start date",
                    "type": "string",
                    "format": "date"
                },
                "end_date": {
                    "title": "End date",
                    "type": "string",
                    "format": "date"
                },
                "order": {
                    "title": "Order",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                }
            },
            "x-nullable": true
        },
        "RegionPricingConditionNested": {
            "required": [
                "regions"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "pricing_rule": {
                    "title": "Pricing rule",
                    "type": "integer",
                    "readOnly": true
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "operator": {
                    "title": "Operator",
                    "type": "string",
                    "enum": [
                        "in",
                        "not_in"
                    ]
                },
                "order": {
                    "title": "Order",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                }
            },
            "x-nullable": true
        },
        "ProgramSegmentPricingConditionNested": {
            "required": [
                "program_segment"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "pricing_rule": {
                    "title": "Pricing rule",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "order": {
                    "title": "Order",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "program_segment": {
                    "title": "Program segment",
                    "type": "integer"
                }
            },
            "x-nullable": true
        },
        "PricingRule": {
            "required": [
                "is_price_modifier_percentage"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "integer"
                },
                "pricing_rule_set": {
                    "title": "Pricing rule set",
                    "type": "integer",
                    "readOnly": true
                },
                "date_pricing_condition": {
                    "$ref": "#/definitions/DatePricingConditionNested"
                },
                "region_pricing_condition": {
                    "$ref": "#/definitions/RegionPricingConditionNested"
                },
                "program_segment_pricing_condition": {
                    "$ref": "#/definitions/ProgramSegmentPricingConditionNested"
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "price_modifier_value": {
                    "title": "Price modifier value",
                    "type": "number",
                    "format": "decimal"
                },
                "is_price_modifier_percentage": {
                    "title": "Is price modifier percentage",
                    "type": "boolean"
                },
                "order": {
                    "title": "Order",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                }
            }
        },
        "PricingRuleSet": {
            "required": [
                "name",
                "program"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "pricing_rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PricingRule"
                    }
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "notes": {
                    "title": "Notes",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "program": {
                    "title": "Program",
                    "type": "integer"
                },
                "subcontract": {
                    "title": "Subcontract",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "InvoiceItemNested": {
            "required": [
                "payee",
                "payer",
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "readOnly": true
                },
                "invoice_system_name": {
                    "title": "Invoice system name",
                    "type": "string",
                    "readOnly": true
                },
                "payee": {
                    "title": "Payee",
                    "type": "integer"
                },
                "payer": {
                    "title": "Payer",
                    "type": "integer"
                },
                "actual_quantity": {
                    "title": "Actual quantity",
                    "type": "string",
                    "readOnly": true
                },
                "estimated_quantity": {
                    "title": "Estimated quantity",
                    "type": "string",
                    "readOnly": true
                },
                "remaining_quantity": {
                    "title": "Remaining quantity",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "unit_price": {
                    "title": "Unit price",
                    "type": "number",
                    "format": "decimal"
                },
                "overridden_unit_price": {
                    "title": "Overridden unit price",
                    "type": "number",
                    "format": "decimal",
                    "minimum": 0,
                    "x-nullable": true
                },
                "invoice": {
                    "title": "Invoice",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "ProgressPayableItem": {
            "required": [
                "invoice_item",
                "work_order"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "invoice_item": {
                    "$ref": "#/definitions/InvoiceItemNested"
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "work_order": {
                    "title": "Work order",
                    "type": "integer"
                }
            }
        },
        "PurchaseOrder": {
            "required": [
                "number",
                "work_order",
                "payer",
                "payee"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "payee_name": {
                    "title": "Payee name",
                    "type": "string",
                    "readOnly": true
                },
                "work_order_name": {
                    "title": "Work order name",
                    "type": "string",
                    "readOnly": true
                },
                "work_package": {
                    "title": "Work package",
                    "type": "string",
                    "readOnly": true
                },
                "work_package_name": {
                    "title": "Work package name",
                    "type": "string",
                    "readOnly": true
                },
                "region": {
                    "title": "Region",
                    "type": "string",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "number": {
                    "title": "Number",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "amount": {
                    "title": "Amount",
                    "type": "number",
                    "format": "decimal"
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "work_order": {
                    "title": "Work order",
                    "type": "integer"
                },
                "payer": {
                    "title": "Payer",
                    "type": "integer"
                },
                "payee": {
                    "title": "Payee",
                    "type": "integer"
                }
            }
        },
        "RegionTaxCode": {
            "required": [
                "tax_code",
                "region"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "tax_code": {
                    "title": "Tax code",
                    "type": "integer"
                },
                "region": {
                    "title": "Region",
                    "type": "integer"
                }
            }
        },
        "PricingLevelNested": {
            "required": [
                "pricing_level_set"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "lower_limit": {
                    "title": "Lower limit",
                    "type": "string",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "rate_type": {
                    "title": "Rate type",
                    "type": "string",
                    "enum": [
                        "F",
                        "U"
                    ]
                },
                "rate": {
                    "title": "Rate",
                    "type": "number",
                    "format": "decimal"
                },
                "upper_limit": {
                    "title": "Upper limit",
                    "type": "number",
                    "format": "decimal",
                    "x-nullable": true
                },
                "pricing_level_set": {
                    "title": "Pricing level set",
                    "type": "integer"
                }
            }
        },
        "PricingLevelSetNested": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "pricing_levels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PricingLevelNested"
                    },
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                }
            }
        },
        "SubcontractPayableItemTemplate": {
            "required": [
                "pricing_level_set",
                "code",
                "payable_item_template",
                "subcontract"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "subcontractor_name": {
                    "title": "Subcontractor name",
                    "type": "string",
                    "readOnly": true
                },
                "pricing_level_set": {
                    "$ref": "#/definitions/PricingLevelSetNested"
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "unit_price": {
                    "title": "Unit price",
                    "type": "number",
                    "format": "decimal",
                    "x-nullable": true
                },
                "note": {
                    "title": "Note",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "payable_item_template": {
                    "title": "Payable item template",
                    "type": "integer"
                },
                "subcontract": {
                    "title": "Subcontract",
                    "type": "integer"
                },
                "pricing_rule_set": {
                    "title": "Pricing rule set",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "TaxCode": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "QuantityDescription": {
            "required": [
                "name",
                "unit"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "unit_imperial_name": {
                    "title": "Unit imperial name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "unit_metric_name": {
                    "title": "Unit metric name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "unit_factor": {
                    "title": "Unit factor",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "standard_unit": {
                    "title": "Standard unit",
                    "type": "string",
                    "readOnly": true
                },
                "name_unit": {
                    "title": "Name unit",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "standard_unit_system": {
                    "title": "Standard unit system",
                    "type": "string",
                    "enum": [
                        "metric",
                        "imperial"
                    ]
                },
                "category": {
                    "title": "Category",
                    "type": "string",
                    "enum": [
                        "labor",
                        "material"
                    ]
                },
                "unit_time": {
                    "title": "Unit time",
                    "type": "number"
                },
                "unit": {
                    "title": "Unit",
                    "type": "integer"
                }
            }
        },
        "MaterialCategory": {
            "required": [
                "name",
                "code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "material_count": {
                    "title": "Material count",
                    "type": "string",
                    "readOnly": true
                },
                "custom_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomField"
                    },
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "is_active": {
                    "title": "Is active",
                    "type": "boolean"
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "color": {
                    "title": "Color",
                    "type": "string",
                    "maxLength": 7,
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "rank": {
                    "title": "Rank",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                }
            }
        },
        "Material": {
            "required": [
                "name",
                "code",
                "quantity_description"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "custom_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomField"
                    },
                    "readOnly": true
                },
                "custom_field_values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "material_category_names": {
                    "title": "Material category names",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "is_active": {
                    "title": "Is active",
                    "type": "boolean"
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "color": {
                    "title": "Color",
                    "type": "string",
                    "maxLength": 7,
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "rank": {
                    "title": "Rank",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "size": {
                    "title": "Size",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "video_url": {
                    "title": "Video url",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "supplier": {
                    "title": "Supplier",
                    "type": "string",
                    "default": "",
                    "maxLength": 255
                },
                "quantity_description": {
                    "title": "Quantity description",
                    "type": "integer"
                },
                "material_categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "GpsLocation": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "longitude": {
                    "title": "Longitude",
                    "type": "number"
                },
                "latitude": {
                    "title": "Latitude",
                    "type": "number"
                },
                "altitude": {
                    "title": "Altitude",
                    "type": "number"
                },
                "accuracy": {
                    "title": "Accuracy",
                    "type": "number"
                }
            }
        },
        "ExtraWorkItemQuantityRequest": {
            "required": [
                "extra_work_item_request",
                "quantity_description"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "quantity_description_name": {
                    "title": "Quantity description name",
                    "type": "string",
                    "readOnly": true
                },
                "quantity_description_unit_imperial": {
                    "title": "Quantity description unit imperial",
                    "type": "string",
                    "readOnly": true
                },
                "quantity_description_unit_metric": {
                    "title": "Quantity description unit metric",
                    "type": "string",
                    "readOnly": true
                },
                "quantity_description_unit_factor": {
                    "title": "Quantity description unit factor",
                    "type": "string",
                    "readOnly": true
                },
                "quantity_description_unit_system": {
                    "title": "Quantity description unit system",
                    "type": "string",
                    "readOnly": true
                },
                "material_name": {
                    "title": "Material name",
                    "type": "string",
                    "readOnly": true
                },
                "material_code": {
                    "title": "Material code",
                    "type": "string",
                    "readOnly": true
                },
                "estimated_quantity": {
                    "title": "Estimated quantity",
                    "type": "string",
                    "readOnly": true,
                    "default": 0
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "quantity": {
                    "title": "Quantity",
                    "type": "number",
                    "format": "decimal",
                    "minimum": 0
                },
                "remaining_quantity": {
                    "title": "Remaining quantity",
                    "type": "number",
                    "format": "decimal",
                    "minimum": 0
                },
                "extra_work_item_request": {
                    "title": "Extra work item request",
                    "type": "integer"
                },
                "generated_work_item_quantity": {
                    "title": "Generated work item quantity",
                    "type": "integer",
                    "readOnly": true
                },
                "quantity_description": {
                    "title": "Quantity description",
                    "type": "integer"
                },
                "material": {
                    "title": "Material",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "FullExtraWorkItemRequest": {
            "required": [
                "location",
                "extra_work_order_request",
                "element_category"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "location": {
                    "$ref": "#/definitions/GpsLocation"
                },
                "quantities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExtraWorkItemQuantityRequest"
                    },
                    "readOnly": true
                },
                "as_built_annotations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomFieldToAnnotation"
                    },
                    "readOnly": true
                },
                "generated_work_item": {
                    "title": "Generated work item",
                    "type": "string",
                    "readOnly": true
                },
                "element_category_alias": {
                    "title": "Element category alias",
                    "type": "string",
                    "readOnly": true
                },
                "custom_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomField"
                    },
                    "readOnly": true
                },
                "custom_field_values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "overrides": {
                    "title": "Overrides",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255
                },
                "comment": {
                    "title": "Comment",
                    "type": "string",
                    "maxLength": 65535
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535
                },
                "activity_code": {
                    "title": "Activity code",
                    "type": "string",
                    "maxLength": 16
                },
                "address": {
                    "title": "Address",
                    "type": "string",
                    "maxLength": 255
                },
                "due_date": {
                    "title": "Due date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "work_item_completed": {
                    "title": "Work item completed",
                    "type": "boolean"
                },
                "go_from": {
                    "title": "Go from",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "go_to": {
                    "title": "Go to",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "work_item_template": {
                    "title": "Work item template",
                    "type": "integer",
                    "x-nullable": true
                },
                "extra_work_order_request": {
                    "title": "Extra work order request",
                    "type": "integer"
                },
                "element_category": {
                    "title": "Element category",
                    "type": "integer"
                },
                "entity_files": {
                    "title": "Entity files",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "FullExtraWorkOrderRequest": {
            "required": [
                "digital_signature",
                "work_order"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created_by_name": {
                    "title": "Created by name",
                    "type": "string",
                    "readOnly": true
                },
                "approver_name": {
                    "title": "Approver name",
                    "type": "string",
                    "readOnly": true
                },
                "work_order_name": {
                    "title": "Work order name",
                    "type": "string",
                    "readOnly": true
                },
                "work_order_template": {
                    "title": "Work order template",
                    "type": "string",
                    "readOnly": true
                },
                "work_package": {
                    "title": "Work package",
                    "type": "string",
                    "readOnly": true
                },
                "work_package_name": {
                    "title": "Work package name",
                    "type": "string",
                    "readOnly": true
                },
                "network_operator": {
                    "title": "Network operator",
                    "type": "string",
                    "readOnly": true
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FullExtraWorkItemRequest"
                    },
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "status_last_modified": {
                    "title": "Status last modified",
                    "type": "object"
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "draft",
                        "submitted",
                        "resubmitted",
                        "rejected",
                        "approved"
                    ]
                },
                "submitted_timestamp": {
                    "title": "Submitted timestamp",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "actual_submitted_timestamp": {
                    "title": "Actual submitted timestamp",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "approved_timestamp": {
                    "title": "Approved timestamp",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "digital_signature": {
                    "title": "Digital signature",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "notes": {
                    "title": "Notes",
                    "type": "string",
                    "maxLength": 65535
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 65535
                },
                "system_name": {
                    "title": "System name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "created_by": {
                    "title": "Created by",
                    "type": "integer",
                    "readOnly": true
                },
                "work_order": {
                    "title": "Work order",
                    "type": "integer"
                },
                "approver": {
                    "title": "Approver",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "FullMaterial": {
            "required": [
                "alias",
                "alias_code",
                "material",
                "network_operator"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "vendor_code": {
                    "title": "Vendor code",
                    "type": "string",
                    "readOnly": true
                },
                "operator_code": {
                    "title": "Operator code",
                    "type": "string",
                    "readOnly": true
                },
                "system_code": {
                    "title": "System code",
                    "type": "string",
                    "readOnly": true
                },
                "quantity_description_name": {
                    "title": "Quantity description name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description": {
                    "title": "Quantity description",
                    "type": "string",
                    "readOnly": true
                },
                "unit_name": {
                    "title": "Unit name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "unit": {
                    "title": "Unit",
                    "type": "string",
                    "readOnly": true
                },
                "unit_imperial": {
                    "title": "Unit imperial",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "unit_metric": {
                    "title": "Unit metric",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "unit_factor": {
                    "title": "Unit factor",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "unit_system": {
                    "title": "Unit system",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "material_categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "network_operator_material_category_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "video_url": {
                    "title": "Video url",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "alias": {
                    "title": "Alias",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "alias_code": {
                    "title": "Alias code",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "rank": {
                    "title": "Rank",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "is_active": {
                    "title": "Is active",
                    "type": "boolean"
                },
                "material": {
                    "title": "Material",
                    "type": "integer"
                },
                "network_operator": {
                    "title": "Network operator",
                    "type": "integer"
                }
            }
        },
        "FullProductionReportQuantity": {
            "required": [
                "quantity_description",
                "production_report_line"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "vendor_code": {
                    "title": "Vendor code",
                    "type": "string",
                    "readOnly": true
                },
                "operator_code": {
                    "title": "Operator code",
                    "type": "string",
                    "readOnly": true
                },
                "system_code": {
                    "title": "System code",
                    "type": "string",
                    "readOnly": true
                },
                "quantity_description_name": {
                    "title": "Quantity description name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_imperial": {
                    "title": "Quantity description unit imperial",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_metric": {
                    "title": "Quantity description unit metric",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_factor": {
                    "title": "Quantity description unit factor",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_system": {
                    "title": "Quantity description unit system",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "material_name": {
                    "title": "Material name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "material_code": {
                    "title": "Material code",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "material_types": {
                    "title": "Material types",
                    "type": "string",
                    "readOnly": true
                },
                "material_categories": {
                    "title": "Material categories",
                    "type": "string",
                    "readOnly": true
                },
                "quantity_description_is_active": {
                    "title": "Quantity description is active",
                    "type": "string",
                    "readOnly": true
                },
                "custom_fields": {
                    "title": "Custom fields",
                    "type": "string",
                    "readOnly": true
                },
                "custom_field_values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "deleted": {
                    "title": "Deleted",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "quantity": {
                    "title": "Quantity",
                    "type": "number"
                },
                "estimated_quantity": {
                    "title": "Estimated quantity",
                    "type": "number",
                    "readOnly": true
                },
                "remaining_quantity": {
                    "title": "Remaining quantity",
                    "type": "number",
                    "minimum": 0
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "quantity_description": {
                    "title": "Quantity description",
                    "type": "integer"
                },
                "production_report_line": {
                    "title": "Production report line",
                    "type": "integer"
                },
                "material": {
                    "title": "Material",
                    "type": "integer",
                    "x-nullable": true
                },
                "work_item_quantity": {
                    "title": "Work item quantity",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "ProductionReportCustomFieldVisibility": {
            "required": [
                "custom_field_settings",
                "work_item_template"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "is_mandatory": {
                    "title": "Is mandatory",
                    "type": "boolean"
                },
                "visibility_on_mobile_app": {
                    "title": "Visibility on mobile app",
                    "type": "string",
                    "enum": [
                        "hidden",
                        "view only",
                        "editable"
                    ]
                },
                "custom_field_settings": {
                    "title": "Custom field settings",
                    "type": "integer"
                },
                "work_item_template": {
                    "title": "Work item template",
                    "type": "integer"
                }
            }
        },
        "GeoElement": {
            "required": [
                "label",
                "category"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "the_geom": {
                    "title": "The geom",
                    "type": "string",
                    "readOnly": true
                },
                "go_from": {
                    "title": "Go from",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "go_to": {
                    "title": "Go to",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "full_address": {
                    "title": "Full address",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "category": {
                    "title": "Category",
                    "type": "integer"
                },
                "location": {
                    "title": "Location",
                    "type": "string",
                    "readOnly": true
                },
                "category_name": {
                    "title": "Category name",
                    "type": "string",
                    "readOnly": true
                },
                "redline_vertices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RedlineVertex"
                    },
                    "readOnly": true
                }
            }
        },
        "FullProductionReportLineRead": {
            "required": [
                "production_report",
                "work_item"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "integer"
                },
                "quantities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FullProductionReportQuantity"
                    },
                    "readOnly": true
                },
                "work_item_descriptor": {
                    "title": "Work item descriptor",
                    "type": "string",
                    "readOnly": true
                },
                "element_category": {
                    "title": "Element category",
                    "type": "string",
                    "readOnly": true
                },
                "design_element": {
                    "title": "Design element",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "design_element_descriptor": {
                    "title": "Design element descriptor",
                    "type": "string",
                    "readOnly": true
                },
                "design_element_full_address": {
                    "title": "Design element full address",
                    "type": "string",
                    "readOnly": true
                },
                "activity_code": {
                    "title": "Activity code",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "requires_photo": {
                    "title": "Requires photo",
                    "type": "boolean",
                    "readOnly": true
                },
                "manager": {
                    "title": "Manager",
                    "type": "string",
                    "readOnly": true
                },
                "manager_name": {
                    "title": "Manager name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "pictures": {
                    "title": "Pictures",
                    "type": "string",
                    "readOnly": true
                },
                "work_order": {
                    "title": "Work order",
                    "type": "string",
                    "readOnly": true
                },
                "work_order_name": {
                    "title": "Work order name",
                    "type": "string",
                    "readOnly": true
                },
                "work_order_subcontractor": {
                    "title": "Work order subcontractor",
                    "type": "string",
                    "readOnly": true
                },
                "work_order_responsible_crew": {
                    "title": "Work order responsible crew",
                    "type": "string",
                    "readOnly": true
                },
                "work_order_schedule_end_date": {
                    "title": "Work order schedule end date",
                    "type": "string",
                    "readOnly": true
                },
                "network_operator": {
                    "title": "Network operator",
                    "type": "string",
                    "readOnly": true
                },
                "custom_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomField"
                    },
                    "readOnly": true
                },
                "custom_field_values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "overrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductionReportCustomFieldVisibility"
                    },
                    "readOnly": true
                },
                "network_element": {
                    "$ref": "#/definitions/GeoElement"
                },
                "work_item_template": {
                    "title": "Work item template",
                    "type": "string",
                    "readOnly": true
                },
                "program": {
                    "title": "Program",
                    "type": "string",
                    "readOnly": true
                },
                "is_active": {
                    "title": "Is active",
                    "type": "boolean",
                    "readOnly": true,
                    "default": true
                },
                "due_date": {
                    "title": "Due date",
                    "type": "string",
                    "readOnly": true
                },
                "assign_to_person_full_name": {
                    "title": "Assign to person full name",
                    "type": "string",
                    "readOnly": true
                },
                "work_item_description": {
                    "title": "Work item description",
                    "type": "string",
                    "readOnly": true
                },
                "work_item_comment": {
                    "title": "Work item comment",
                    "type": "string",
                    "readOnly": true
                },
                "work_item_additional_information": {
                    "title": "Work item additional information",
                    "type": "string",
                    "readOnly": true
                },
                "program_segment": {
                    "title": "Program segment",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "reference_from": {
                    "title": "Reference from",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "reference_to": {
                    "title": "Reference to",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "work_item_completed": {
                    "title": "Work item completed",
                    "type": "boolean"
                },
                "completed_date": {
                    "title": "Completed date",
                    "type": "string",
                    "format": "date-time"
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "index": {
                    "title": "Index",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "new_redline_vertices": {
                    "title": "New redline vertices",
                    "type": "object",
                    "x-nullable": true
                },
                "production_report": {
                    "title": "Production report",
                    "type": "integer"
                },
                "work_item": {
                    "title": "Work item",
                    "type": "integer"
                },
                "entity_files": {
                    "title": "Entity files",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ProductionReportLocation": {
            "required": [
                "production_report",
                "location"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "longitude": {
                    "title": "Longitude",
                    "type": "number",
                    "readOnly": true
                },
                "latitude": {
                    "title": "Latitude",
                    "type": "number",
                    "readOnly": true
                },
                "altitude": {
                    "title": "Altitude",
                    "type": "number",
                    "readOnly": true
                },
                "accuracy": {
                    "title": "Accuracy",
                    "type": "number",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "location_type": {
                    "title": "Location type",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "x-nullable": true
                },
                "production_report": {
                    "title": "Production report",
                    "type": "integer"
                },
                "production_report_line": {
                    "title": "Production report line",
                    "type": "integer",
                    "x-nullable": true
                },
                "location": {
                    "title": "Location",
                    "type": "integer"
                }
            }
        },
        "SafetyWorkProcedureRequirementFile": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "added": {
                    "title": "Added",
                    "type": "string",
                    "format": "date-time"
                },
                "upload": {
                    "title": "Upload",
                    "type": "string",
                    "readOnly": true,
                    "format": "uri"
                },
                "thumbnail": {
                    "title": "Thumbnail",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true,
                    "format": "uri"
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "extension": {
                    "title": "Extension",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1,
                    "x-nullable": true
                },
                "original_file_name": {
                    "title": "Original file name",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "file_size": {
                    "title": "File size",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "metadata": {
                    "title": "Metadata",
                    "type": "object",
                    "x-nullable": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created_by": {
                    "title": "Created by",
                    "type": "integer",
                    "readOnly": true
                },
                "safety_work_procedure_requirement": {
                    "title": "Safety work procedure requirement",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "SafetyWorkProcedureRequirement": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "equipment_category_name": {
                    "title": "Equipment category name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SafetyWorkProcedureRequirementFile"
                    }
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "ppe",
                        "permits",
                        "shall and should",
                        "training",
                        "equipment"
                    ]
                },
                "created_by": {
                    "title": "Created by",
                    "type": "integer",
                    "x-nullable": true
                },
                "equipment_category": {
                    "title": "Equipment category",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "SafetyWorkProcedure": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "created_by": {
                    "title": "Created by",
                    "type": "integer",
                    "x-nullable": true
                },
                "requirements": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "SafetyWorkProcedureAssessment": {
            "required": [
                "name",
                "field_level_hazard_assessment"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "safety_work_procedure_requirement": {
                    "$ref": "#/definitions/SafetyWorkProcedureRequirement"
                },
                "safety_work_procedure": {
                    "$ref": "#/definitions/SafetyWorkProcedure"
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "ppe",
                        "permits",
                        "shall and should",
                        "training",
                        "equipment"
                    ]
                },
                "completed": {
                    "title": "Completed",
                    "type": "boolean"
                },
                "equipment_category": {
                    "title": "Equipment category",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "assigned_crew_member_name": {
                    "title": "Assigned crew member name",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "notes": {
                    "title": "Notes",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "extra_information": {
                    "title": "Extra information",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "extra_information_boolean": {
                    "title": "Extra information boolean",
                    "type": "boolean"
                },
                "not_applicable": {
                    "title": "Not applicable",
                    "type": "boolean"
                },
                "field_level_hazard_assessment": {
                    "title": "Field level hazard assessment",
                    "type": "integer"
                }
            }
        },
        "FieldLevelSafetyWorkProcedure": {
            "required": [
                "name",
                "field_level_hazard_assessment"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "assessments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SafetyWorkProcedureAssessment"
                    },
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "field_level_hazard_assessment": {
                    "title": "Field level hazard assessment",
                    "type": "integer"
                },
                "safety_work_procedure": {
                    "title": "Safety work procedure",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "FieldLevelHazardAssessmentSignature": {
            "required": [
                "sign_off_number"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "crew_member_name": {
                    "title": "Crew member name",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "signature": {
                    "title": "Signature",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true,
                    "format": "uri"
                },
                "sign_off_number": {
                    "title": "Sign off number",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "field_level_hazard_assessment": {
                    "title": "Field level hazard assessment",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "FieldLevelHazard": {
            "required": [
                "name",
                "field_level_hazard_assessment"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "safety_work_procedures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FieldLevelSafetyWorkProcedure"
                    },
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "severity": {
                    "title": "Severity",
                    "type": "string",
                    "enum": [
                        "low",
                        "medium",
                        "high"
                    ]
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "minLength": 1
                },
                "not_applicable": {
                    "title": "Not applicable",
                    "type": "boolean"
                },
                "notes": {
                    "title": "Notes",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "hazard": {
                    "title": "Hazard",
                    "type": "integer",
                    "x-nullable": true
                },
                "field_level_hazard_assessment": {
                    "title": "Field level hazard assessment",
                    "type": "integer"
                }
            }
        },
        "NestedFieldLevelHazardAssessment": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "assessments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SafetyWorkProcedureAssessment"
                    },
                    "readOnly": true
                },
                "procedures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FieldLevelSafetyWorkProcedure"
                    },
                    "readOnly": true
                },
                "signatures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FieldLevelHazardAssessmentSignature"
                    },
                    "readOnly": true
                },
                "hazards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FieldLevelHazard"
                    },
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "incidents_occurred": {
                    "title": "Incidents occurred",
                    "type": "boolean"
                },
                "incidents_occurred_notes": {
                    "title": "Incidents occurred notes",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "incidents_reported": {
                    "title": "Incidents reported",
                    "type": "boolean"
                },
                "incidents_notes": {
                    "title": "Incidents notes",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "hazards_left_on_site": {
                    "title": "Hazards left on site",
                    "type": "boolean"
                },
                "hazards_left_on_site_notes": {
                    "title": "Hazards left on site notes",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "mitigations_in_place": {
                    "title": "Mitigations in place",
                    "type": "boolean"
                },
                "mitigations_in_place_notes": {
                    "title": "Mitigations in place notes",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "hospital_name": {
                    "title": "Hospital name",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "hospital_address": {
                    "title": "Hospital address",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "hospital_city": {
                    "title": "Hospital city",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "hospital_province": {
                    "title": "Hospital province",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "contact_phone": {
                    "title": "Contact phone",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "contact_name": {
                    "title": "Contact name",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "contact_email": {
                    "title": "Contact email",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "production_report": {
                    "title": "Production report",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "FullProductionReportRead": {
            "required": [
                "submitted_date",
                "digital_signature"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "approver_name": {
                    "title": "Approver name",
                    "type": "string",
                    "readOnly": true
                },
                "created_by_name": {
                    "title": "Created by name",
                    "type": "string",
                    "readOnly": true
                },
                "production_lines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FullProductionReportLineRead"
                    },
                    "readOnly": true
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductionReportLocation"
                    },
                    "readOnly": true
                },
                "field_level_hazard_assessment": {
                    "$ref": "#/definitions/NestedFieldLevelHazardAssessment"
                },
                "document_reference": {
                    "title": "Document reference",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "approver_level": {
                    "title": "Approver level",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "status_last_modified": {
                    "title": "Status last modified",
                    "type": "object"
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "reported_date": {
                    "title": "Reported date",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "submitted_date": {
                    "title": "Submitted date",
                    "type": "string",
                    "format": "date-time"
                },
                "approved_date": {
                    "title": "Approved date",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "digital_signature": {
                    "title": "Digital signature",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "notes": {
                    "title": "Notes",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "draft",
                        "submitted",
                        "resubmitted",
                        "in review",
                        "approved",
                        "rejected",
                        "recalled"
                    ]
                },
                "system_name": {
                    "title": "System name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "is_auto_approved": {
                    "title": "Auto-approved",
                    "description": "Designates that this report has been auto approved.",
                    "type": "boolean"
                },
                "created_by": {
                    "title": "Created by",
                    "type": "integer",
                    "x-nullable": true
                },
                "approver": {
                    "title": "Approver",
                    "type": "integer",
                    "x-nullable": true
                },
                "crew": {
                    "title": "Crew",
                    "type": "integer",
                    "x-nullable": true
                },
                "subcontractor": {
                    "title": "Subcontractor",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "FullProductionReportWrite": {
            "required": [
                "submitted_date",
                "digital_signature"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "field_level_hazard_assessment": {
                    "$ref": "#/definitions/NestedFieldLevelHazardAssessment"
                },
                "production_lines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DefaultDynamicModelSerializer"
                    },
                    "readOnly": true
                },
                "document_reference": {
                    "title": "Document reference",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "approver_name": {
                    "title": "Approver name",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "status_last_modified": {
                    "title": "Status last modified",
                    "type": "object"
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "reported_date": {
                    "title": "Reported date",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "submitted_date": {
                    "title": "Submitted date",
                    "type": "string",
                    "format": "date-time"
                },
                "approved_date": {
                    "title": "Approved date",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "digital_signature": {
                    "title": "Digital signature",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "notes": {
                    "title": "Notes",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "draft",
                        "submitted",
                        "resubmitted",
                        "in review",
                        "approved",
                        "rejected",
                        "recalled"
                    ]
                },
                "system_name": {
                    "title": "System name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "is_auto_approved": {
                    "title": "Auto-approved",
                    "description": "Designates that this report has been auto approved.",
                    "type": "boolean"
                },
                "approver_level": {
                    "title": "Approver level",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "created_by": {
                    "title": "Created by",
                    "type": "integer",
                    "x-nullable": true
                },
                "approver": {
                    "title": "Approver",
                    "type": "integer",
                    "x-nullable": true
                },
                "crew": {
                    "title": "Crew",
                    "type": "integer",
                    "x-nullable": true
                },
                "subcontractor": {
                    "title": "Subcontractor",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "FullTimesheetLine": {
            "required": [
                "work_item",
                "hours"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "person": {
                    "$ref": "#/definitions/DefaultDynamicModelSerializer"
                },
                "equipment": {
                    "$ref": "#/definitions/DefaultDynamicModelSerializer"
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "readOnly": true
                },
                "timesheet": {
                    "title": "Timesheet",
                    "type": "string",
                    "readOnly": true
                },
                "time_entry_date": {
                    "title": "Time entry date",
                    "type": "string",
                    "readOnly": true
                },
                "resource": {
                    "title": "Resource",
                    "type": "string",
                    "readOnly": true
                },
                "work_item": {
                    "$ref": "#/definitions/DefaultDynamicModelSerializer"
                },
                "date_approved": {
                    "title": "Date approved",
                    "type": "string",
                    "readOnly": true
                },
                "date_submitted": {
                    "title": "Date submitted",
                    "type": "string",
                    "readOnly": true
                },
                "approver_name": {
                    "title": "Approver name",
                    "type": "string",
                    "readOnly": true
                },
                "submitter_name": {
                    "title": "Submitter name",
                    "type": "string",
                    "readOnly": true
                },
                "work_order": {
                    "title": "Work order",
                    "type": "string",
                    "readOnly": true
                },
                "work_package": {
                    "title": "Work package",
                    "type": "string",
                    "readOnly": true
                },
                "design_element": {
                    "title": "Design element",
                    "type": "string",
                    "readOnly": true
                },
                "hours": {
                    "title": "Hours",
                    "type": "number",
                    "format": "decimal"
                },
                "shift": {
                    "title": "Shift",
                    "type": "integer",
                    "readOnly": true
                },
                "start": {
                    "title": "Start",
                    "type": "string",
                    "readOnly": true
                },
                "end": {
                    "title": "End",
                    "type": "string",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "regular_hours": {
                    "title": "Regular hours",
                    "type": "number",
                    "format": "decimal",
                    "minimum": 0,
                    "x-nullable": true
                },
                "overtime_hours": {
                    "title": "Overtime hours",
                    "type": "number",
                    "format": "decimal",
                    "minimum": 0,
                    "x-nullable": true
                },
                "double_hours": {
                    "title": "Double hours",
                    "type": "number",
                    "format": "decimal",
                    "minimum": 0,
                    "x-nullable": true
                }
            }
        },
        "Break": {
            "required": [
                "start",
                "end",
                "shift"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "start": {
                    "title": "Start",
                    "type": "string",
                    "format": "date-time"
                },
                "end": {
                    "title": "End",
                    "type": "string",
                    "format": "date-time"
                },
                "shift": {
                    "title": "Shift",
                    "type": "integer"
                }
            }
        },
        "FullShift": {
            "required": [
                "date",
                "timesheet"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "timesheet_lines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FullTimesheetLine"
                    },
                    "readOnly": true
                },
                "breaks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Break"
                    },
                    "readOnly": true
                },
                "custom_fields": {
                    "title": "Custom fields",
                    "type": "string",
                    "readOnly": true
                },
                "custom_field_values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "date": {
                    "title": "Date",
                    "type": "string",
                    "format": "date"
                },
                "start": {
                    "title": "Start",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "end": {
                    "title": "End",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "timesheet": {
                    "title": "Timesheet",
                    "type": "integer"
                }
            }
        },
        "TimesheetAcknowledgment": {
            "required": [
                "person"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "signature": {
                    "title": "Signature",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true,
                    "format": "uri"
                },
                "alternative_file": {
                    "title": "Alternative file",
                    "description": "A file attachment explaining why signature is missing.",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true,
                    "format": "uri"
                },
                "person": {
                    "title": "Person",
                    "type": "integer"
                },
                "timesheet": {
                    "title": "Timesheet",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "FullTimesheet": {
            "required": [
                "digital_signature"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created_by_name": {
                    "title": "Created by name",
                    "type": "string",
                    "readOnly": true
                },
                "approver_name": {
                    "title": "Approver name",
                    "type": "string",
                    "readOnly": true
                },
                "shifts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FullShift"
                    },
                    "readOnly": true
                },
                "display_name": {
                    "title": "Display name",
                    "type": "string"
                },
                "acknowledgments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimesheetAcknowledgment"
                    },
                    "readOnly": true
                },
                "acknowledgments_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "timesheet_entries": {
                    "title": "Timesheet entries",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "status_last_modified": {
                    "title": "Status last modified",
                    "type": "object"
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "draft",
                        "submitted",
                        "resubmitted",
                        "in review",
                        "approved",
                        "rejected"
                    ]
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "submitted_timestamp": {
                    "title": "Submitted timestamp",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "actual_submitted_timestamp": {
                    "title": "Actual submitted timestamp",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "approved_timestamp": {
                    "title": "Approved timestamp",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "digital_signature": {
                    "title": "Digital signature",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "notes": {
                    "title": "Notes",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "approver_level": {
                    "title": "Approver level",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "created_by": {
                    "title": "Created by",
                    "type": "integer",
                    "readOnly": true
                },
                "approver": {
                    "title": "Approver",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "WorkItemQuantity": {
            "required": [
                "quantity_description",
                "work_item",
                "material"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "integer",
                    "x-nullable": true
                },
                "vendor_code": {
                    "title": "Vendor code",
                    "type": "string",
                    "readOnly": true
                },
                "operator_code": {
                    "title": "Operator code",
                    "type": "string",
                    "readOnly": true
                },
                "system_code": {
                    "title": "System code",
                    "type": "string",
                    "readOnly": true
                },
                "quantity_description_name": {
                    "title": "Quantity description name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_abbreviation": {
                    "title": "Quantity description unit abbreviation",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_imperial": {
                    "title": "Quantity description unit imperial",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_metric": {
                    "title": "Quantity description unit metric",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_factor": {
                    "title": "Quantity description unit factor",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_system": {
                    "title": "Quantity description unit system",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_standard_unit": {
                    "title": "Quantity description standard unit",
                    "type": "string",
                    "readOnly": true
                },
                "work_item_name": {
                    "title": "Work item name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "material_name": {
                    "title": "Material name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "material_code": {
                    "title": "Material code",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "material_name_with_supplier_and_unit": {
                    "title": "Material name with supplier and unit",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "forecasted_quantity": {
                    "title": "Forecasted quantity",
                    "type": "string",
                    "readOnly": true
                },
                "is_locked": {
                    "title": "Is locked",
                    "type": "boolean",
                    "readOnly": true
                },
                "material_category": {
                    "title": "Material category",
                    "type": "string",
                    "readOnly": true
                },
                "can_update_quantities": {
                    "title": "Can update quantities",
                    "type": "boolean",
                    "readOnly": true
                },
                "quantity_description_is_active": {
                    "title": "Quantity description is active",
                    "type": "string",
                    "readOnly": true
                },
                "assign_to_name": {
                    "title": "Assign to name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "crew_name": {
                    "title": "Crew name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "crew_company_name": {
                    "title": "Crew company name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "quantity": {
                    "title": "Quantity",
                    "type": "number",
                    "format": "decimal"
                },
                "estimated_quantity": {
                    "title": "Estimated quantity",
                    "type": "number",
                    "format": "decimal",
                    "minimum": 0
                },
                "remaining_quantity": {
                    "title": "Remaining quantity",
                    "type": "number",
                    "format": "decimal",
                    "minimum": 0
                },
                "quantity_description": {
                    "title": "Quantity description",
                    "type": "integer"
                },
                "work_item": {
                    "title": "Work item",
                    "type": "integer"
                },
                "material": {
                    "title": "Material",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "ProductionReportHeadThroughLine": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string",
                    "readOnly": true
                },
                "display_name": {
                    "title": "Display name",
                    "type": "string",
                    "readOnly": true
                },
                "document_reference": {
                    "title": "Document reference",
                    "type": "string",
                    "readOnly": true
                },
                "approver_name": {
                    "title": "Approver name",
                    "type": "string",
                    "readOnly": true
                },
                "submitted_date": {
                    "title": "Submitted date",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "readOnly": true
                },
                "created_by": {
                    "title": "Created by",
                    "type": "string",
                    "readOnly": true
                },
                "work_item_completed": {
                    "title": "Work item completed",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "FullWorkItemWithNestedFields": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "original_start_date": {
                    "title": "Original start date",
                    "type": "string",
                    "readOnly": true
                },
                "is_milestone": {
                    "title": "Is milestone",
                    "type": "string",
                    "readOnly": true
                },
                "base_start_date_delta": {
                    "title": "Base start date delta",
                    "type": "integer",
                    "readOnly": true
                },
                "base_end_date_delta": {
                    "title": "Base end date delta",
                    "type": "integer",
                    "readOnly": true
                },
                "estimated_duration": {
                    "title": "Estimated duration",
                    "type": "integer",
                    "readOnly": true
                },
                "actual_duration": {
                    "title": "Actual duration",
                    "type": "integer",
                    "readOnly": true
                },
                "is_locked": {
                    "title": "Is locked",
                    "type": "string",
                    "readOnly": true
                },
                "display_name": {
                    "title": "Display name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "assign_to_person_full_name": {
                    "title": "Assign to person full name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "work_package_name": {
                    "title": "Work package name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "work_package": {
                    "title": "Work package",
                    "type": "string",
                    "readOnly": true
                },
                "work_order_name": {
                    "title": "Work order name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "work_order_manager_name": {
                    "title": "Work order manager name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "work_order_category": {
                    "title": "Work order category",
                    "type": "string",
                    "readOnly": true
                },
                "work_order_start_date": {
                    "title": "Work order start date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "work_order_end_date": {
                    "title": "Work order end date",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "subcontractor": {
                    "title": "Subcontractor",
                    "type": "string",
                    "readOnly": true
                },
                "subcontractor_name": {
                    "title": "Subcontractor name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "work_item_template_name": {
                    "title": "Work item template name",
                    "type": "string",
                    "readOnly": true
                },
                "work_item_template_code": {
                    "title": "Work item template code",
                    "type": "string",
                    "readOnly": true
                },
                "work_item_template_category_name": {
                    "title": "Work item template category name",
                    "type": "string",
                    "readOnly": true
                },
                "quantities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkItemQuantity"
                    },
                    "readOnly": true
                },
                "assign_to_crew_name": {
                    "title": "Assign to crew name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "design_element_label": {
                    "title": "Design element label",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "design_element_go_from": {
                    "title": "Design element go from",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "design_element_go_to": {
                    "title": "Design element go to",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "design_element_full_address": {
                    "title": "Design element full address",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "design_element_type": {
                    "title": "Design element type",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "design_element_centroid": {
                    "title": "Design element centroid",
                    "type": "string",
                    "readOnly": true
                },
                "is_post_completed": {
                    "title": "Is post completed",
                    "type": "string",
                    "readOnly": true
                },
                "is_in_progress": {
                    "title": "Is in progress",
                    "type": "string",
                    "readOnly": true
                },
                "has_moveable_status": {
                    "title": "Has moveable status",
                    "type": "string",
                    "readOnly": true
                },
                "has_splittable_status": {
                    "title": "Has splittable status",
                    "type": "string",
                    "readOnly": true
                },
                "production_reports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductionReportHeadThroughLine"
                    },
                    "readOnly": true
                },
                "photos": {
                    "title": "Photos",
                    "type": "string",
                    "readOnly": true
                },
                "region": {
                    "title": "Region",
                    "type": "string",
                    "readOnly": true
                },
                "program_segment": {
                    "title": "Program segment",
                    "type": "string",
                    "readOnly": true
                },
                "container_design_element": {
                    "title": "Container design element",
                    "type": "string",
                    "readOnly": true
                },
                "default_to_complete": {
                    "title": "Default to complete",
                    "type": "string",
                    "readOnly": true
                },
                "custom_field_values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "custom_fields": {
                    "title": "Custom fields",
                    "type": "string",
                    "readOnly": true
                },
                "all_siblings": {
                    "title": "All siblings",
                    "type": "string",
                    "readOnly": true
                },
                "assign_to_crew": {
                    "title": "Assign to crew",
                    "type": "integer",
                    "readOnly": true
                },
                "date_done": {
                    "title": "Date done",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "program": {
                    "title": "Program",
                    "type": "string",
                    "readOnly": true
                },
                "work_item_content_type": {
                    "title": "Work item content type",
                    "type": "string",
                    "readOnly": true
                },
                "work_order_schedule_end_date": {
                    "title": "Work order schedule end date",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "work_order_manager": {
                    "title": "Work order manager",
                    "type": "string",
                    "readOnly": true
                },
                "work_order_manager_str": {
                    "title": "Work order manager str",
                    "type": "string",
                    "readOnly": true
                },
                "work_order_manager_phone": {
                    "title": "Work order manager phone",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "work_order_manager_email": {
                    "title": "Work order manager email",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "work_order_template": {
                    "title": "Work order template",
                    "type": "string",
                    "readOnly": true
                },
                "requires_photo": {
                    "title": "Requires photo",
                    "type": "boolean",
                    "readOnly": true
                },
                "region_name": {
                    "title": "Region name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "design_element_redline_vertices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RedlineVertex"
                    },
                    "readOnly": true
                },
                "ticket_collection": {
                    "title": "Ticket collection",
                    "type": "string",
                    "readOnly": true
                },
                "network_operator": {
                    "title": "Network operator",
                    "type": "string",
                    "readOnly": true
                },
                "work_item_category_name": {
                    "title": "Work item category name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "work_item_category": {
                    "title": "Work item category",
                    "type": "string",
                    "readOnly": true
                },
                "network_element": {
                    "$ref": "#/definitions/GeoElement"
                },
                "region_center_position_longitude": {
                    "title": "Region center position longitude",
                    "type": "number",
                    "readOnly": true
                },
                "region_center_position_latitude": {
                    "title": "Region center position latitude",
                    "type": "number",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "status_last_modified": {
                    "title": "Status last modified",
                    "type": "object"
                },
                "start_date": {
                    "title": "Start date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "end_date": {
                    "title": "End date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "base_start_date": {
                    "title": "Base start date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "base_end_date": {
                    "title": "Base end date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "activity_code": {
                    "title": "Activity code",
                    "type": "string",
                    "maxLength": 16,
                    "x-nullable": true
                },
                "address": {
                    "title": "Address",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "additional_information": {
                    "title": "Additional information",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "new",
                        "issued",
                        "assigned",
                        "completed",
                        "verified",
                        "disputed",
                        "closed",
                        "cancelled",
                        "on hold"
                    ]
                },
                "comment": {
                    "title": "Comment",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "due_date": {
                    "title": "Due date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "created_manually": {
                    "title": "Created manually",
                    "type": "boolean"
                },
                "sibling_number": {
                    "title": "Sibling number",
                    "type": "integer",
                    "readOnly": true
                },
                "reason_code": {
                    "title": "Reason code",
                    "type": "string",
                    "maxLength": 200,
                    "x-nullable": true
                },
                "location": {
                    "title": "Location",
                    "type": "integer",
                    "x-nullable": true
                },
                "work_item_template": {
                    "title": "Work item template",
                    "type": "integer",
                    "x-nullable": true
                },
                "work_order": {
                    "title": "Work order",
                    "type": "integer",
                    "x-nullable": true
                },
                "design_element": {
                    "title": "Design element",
                    "type": "integer",
                    "x-nullable": true
                },
                "process": {
                    "title": "Process",
                    "type": "integer",
                    "x-nullable": true
                },
                "assign_to_person": {
                    "title": "Assign to person",
                    "type": "integer",
                    "x-nullable": true
                },
                "first_sibling": {
                    "title": "First sibling",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "ElementCategory": {
            "required": [
                "alias",
                "alias_code",
                "design_element_category",
                "network_operator"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "icon": {
                    "title": "Icon",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "color": {
                    "title": "Color",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "incomplete_color": {
                    "title": "Incomplete color",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "complete_linetype": {
                    "title": "Complete linetype",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "incomplete_linetype": {
                    "title": "Incomplete linetype",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "custom_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomField"
                    },
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "alias": {
                    "title": "Alias",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "alias_code": {
                    "title": "Alias code",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "drawing_alias": {
                    "title": "Drawing alias",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "location": {
                    "title": "Location",
                    "type": "string",
                    "enum": [
                        "stationing",
                        "address"
                    ]
                },
                "design_element_category": {
                    "title": "Design element category",
                    "type": "integer"
                },
                "network_operator": {
                    "title": "Network operator",
                    "type": "integer"
                }
            }
        },
        "NetworkOperatorInfrastructureCategorySerializer": {
            "required": [
                "infrastructure_category",
                "network_operator",
                "alias",
                "alias_code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "infrastructure_category": {
                    "title": "Infrastructure category",
                    "type": "integer"
                },
                "network_operator": {
                    "title": "Network operator",
                    "type": "integer"
                },
                "alias": {
                    "title": "Alias",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "alias_code": {
                    "title": "Alias code",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "rank": {
                    "title": "Rank",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                }
            }
        },
        "LaborItem": {
            "required": [
                "is_active",
                "quantity_description",
                "network_operator"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "vendor_code": {
                    "title": "Vendor code",
                    "type": "string",
                    "readOnly": true
                },
                "operator_code": {
                    "title": "Operator code",
                    "type": "string",
                    "readOnly": true
                },
                "system_code": {
                    "title": "System code",
                    "type": "string",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "readOnly": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "readOnly": true
                },
                "standard_unit_system": {
                    "title": "Standard unit system",
                    "type": "string",
                    "readOnly": true
                },
                "standard_unit": {
                    "title": "Standard unit",
                    "type": "string",
                    "readOnly": true
                },
                "name_unit": {
                    "title": "Name unit",
                    "type": "string",
                    "readOnly": true
                },
                "unit_abbreviation": {
                    "title": "Unit abbreviation",
                    "type": "string",
                    "readOnly": true
                },
                "unit": {
                    "title": "Unit",
                    "type": "string",
                    "readOnly": true
                },
                "is_active": {
                    "title": "Is active",
                    "type": "boolean"
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "quantity_description": {
                    "title": "Quantity description",
                    "type": "integer"
                },
                "network_operator": {
                    "title": "Network operator",
                    "type": "integer"
                }
            }
        },
        "NetworkOperatorMaterialCategorySerializer": {
            "required": [
                "material_category",
                "network_operator",
                "alias",
                "alias_code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "material_category": {
                    "title": "Material category",
                    "type": "integer"
                },
                "network_operator": {
                    "title": "Network operator",
                    "type": "integer"
                },
                "alias": {
                    "title": "Alias",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "alias_code": {
                    "title": "Alias code",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "rank": {
                    "title": "Rank",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "core_name": {
                    "title": "Core name",
                    "type": "string",
                    "readOnly": true
                },
                "core_code": {
                    "title": "Core code",
                    "type": "string",
                    "readOnly": true
                },
                "material_count": {
                    "title": "Material count",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "NetworkOperatorPayableItemCategorySerializer": {
            "required": [
                "payable_item_category",
                "network_operator",
                "alias",
                "alias_code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "payable_item_category": {
                    "title": "Payable item category",
                    "type": "integer"
                },
                "network_operator": {
                    "title": "Network operator",
                    "type": "integer"
                },
                "alias": {
                    "title": "Alias",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "alias_code": {
                    "title": "Alias code",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "rank": {
                    "title": "Rank",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                }
            }
        },
        "NetworkOperatorPremiseCategorySerializer": {
            "required": [
                "alias",
                "alias_code",
                "premise_category",
                "network_operator"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "alias": {
                    "title": "Alias",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "alias_code": {
                    "title": "Alias code",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "rank": {
                    "title": "Rank",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "is_multi_unit": {
                    "title": "Is multi unit",
                    "type": "boolean"
                },
                "premise_category": {
                    "title": "Premise category",
                    "type": "integer"
                },
                "network_operator": {
                    "title": "Network operator",
                    "type": "integer"
                }
            }
        },
        "Premise": {
            "required": [
                "street_number",
                "address",
                "region",
                "category"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "category_name": {
                    "title": "Category name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "is_multi_unit": {
                    "title": "Is multi unit",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "region_name": {
                    "title": "Region name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "infrastructure_category_name": {
                    "title": "Infrastructure category name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "unit": {
                    "title": "Unit",
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 1,
                    "x-nullable": true
                },
                "street_number": {
                    "title": "Street number",
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 1
                },
                "address": {
                    "title": "Address",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "post_code": {
                    "title": "Post code",
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 1,
                    "x-nullable": true
                },
                "longitude": {
                    "title": "Longitude",
                    "type": "number"
                },
                "latitude": {
                    "title": "Latitude",
                    "type": "number"
                },
                "notes": {
                    "title": "Notes",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "x-nullable": true
                },
                "terminal_location": {
                    "title": "Terminal location",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "x-nullable": true
                },
                "terminal_location_id": {
                    "title": "Terminal location id",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "x-nullable": true
                },
                "region": {
                    "title": "Region",
                    "type": "integer"
                },
                "category": {
                    "title": "Category",
                    "type": "integer"
                },
                "infrastructure_category": {
                    "title": "Infrastructure category",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "ProgramSegment": {
            "required": [
                "name",
                "code",
                "program"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "start": {
                    "title": "Start",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "finish": {
                    "title": "Finish",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "program": {
                    "title": "Program",
                    "type": "integer"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "ProgramStandard": {
            "required": [
                "program"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "added": {
                    "title": "Added",
                    "type": "string",
                    "format": "date-time"
                },
                "upload": {
                    "title": "Upload",
                    "type": "string",
                    "readOnly": true,
                    "format": "uri"
                },
                "thumbnail": {
                    "title": "Thumbnail",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true,
                    "format": "uri"
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "original_file_name": {
                    "title": "Original file name",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "file_size": {
                    "title": "File size",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "metadata": {
                    "title": "Metadata",
                    "type": "object",
                    "x-nullable": true
                },
                "created_by": {
                    "title": "Created by",
                    "type": "integer",
                    "readOnly": true
                },
                "program": {
                    "title": "Program",
                    "type": "integer"
                }
            }
        },
        "Program": {
            "required": [
                "name",
                "code",
                "network_operator"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "billing_contact_descriptor": {
                    "title": "Billing contact descriptor",
                    "type": "string",
                    "readOnly": true
                },
                "network_operator_name": {
                    "title": "Network operator name",
                    "type": "string",
                    "readOnly": true
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "is_active": {
                    "title": "Is active",
                    "type": "boolean"
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "notes": {
                    "title": "Notes",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "billing_terms": {
                    "title": "Billing terms",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "network_operator": {
                    "title": "Network operator",
                    "type": "integer"
                },
                "billing_contact": {
                    "title": "Billing contact",
                    "type": "integer",
                    "x-nullable": true
                },
                "read_permission": {
                    "title": "Read permission",
                    "type": "integer",
                    "x-nullable": true
                },
                "admin_permission": {
                    "title": "Admin permission",
                    "type": "integer",
                    "x-nullable": true
                },
                "denied_permission": {
                    "title": "Denied permission",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "RegionLevel": {
            "required": [
                "region_level_name",
                "network_operator"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "region_level_name": {
                    "title": "Region level name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "network_operator": {
                    "title": "Network operator",
                    "type": "integer"
                },
                "parent_region_level": {
                    "title": "Parent region level",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "Region": {
            "required": [
                "name",
                "parent_region",
                "region_level",
                "network_operator"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "center_position_longitude": {
                    "title": "Center position longitude",
                    "type": "number"
                },
                "center_position_latitude": {
                    "title": "Center position latitude",
                    "type": "number"
                },
                "zoom_level": {
                    "title": "Zoom level",
                    "type": "number"
                },
                "parent_region": {
                    "title": "Parent region",
                    "type": "integer",
                    "x-nullable": true
                },
                "region_level": {
                    "title": "Region level",
                    "type": "integer"
                },
                "network_operator": {
                    "title": "Network operator",
                    "type": "integer"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "shape": {
                    "title": "Shape",
                    "type": "string",
                    "x-nullable": true
                }
            }
        },
        "SimpleRegion": {
            "required": [
                "name",
                "parent_region",
                "region_level",
                "network_operator"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "center_position_longitude": {
                    "title": "Center position longitude",
                    "type": "number"
                },
                "center_position_latitude": {
                    "title": "Center position latitude",
                    "type": "number"
                },
                "zoom_level": {
                    "title": "Zoom level",
                    "type": "number"
                },
                "parent_region": {
                    "title": "Parent region",
                    "type": "integer",
                    "x-nullable": true
                },
                "region_level": {
                    "title": "Region level",
                    "type": "integer"
                },
                "network_operator": {
                    "title": "Network operator",
                    "type": "integer"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "region_level_name": {
                    "title": "Region level name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                }
            }
        },
        "NetworkOperatorWorkOrderCategorySerializer": {
            "required": [
                "work_order_category",
                "network_operator",
                "alias",
                "alias_code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "work_order_category": {
                    "title": "Work order category",
                    "type": "integer"
                },
                "network_operator": {
                    "title": "Network operator",
                    "type": "integer"
                },
                "alias": {
                    "title": "Alias",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "alias_code": {
                    "title": "Alias code",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "rank": {
                    "title": "Rank",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                }
            }
        },
        "NetworkOperator": {
            "required": [
                "name",
                "code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "is_active": {
                    "title": "Is active",
                    "type": "boolean"
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                }
            }
        },
        "PayableItemCategory": {
            "required": [
                "name",
                "code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "is_active": {
                    "title": "Is active",
                    "type": "boolean"
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "color": {
                    "title": "Color",
                    "type": "string",
                    "maxLength": 7,
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "rank": {
                    "title": "Rank",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                }
            }
        },
        "PremiseCategory": {
            "required": [
                "name",
                "code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "is_active": {
                    "title": "Is active",
                    "type": "boolean"
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "color": {
                    "title": "Color",
                    "type": "string",
                    "maxLength": 7,
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "rank": {
                    "title": "Rank",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "is_multi_unit": {
                    "title": "Is multi unit",
                    "type": "boolean"
                }
            }
        },
        "ProductionReportLine": {
            "required": [
                "production_report",
                "work_item"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "integer"
                },
                "quantities": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "work_item_descriptor": {
                    "title": "Work item descriptor",
                    "type": "string",
                    "readOnly": true
                },
                "element_category": {
                    "title": "Element category",
                    "type": "string",
                    "readOnly": true
                },
                "design_element": {
                    "title": "Design element",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "design_element_descriptor": {
                    "title": "Design element descriptor",
                    "type": "string",
                    "readOnly": true
                },
                "design_element_full_address": {
                    "title": "Design element full address",
                    "type": "string",
                    "readOnly": true
                },
                "activity_code": {
                    "title": "Activity code",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "requires_photo": {
                    "title": "Requires photo",
                    "type": "boolean",
                    "readOnly": true
                },
                "manager": {
                    "title": "Manager",
                    "type": "string",
                    "readOnly": true
                },
                "manager_name": {
                    "title": "Manager name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "pictures": {
                    "title": "Pictures",
                    "type": "string",
                    "readOnly": true
                },
                "work_order": {
                    "title": "Work order",
                    "type": "string",
                    "readOnly": true
                },
                "work_order_name": {
                    "title": "Work order name",
                    "type": "string",
                    "readOnly": true
                },
                "work_order_subcontractor": {
                    "title": "Work order subcontractor",
                    "type": "string",
                    "readOnly": true
                },
                "work_order_responsible_crew": {
                    "title": "Work order responsible crew",
                    "type": "string",
                    "readOnly": true
                },
                "work_order_schedule_end_date": {
                    "title": "Work order schedule end date",
                    "type": "string",
                    "readOnly": true
                },
                "network_operator": {
                    "title": "Network operator",
                    "type": "string",
                    "readOnly": true
                },
                "custom_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomField"
                    },
                    "readOnly": true
                },
                "custom_field_values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "overrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductionReportCustomFieldVisibility"
                    },
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "reference_from": {
                    "title": "Reference from",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "reference_to": {
                    "title": "Reference to",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "work_item_completed": {
                    "title": "Work item completed",
                    "type": "boolean"
                },
                "completed_date": {
                    "title": "Completed date",
                    "type": "string",
                    "format": "date-time"
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "index": {
                    "title": "Index",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "new_redline_vertices": {
                    "title": "New redline vertices",
                    "type": "object",
                    "x-nullable": true
                },
                "production_report": {
                    "title": "Production report",
                    "type": "integer"
                },
                "work_item": {
                    "title": "Work item",
                    "type": "integer"
                }
            }
        },
        "ProductionReportGrid": {
            "required": [
                "production_report_line",
                "quantity_description"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "vendor_code": {
                    "title": "Vendor code",
                    "type": "string",
                    "readOnly": true
                },
                "operator_code": {
                    "title": "Operator code",
                    "type": "string",
                    "readOnly": true
                },
                "system_code": {
                    "title": "System code",
                    "type": "string",
                    "readOnly": true
                },
                "production_report_line": {
                    "$ref": "#/definitions/ProductionReportLine"
                },
                "forecasted_quantity": {
                    "title": "Forecasted quantity",
                    "type": "string",
                    "readOnly": true
                },
                "production_report_status": {
                    "title": "Production report status",
                    "type": "string",
                    "readOnly": true
                },
                "production_report_name": {
                    "title": "Production report name",
                    "type": "string",
                    "readOnly": true
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "readOnly": true
                },
                "custom_fields": {
                    "title": "Custom fields",
                    "type": "string",
                    "readOnly": true
                },
                "custom_field_values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "deleted": {
                    "title": "Deleted",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "quantity": {
                    "title": "Quantity",
                    "type": "number"
                },
                "estimated_quantity": {
                    "title": "Estimated quantity",
                    "type": "number",
                    "readOnly": true
                },
                "remaining_quantity": {
                    "title": "Remaining quantity",
                    "type": "number",
                    "minimum": 0
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "quantity_description": {
                    "title": "Quantity description",
                    "type": "integer"
                },
                "material": {
                    "title": "Material",
                    "type": "integer",
                    "x-nullable": true
                },
                "work_item_quantity": {
                    "title": "Work item quantity",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "ProductionReportQuantity": {
            "required": [
                "quantity_description",
                "production_report_line"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "quantity_description_name": {
                    "title": "Quantity description name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_imperial": {
                    "title": "Quantity description unit imperial",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_metric": {
                    "title": "Quantity description unit metric",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_factor": {
                    "title": "Quantity description unit factor",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_system": {
                    "title": "Quantity description unit system",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "material_name": {
                    "title": "Material name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "material_code": {
                    "title": "Material code",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "material_types": {
                    "title": "Material types",
                    "type": "string",
                    "readOnly": true
                },
                "material_categories": {
                    "title": "Material categories",
                    "type": "string",
                    "readOnly": true
                },
                "completed": {
                    "title": "Completed",
                    "type": "boolean",
                    "readOnly": true
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "reference_from": {
                    "title": "Reference from",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "reference_to": {
                    "title": "Reference to",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "work_item_name": {
                    "title": "Work item name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "work_item_code": {
                    "title": "Work item code",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "work_item": {
                    "title": "Work item",
                    "type": "string",
                    "readOnly": true
                },
                "production_report": {
                    "title": "Production report",
                    "type": "string",
                    "readOnly": true
                },
                "submitted_date": {
                    "title": "Submitted date",
                    "type": "string",
                    "readOnly": true
                },
                "reported_date": {
                    "title": "Reported date",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "deleted": {
                    "title": "Deleted",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "quantity": {
                    "title": "Quantity",
                    "type": "number"
                },
                "estimated_quantity": {
                    "title": "Estimated quantity",
                    "type": "number",
                    "readOnly": true
                },
                "remaining_quantity": {
                    "title": "Remaining quantity",
                    "type": "number",
                    "minimum": 0
                },
                "quantity_description": {
                    "title": "Quantity description",
                    "type": "integer"
                },
                "production_report_line": {
                    "title": "Production report line",
                    "type": "integer"
                },
                "material": {
                    "title": "Material",
                    "type": "integer",
                    "x-nullable": true
                },
                "work_item_quantity": {
                    "title": "Work item quantity",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "ProductionReport": {
            "required": [
                "submitted_date",
                "digital_signature"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "approver_name": {
                    "title": "Approver name",
                    "type": "string",
                    "readOnly": true
                },
                "created_by_name": {
                    "title": "Created by name",
                    "type": "string",
                    "readOnly": true
                },
                "subcontractor_name": {
                    "title": "Subcontractor name",
                    "type": "string",
                    "readOnly": true
                },
                "submitter_crew_name": {
                    "title": "Submitter crew name",
                    "type": "string",
                    "readOnly": true
                },
                "work_packages": {
                    "title": "Work packages",
                    "type": "string",
                    "readOnly": true
                },
                "work_orders": {
                    "title": "Work orders",
                    "type": "string",
                    "readOnly": true
                },
                "regions": {
                    "title": "Regions",
                    "type": "string",
                    "readOnly": true
                },
                "work_items": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "document_reference": {
                    "title": "Document reference",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "display_name": {
                    "title": "Display name",
                    "type": "string"
                },
                "work_items_id": {
                    "title": "Work items id",
                    "type": "string",
                    "readOnly": true
                },
                "field_level_hazard_assessment": {
                    "$ref": "#/definitions/NestedFieldLevelHazardAssessment"
                },
                "crew_members": {
                    "title": "Crew members",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "status_last_modified": {
                    "title": "Status last modified",
                    "type": "object"
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "reported_date": {
                    "title": "Reported date",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "submitted_date": {
                    "title": "Submitted date",
                    "type": "string",
                    "format": "date-time"
                },
                "approved_date": {
                    "title": "Approved date",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "digital_signature": {
                    "title": "Digital signature",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "notes": {
                    "title": "Notes",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "draft",
                        "submitted",
                        "resubmitted",
                        "in review",
                        "approved",
                        "rejected",
                        "recalled"
                    ]
                },
                "is_auto_approved": {
                    "title": "Auto-approved",
                    "description": "Designates that this report has been auto approved.",
                    "type": "boolean"
                },
                "approver_level": {
                    "title": "Approver level",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "created_by": {
                    "title": "Created by",
                    "type": "integer",
                    "x-nullable": true
                },
                "approver": {
                    "title": "Approver",
                    "type": "integer",
                    "x-nullable": true
                },
                "crew": {
                    "title": "Crew",
                    "type": "integer",
                    "x-nullable": true
                },
                "subcontractor": {
                    "title": "Subcontractor",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "Comment": {
            "required": [
                "body",
                "object_id",
                "content_type"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "body": {
                    "title": "Body",
                    "type": "string",
                    "maxLength": 100000,
                    "minLength": 1
                },
                "object_id": {
                    "title": "Object id",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "badges": {
                    "type": "array",
                    "items": {
                        "title": "Badges",
                        "type": "string",
                        "enum": [
                            "rejected"
                        ]
                    },
                    "readOnly": true
                },
                "created_by": {
                    "title": "Created by",
                    "type": "integer",
                    "readOnly": true
                },
                "content_type": {
                    "title": "Content type",
                    "type": "integer"
                }
            }
        },
        "Qualification": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "CoreRoleSerializer": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "default_rate": {
                    "title": "Default rate",
                    "type": "number",
                    "x-nullable": true
                },
                "default_overtime_rate": {
                    "title": "Default overtime rate",
                    "type": "number",
                    "x-nullable": true
                },
                "default_velocity": {
                    "title": "Default velocity",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "permission_group": {
                    "required": [
                        "name"
                    ],
                    "type": "object",
                    "properties": {
                        "id": {
                            "title": "ID",
                            "type": "integer",
                            "readOnly": true
                        },
                        "name": {
                            "title": "Name",
                            "type": "string",
                            "maxLength": 150,
                            "minLength": 1
                        },
                        "permissions": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "uniqueItems": true
                        }
                    },
                    "readOnly": true
                },
                "qualifications": {
                    "type": "array",
                    "items": {
                        "required": [
                            "name"
                        ],
                        "type": "object",
                        "properties": {
                            "id": {
                                "title": "ID",
                                "type": "integer",
                                "readOnly": true
                            },
                            "modified": {
                                "title": "Modified",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                            },
                            "created": {
                                "title": "Created",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                            },
                            "name": {
                                "title": "Name",
                                "type": "string",
                                "maxLength": 255,
                                "minLength": 1
                            }
                        }
                    },
                    "readOnly": true
                }
            }
        },
        "Hazard": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "severity": {
                    "title": "Severity",
                    "type": "string",
                    "enum": [
                        "low",
                        "medium",
                        "high"
                    ]
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "minLength": 1
                },
                "created_by": {
                    "title": "Created by",
                    "type": "integer",
                    "x-nullable": true
                },
                "safety_work_procedures": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "work_item_categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "ScheduleItemDependency": {
            "required": [
                "predecessor_content_type",
                "successor_content_type"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "type": "string",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "predecessor_object_id": {
                    "title": "Predecessor object id",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "x-nullable": true
                },
                "successor_object_id": {
                    "title": "Successor object id",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "x-nullable": true
                },
                "dependency_type": {
                    "title": "Dependency type",
                    "type": "string",
                    "enum": [
                        "FS",
                        "SS",
                        "FF",
                        "SF"
                    ]
                },
                "offset_time": {
                    "title": "Offset time",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808
                },
                "predecessor_content_type": {
                    "title": "Predecessor content type",
                    "type": "integer"
                },
                "successor_content_type": {
                    "title": "Successor content type",
                    "type": "integer"
                }
            }
        },
        "Task": {
            "required": [
                "status",
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "original_start_date": {
                    "title": "Original start date",
                    "type": "string",
                    "readOnly": true
                },
                "is_milestone": {
                    "title": "Is milestone",
                    "type": "string",
                    "readOnly": true
                },
                "base_start_date_delta": {
                    "title": "Base start date delta",
                    "type": "integer",
                    "readOnly": true
                },
                "base_end_date_delta": {
                    "title": "Base end date delta",
                    "type": "integer",
                    "readOnly": true
                },
                "estimated_duration": {
                    "title": "Estimated duration",
                    "type": "integer",
                    "readOnly": true
                },
                "actual_duration": {
                    "title": "Actual duration",
                    "type": "integer",
                    "readOnly": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "minLength": 1
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "start_date": {
                    "title": "Start date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "end_date": {
                    "title": "End date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "base_start_date": {
                    "title": "Base start date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "base_end_date": {
                    "title": "Base end date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "task_type": {
                    "title": "Task type",
                    "type": "string",
                    "enum": [
                        "BT",
                        "MT"
                    ]
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "work_order": {
                    "title": "Work order",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "WorkOrderTask": {
            "required": [
                "status"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "original_start_date": {
                    "title": "Original start date",
                    "type": "string",
                    "readOnly": true
                },
                "is_milestone": {
                    "title": "Is milestone",
                    "type": "string",
                    "readOnly": true
                },
                "base_start_date_delta": {
                    "title": "Base start date delta",
                    "type": "integer",
                    "readOnly": true
                },
                "base_end_date_delta": {
                    "title": "Base end date delta",
                    "type": "integer",
                    "readOnly": true
                },
                "estimated_duration": {
                    "title": "Estimated duration",
                    "type": "integer",
                    "readOnly": true
                },
                "actual_duration": {
                    "title": "Actual duration",
                    "type": "integer",
                    "readOnly": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "minLength": 1
                },
                "crew_category_name": {
                    "title": "Crew category name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "is_status_task": {
                    "title": "Is status task",
                    "type": "string",
                    "readOnly": true
                },
                "region": {
                    "title": "Region",
                    "type": "string",
                    "readOnly": true
                },
                "responsible": {
                    "title": "Responsible",
                    "type": "string",
                    "readOnly": true
                },
                "responsible_crew_name": {
                    "title": "Responsible crew name",
                    "type": "string",
                    "readOnly": true
                },
                "schedule_end_date": {
                    "title": "Schedule end date",
                    "type": "string",
                    "readOnly": true
                },
                "schedule_start_date": {
                    "title": "Schedule start date",
                    "type": "string",
                    "readOnly": true
                },
                "task_template": {
                    "title": "Task template",
                    "type": "string",
                    "readOnly": true
                },
                "task_template_rank": {
                    "title": "Task template rank",
                    "type": "string",
                    "readOnly": true
                },
                "work_package_name": {
                    "title": "Work package name",
                    "type": "string",
                    "readOnly": true
                },
                "work_order_category_name": {
                    "title": "Work order category name",
                    "type": "string",
                    "readOnly": true
                },
                "predecessor_tasks": {
                    "title": "Predecessor tasks",
                    "type": "string",
                    "readOnly": true
                },
                "successor_tasks": {
                    "title": "Successor tasks",
                    "type": "string",
                    "readOnly": true
                },
                "work_order": {
                    "title": "Work order",
                    "type": "string",
                    "readOnly": true
                },
                "task_type": {
                    "title": "Task type",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "status_last_modified": {
                    "title": "Status last modified",
                    "type": "object"
                },
                "start_date": {
                    "title": "Start date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "end_date": {
                    "title": "End date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "base_start_date": {
                    "title": "Base start date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "base_end_date": {
                    "title": "Base end date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "address": {
                    "title": "Address",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "notes": {
                    "title": "Notes",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "system_name": {
                    "title": "System name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "work_package": {
                    "title": "Work package",
                    "type": "integer",
                    "x-nullable": true
                },
                "responsible_crew": {
                    "title": "Responsible crew",
                    "type": "integer",
                    "x-nullable": true
                },
                "manager": {
                    "title": "Manager",
                    "type": "integer",
                    "x-nullable": true
                },
                "work_order_template": {
                    "title": "Work order template",
                    "type": "integer",
                    "x-nullable": true
                },
                "associated_work_order": {
                    "title": "Associated work order",
                    "type": "integer",
                    "x-nullable": true
                },
                "location": {
                    "title": "Location",
                    "type": "integer",
                    "x-nullable": true
                },
                "subcontractor": {
                    "title": "Subcontractor",
                    "type": "integer",
                    "x-nullable": true
                },
                "work_order_category": {
                    "title": "Work order category",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "TicketActionChange": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "field_value": {
                    "title": "Field value",
                    "type": "string",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "field_name": {
                    "title": "Field name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "ticket_action": {
                    "title": "Ticket action",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "TicketAction": {
            "required": [
                "snapshot"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "ticket_action_changes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TicketActionChange"
                    },
                    "readOnly": true
                },
                "created_by_name": {
                    "title": "Created by name",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "snapshot": {
                    "title": "Snapshot",
                    "type": "object"
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "ticket": {
                    "title": "Ticket",
                    "type": "integer",
                    "readOnly": true
                },
                "created_by": {
                    "title": "Created by",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "TicketCollection": {
            "required": [
                "object_id",
                "content_type",
                "tickets"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "model": {
                    "title": "Model",
                    "type": "string",
                    "readOnly": true
                },
                "app_label": {
                    "title": "App label",
                    "type": "string",
                    "readOnly": true
                },
                "count": {
                    "title": "Count",
                    "type": "string",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "global_priority": {
                    "title": "Global priority",
                    "type": "integer",
                    "enum": [
                        10,
                        20,
                        30,
                        40
                    ],
                    "x-nullable": true
                },
                "object_id": {
                    "title": "Object id",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "content_type": {
                    "title": "Content type",
                    "type": "integer"
                },
                "tickets": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "TicketAttachment": {
            "required": [
                "filename"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "file": {
                    "title": "File",
                    "type": "string",
                    "readOnly": true,
                    "format": "uri"
                },
                "filename": {
                    "title": "Filename",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "metadata": {
                    "title": "Metadata",
                    "type": "object",
                    "x-nullable": true
                },
                "ticket": {
                    "title": "Ticket",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "TicketComment": {
            "required": [
                "message"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "author": {
                    "title": "Author",
                    "type": "integer"
                },
                "author_name": {
                    "title": "Author name",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "message": {
                    "title": "Message",
                    "type": "string",
                    "maxLength": 65535,
                    "minLength": 1
                },
                "ticket": {
                    "title": "Ticket",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "Ticket": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "number": {
                    "title": "Number",
                    "type": "string",
                    "readOnly": true
                },
                "created_by": {
                    "title": "Created by",
                    "type": "integer"
                },
                "created_by_name": {
                    "title": "Created by name",
                    "type": "string",
                    "readOnly": true
                },
                "closed_by_name": {
                    "title": "Closed by name",
                    "type": "string",
                    "readOnly": true
                },
                "completed_by_name": {
                    "title": "Completed by name",
                    "type": "string",
                    "readOnly": true
                },
                "assigned_to_name": {
                    "title": "Assigned to name",
                    "type": "string",
                    "readOnly": true
                },
                "assigned_to_name_with_email": {
                    "title": "Assigned to name with email",
                    "type": "string",
                    "readOnly": true
                },
                "related_to": {
                    "title": "Related to",
                    "type": "string",
                    "readOnly": true
                },
                "ticket_actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TicketAction"
                    },
                    "readOnly": true
                },
                "ticket_attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TicketAttachment"
                    },
                    "readOnly": true
                },
                "ticket_comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TicketComment"
                    },
                    "readOnly": true
                },
                "modified_by_name": {
                    "title": "Modified by name",
                    "type": "string",
                    "readOnly": true
                },
                "the_geom": {
                    "title": "The geom",
                    "type": "string",
                    "x-nullable": true
                },
                "assigned_date": {
                    "title": "Assigned date",
                    "type": "string",
                    "readOnly": true
                },
                "closed_date": {
                    "title": "Closed date",
                    "type": "string",
                    "readOnly": true
                },
                "completed_date": {
                    "title": "Completed date",
                    "type": "string",
                    "readOnly": true
                },
                "assigned_to_company_name": {
                    "title": "Assigned to company name",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "priority": {
                    "title": "Priority",
                    "type": "integer",
                    "enum": [
                        10,
                        20,
                        30,
                        40
                    ],
                    "x-nullable": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "open",
                        "closed",
                        "completed"
                    ]
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "due_date": {
                    "title": "Due date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "object_id": {
                    "title": "Object id",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1,
                    "x-nullable": true
                },
                "go_from": {
                    "title": "Go from",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "go_to": {
                    "title": "Go to",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "full_address": {
                    "title": "Full address",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "assigned_to": {
                    "title": "Assigned to",
                    "type": "integer",
                    "x-nullable": true
                },
                "program_segment": {
                    "title": "Program segment",
                    "type": "integer",
                    "x-nullable": true
                },
                "content_type": {
                    "title": "Content type",
                    "type": "integer",
                    "x-nullable": true
                },
                "modified_by": {
                    "title": "Modified by",
                    "type": "integer",
                    "x-nullable": true
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "TimesheetCustomFieldVisibility": {
            "required": [
                "custom_field_settings"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "is_mandatory": {
                    "title": "Is mandatory",
                    "type": "boolean"
                },
                "visibility_on_mobile_app": {
                    "title": "Visibility on mobile app",
                    "type": "string",
                    "enum": [
                        "hidden",
                        "view only",
                        "editable"
                    ]
                },
                "custom_field_settings": {
                    "title": "Custom field settings",
                    "type": "integer"
                }
            }
        },
        "TimesheetLine": {
            "required": [
                "work_item",
                "total_hours",
                "shift"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "readOnly": true
                },
                "timesheet": {
                    "title": "Timesheet",
                    "type": "string",
                    "readOnly": true
                },
                "time_entry_date": {
                    "title": "Time entry date",
                    "type": "string",
                    "readOnly": true
                },
                "resource": {
                    "title": "Resource",
                    "type": "string",
                    "readOnly": true
                },
                "work_item": {
                    "$ref": "#/definitions/DefaultDynamicModelSerializer"
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "readOnly": true
                },
                "approved_timestamp": {
                    "title": "Approved timestamp",
                    "type": "string",
                    "readOnly": true
                },
                "submitted_timestamp": {
                    "title": "Submitted timestamp",
                    "type": "string",
                    "readOnly": true
                },
                "approver_name": {
                    "title": "Approver name",
                    "type": "string",
                    "readOnly": true
                },
                "submitter_name": {
                    "title": "Submitter name",
                    "type": "string",
                    "readOnly": true
                },
                "work_order": {
                    "title": "Work order",
                    "type": "string",
                    "readOnly": true
                },
                "work_package": {
                    "title": "Work package",
                    "type": "string",
                    "readOnly": true
                },
                "design_element": {
                    "title": "Design element",
                    "type": "string",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "total_hours": {
                    "title": "Total hours",
                    "type": "number",
                    "format": "decimal",
                    "minimum": 0
                },
                "regular_hours": {
                    "title": "Regular hours",
                    "type": "number",
                    "format": "decimal",
                    "minimum": 0,
                    "x-nullable": true
                },
                "overtime_hours": {
                    "title": "Overtime hours",
                    "type": "number",
                    "format": "decimal",
                    "minimum": 0,
                    "x-nullable": true
                },
                "double_hours": {
                    "title": "Double hours",
                    "type": "number",
                    "format": "decimal",
                    "minimum": 0,
                    "x-nullable": true
                },
                "shift": {
                    "title": "Shift",
                    "type": "integer"
                },
                "equipment": {
                    "title": "Equipment",
                    "type": "integer",
                    "x-nullable": true
                },
                "person": {
                    "title": "Person",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "ShiftPlusTimesheet": {
            "required": [
                "date"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "timesheet_lines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimesheetLine"
                    },
                    "readOnly": true
                },
                "breaks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Break"
                    },
                    "readOnly": true
                },
                "custom_field_values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "custom_fields": {
                    "title": "Custom fields",
                    "type": "string",
                    "readOnly": true
                },
                "overrides": {
                    "title": "Overrides",
                    "type": "string",
                    "readOnly": true
                },
                "is_signed": {
                    "title": "Is signed",
                    "type": "string",
                    "readOnly": true
                },
                "timesheet_id": {
                    "title": "Timesheet id",
                    "type": "integer"
                },
                "timesheet": {
                    "$ref": "#/definitions/DefaultDynamicModelSerializer"
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "date": {
                    "title": "Date",
                    "type": "string",
                    "format": "date"
                },
                "start": {
                    "title": "Start",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "end": {
                    "title": "End",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                }
            }
        },
        "TimesheetLinePlusShift": {
            "required": [
                "work_item",
                "total_hours",
                "shift"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "readOnly": true
                },
                "timesheet": {
                    "title": "Timesheet",
                    "type": "string",
                    "readOnly": true
                },
                "time_entry_date": {
                    "title": "Time entry date",
                    "type": "string",
                    "readOnly": true
                },
                "resource": {
                    "title": "Resource",
                    "type": "string",
                    "readOnly": true
                },
                "work_item": {
                    "$ref": "#/definitions/DefaultDynamicModelSerializer"
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "readOnly": true
                },
                "approved_timestamp": {
                    "title": "Approved timestamp",
                    "type": "string",
                    "readOnly": true
                },
                "submitted_timestamp": {
                    "title": "Submitted timestamp",
                    "type": "string",
                    "readOnly": true
                },
                "approver_name": {
                    "title": "Approver name",
                    "type": "string",
                    "readOnly": true
                },
                "submitter_name": {
                    "title": "Submitter name",
                    "type": "string",
                    "readOnly": true
                },
                "work_order": {
                    "title": "Work order",
                    "type": "string",
                    "readOnly": true
                },
                "work_package": {
                    "title": "Work package",
                    "type": "string",
                    "readOnly": true
                },
                "design_element": {
                    "title": "Design element",
                    "type": "string",
                    "readOnly": true
                },
                "shift_hours": {
                    "title": "Shift hours",
                    "type": "string",
                    "readOnly": true
                },
                "shift_start": {
                    "title": "Shift start",
                    "type": "string",
                    "readOnly": true
                },
                "shift_end": {
                    "title": "Shift end",
                    "type": "string",
                    "readOnly": true
                },
                "breaks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Break"
                    },
                    "readOnly": true
                },
                "is_signed": {
                    "title": "Is signed",
                    "type": "string",
                    "readOnly": true
                },
                "custom_field_values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "custom_fields": {
                    "title": "Custom fields",
                    "type": "string",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "total_hours": {
                    "title": "Total hours",
                    "type": "number",
                    "format": "decimal",
                    "minimum": 0
                },
                "regular_hours": {
                    "title": "Regular hours",
                    "type": "number",
                    "format": "decimal",
                    "minimum": 0,
                    "x-nullable": true
                },
                "overtime_hours": {
                    "title": "Overtime hours",
                    "type": "number",
                    "format": "decimal",
                    "minimum": 0,
                    "x-nullable": true
                },
                "double_hours": {
                    "title": "Double hours",
                    "type": "number",
                    "format": "decimal",
                    "minimum": 0,
                    "x-nullable": true
                },
                "shift": {
                    "title": "Shift",
                    "type": "integer"
                },
                "equipment": {
                    "title": "Equipment",
                    "type": "integer",
                    "x-nullable": true
                },
                "person": {
                    "title": "Person",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "Shift": {
            "required": [
                "date",
                "timesheet"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "timesheet_lines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimesheetLine"
                    },
                    "readOnly": true
                },
                "breaks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Break"
                    },
                    "readOnly": true
                },
                "custom_field_values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "custom_fields": {
                    "title": "Custom fields",
                    "type": "string",
                    "readOnly": true
                },
                "overrides": {
                    "title": "Overrides",
                    "type": "string",
                    "readOnly": true
                },
                "is_signed": {
                    "title": "Is signed",
                    "type": "string",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "date": {
                    "title": "Date",
                    "type": "string",
                    "format": "date"
                },
                "start": {
                    "title": "Start",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "end": {
                    "title": "End",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "timesheet": {
                    "title": "Timesheet",
                    "type": "integer"
                }
            }
        },
        "Timesheet": {
            "required": [
                "digital_signature"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created_by_name": {
                    "title": "Created by name",
                    "type": "string",
                    "readOnly": true
                },
                "approver_name": {
                    "title": "Approver name",
                    "type": "string",
                    "readOnly": true
                },
                "display_name": {
                    "title": "Display name",
                    "type": "string"
                },
                "work_items": {
                    "title": "Work items",
                    "type": "string",
                    "readOnly": true
                },
                "work_orders": {
                    "title": "Work orders",
                    "type": "string",
                    "readOnly": true
                },
                "work_packages": {
                    "title": "Work packages",
                    "type": "string",
                    "readOnly": true
                },
                "design_elements": {
                    "title": "Design elements",
                    "type": "string",
                    "readOnly": true
                },
                "shifts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Shift"
                    },
                    "readOnly": true
                },
                "acknowledgments": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "status_last_modified": {
                    "title": "Status last modified",
                    "type": "object"
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "draft",
                        "submitted",
                        "resubmitted",
                        "in review",
                        "approved",
                        "rejected"
                    ]
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "submitted_timestamp": {
                    "title": "Submitted timestamp",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "actual_submitted_timestamp": {
                    "title": "Actual submitted timestamp",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "approved_timestamp": {
                    "title": "Approved timestamp",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "digital_signature": {
                    "title": "Digital signature",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "notes": {
                    "title": "Notes",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "comments": {
                    "title": "Comments",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "system_name": {
                    "title": "System name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "approver_level": {
                    "title": "Approver level",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "created_by": {
                    "title": "Created by",
                    "type": "integer",
                    "readOnly": true
                },
                "approver": {
                    "title": "Approver",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "UnitDimension": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                }
            }
        },
        "Unit": {
            "required": [
                "metric_name",
                "imperial_name",
                "factor",
                "dimension"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "metric_name": {
                    "title": "Metric name",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 1
                },
                "imperial_name": {
                    "title": "Imperial name",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 1
                },
                "factor": {
                    "title": "Factor",
                    "type": "number"
                },
                "metric_abbreviation": {
                    "title": "Metric abbreviation",
                    "type": "string",
                    "maxLength": 7,
                    "x-nullable": true
                },
                "imperial_abbreviation": {
                    "title": "Imperial abbreviation",
                    "type": "string",
                    "maxLength": 7,
                    "x-nullable": true
                },
                "dimension": {
                    "title": "Dimension",
                    "type": "integer"
                }
            }
        },
        "UserGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "company_name": {
                    "title": "Company name",
                    "type": "string",
                    "readOnly": true
                },
                "role_name": {
                    "title": "Role name",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "UserPermission": {
            "required": [
                "codename",
                "content_type"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "codename": {
                    "title": "Codename",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "content_type": {
                    "title": "Content type",
                    "type": "integer"
                }
            }
        },
        "UserTierChange": {
            "required": [
                "start_date",
                "profile"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "full_name": {
                    "title": "Full name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "company": {
                    "title": "Company",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "environment": {
                    "title": "Environment",
                    "type": "string",
                    "readOnly": true
                },
                "is_active": {
                    "title": "Is active",
                    "type": "boolean",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "user_tier": {
                    "title": "User tier",
                    "type": "string",
                    "enum": [
                        "Office User",
                        "Field User",
                        "Read Only",
                        "Support",
                        "Service",
                        "No Login"
                    ]
                },
                "start_date": {
                    "title": "Start date",
                    "type": "string",
                    "format": "date-time"
                },
                "end_date": {
                    "title": "End date",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "profile": {
                    "title": "Profile",
                    "type": "integer"
                }
            }
        },
        "Variable": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "value": {
                    "title": "Value",
                    "type": "number"
                }
            }
        },
        "ElementWorkQuantityTemplate": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "quantity_description_name": {
                    "title": "Quantity description name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_imperial": {
                    "title": "Quantity description unit imperial",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_metric": {
                    "title": "Quantity description unit metric",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_factor": {
                    "title": "Quantity description unit factor",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_system": {
                    "title": "Quantity description unit system",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "material_category_name": {
                    "title": "Material category name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "material_category": {
                    "title": "Material category",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "is_fixed": {
                    "title": "Is fixed",
                    "type": "string",
                    "readOnly": true
                },
                "quantity_description_category": {
                    "title": "Quantity description category",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "work_item_template": {
                    "title": "Work item template",
                    "type": "string",
                    "readOnly": true
                },
                "material_name": {
                    "title": "Material name",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "default_value": {
                    "title": "Default value",
                    "type": "number"
                },
                "quantity_field_name": {
                    "title": "Quantity field name",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "material_field_name": {
                    "title": "Material field name",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "options": {
                    "title": "Options",
                    "type": "string",
                    "enum": [
                        "fixed",
                        "default",
                        "length"
                    ]
                },
                "quantity_description": {
                    "title": "Quantity description",
                    "type": "integer",
                    "x-nullable": true
                },
                "element_work_template": {
                    "title": "Element work template",
                    "type": "integer",
                    "x-nullable": true
                },
                "default_material": {
                    "title": "Default material",
                    "type": "integer",
                    "x-nullable": true
                },
                "work_item_quantity_template": {
                    "title": "Work item quantity template",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "WorkItemQuantityTemplate": {
            "required": [
                "work_item_template"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "quantity_description_name": {
                    "title": "Quantity description name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_imperial": {
                    "title": "Quantity description unit imperial",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_metric": {
                    "title": "Quantity description unit metric",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_factor": {
                    "title": "Quantity description unit factor",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_system": {
                    "title": "Quantity description unit system",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "network_operator_material_category_name": {
                    "title": "Network operator material category name",
                    "type": "string",
                    "readOnly": true
                },
                "network_operator_material_name": {
                    "title": "Network operator material name",
                    "type": "string",
                    "readOnly": true
                },
                "material_category": {
                    "title": "Material category",
                    "type": "string",
                    "readOnly": true
                },
                "material_category_name": {
                    "title": "Material category name",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "default_value": {
                    "title": "Default value",
                    "type": "number"
                },
                "default_value_type": {
                    "title": "Default value type",
                    "type": "string",
                    "enum": [
                        "default",
                        "length",
                        "measured-length"
                    ]
                },
                "is_fixed": {
                    "title": "Is fixed",
                    "type": "boolean"
                },
                "is_primary": {
                    "title": "Is primary",
                    "type": "boolean"
                },
                "velocity": {
                    "title": "Velocity",
                    "type": "number",
                    "x-nullable": true
                },
                "quantity_description": {
                    "title": "Quantity description",
                    "type": "integer",
                    "x-nullable": true
                },
                "work_item_template": {
                    "title": "Work item template",
                    "type": "integer"
                },
                "network_operator_material_category": {
                    "title": "Network operator material category",
                    "type": "integer",
                    "x-nullable": true
                },
                "network_operator_material": {
                    "title": "Network operator material",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "WorkItemTemplate": {
            "required": [
                "code",
                "name",
                "work_order_template"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "work_item_quantity_templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkItemQuantityTemplate"
                    },
                    "readOnly": true
                },
                "work_item_category_name": {
                    "title": "Work item category name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "work_order_template_name": {
                    "title": "Work order template name",
                    "type": "string",
                    "readOnly": true
                },
                "work_package_template_name": {
                    "title": "Work package template name",
                    "type": "string",
                    "readOnly": true
                },
                "program_name": {
                    "title": "Program name",
                    "type": "string",
                    "readOnly": true
                },
                "network_operator": {
                    "title": "Network operator",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "requires_photo": {
                    "title": "Requires photo",
                    "type": "boolean"
                },
                "automatic_creation": {
                    "title": "Automatic creation",
                    "type": "boolean"
                },
                "default_to_complete": {
                    "title": "Default to complete",
                    "type": "boolean"
                },
                "work_item_category": {
                    "title": "Work item category",
                    "type": "integer",
                    "x-nullable": true
                },
                "work_order_template": {
                    "title": "Work order template",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "ElementWorkTemplate": {
            "required": [
                "code",
                "work_package_template"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "element_work_quantity_templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ElementWorkQuantityTemplate"
                    },
                    "readOnly": true
                },
                "work_item_templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkItemTemplate"
                    },
                    "readOnly": true
                },
                "work_package_template_name": {
                    "title": "Work package template name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "default": "",
                    "maxLength": 255,
                    "minLength": 1,
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "wit_ordering": {
                    "title": "Wit ordering",
                    "type": "object",
                    "x-nullable": true
                },
                "program": {
                    "title": "Program",
                    "type": "integer",
                    "x-nullable": true
                },
                "work_package_template": {
                    "title": "Work package template",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "LibraryElementWorkQuantityTemplate": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "quantity_description_name": {
                    "title": "Quantity description name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_imperial": {
                    "title": "Quantity description unit imperial",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_metric": {
                    "title": "Quantity description unit metric",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_factor": {
                    "title": "Quantity description unit factor",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_system": {
                    "title": "Quantity description unit system",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "material_category_names": {
                    "title": "Material category names",
                    "type": "string",
                    "readOnly": true
                },
                "quantity_description_category": {
                    "title": "Quantity description category",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "library_work_item_template": {
                    "title": "Library work item template",
                    "type": "integer",
                    "readOnly": true
                },
                "material_name": {
                    "title": "Material name",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "default_value": {
                    "title": "Default value",
                    "type": "number"
                },
                "quantity_field_name": {
                    "title": "Quantity field name",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "material_field_name": {
                    "title": "Material field name",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "options": {
                    "title": "Options",
                    "type": "string",
                    "enum": [
                        "fixed",
                        "default",
                        "length"
                    ]
                },
                "quantity_description": {
                    "title": "Quantity description",
                    "type": "integer",
                    "x-nullable": true
                },
                "library_element_work_template": {
                    "title": "Library element work template",
                    "type": "integer",
                    "x-nullable": true
                },
                "default_material": {
                    "title": "Default material",
                    "type": "integer",
                    "x-nullable": true
                },
                "library_work_item_quantity_template": {
                    "title": "Library work item quantity template",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "LibraryElementWorkTemplate": {
            "required": [
                "code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "library_element_work_quantity_templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LibraryElementWorkQuantityTemplate"
                    },
                    "readOnly": true
                },
                "library_work_package_template_name": {
                    "title": "Library work package template name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "default": "",
                    "maxLength": 255,
                    "minLength": 1,
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "lwit_ordering": {
                    "title": "Lwit ordering",
                    "type": "object",
                    "x-nullable": true
                },
                "library_work_package_template": {
                    "title": "Library work package template",
                    "type": "integer",
                    "x-nullable": true
                },
                "library_work_item_templates": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "LibraryWorkItemQuantityTemplate": {
            "required": [
                "library_work_item_template"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "quantity_description_name": {
                    "title": "Quantity description name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_imperial": {
                    "title": "Quantity description unit imperial",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_metric": {
                    "title": "Quantity description unit metric",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_factor": {
                    "title": "Quantity description unit factor",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_system": {
                    "title": "Quantity description unit system",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "material_category_name": {
                    "title": "Material category name",
                    "type": "string",
                    "readOnly": true
                },
                "material_name": {
                    "title": "Material name",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "default_value": {
                    "title": "Default value",
                    "type": "number"
                },
                "default_value_type": {
                    "title": "Default value type",
                    "type": "string",
                    "enum": [
                        "default",
                        "length",
                        "measured-length"
                    ]
                },
                "is_fixed": {
                    "title": "Is fixed",
                    "type": "boolean"
                },
                "is_primary": {
                    "title": "Is primary",
                    "type": "boolean"
                },
                "velocity": {
                    "title": "Velocity",
                    "type": "number",
                    "x-nullable": true
                },
                "quantity_description": {
                    "title": "Quantity description",
                    "type": "integer",
                    "x-nullable": true
                },
                "library_work_item_template": {
                    "title": "Library work item template",
                    "type": "integer"
                },
                "material_category": {
                    "title": "Material category",
                    "type": "integer",
                    "x-nullable": true
                },
                "material": {
                    "title": "Material",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "LibraryWorkItemTemplate": {
            "required": [
                "code",
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "library_work_item_quantity_templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LibraryWorkItemQuantityTemplate"
                    },
                    "readOnly": true
                },
                "work_item_category_name": {
                    "title": "Work item category name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "library_work_order_template_name": {
                    "title": "Library work order template name",
                    "type": "string",
                    "readOnly": true
                },
                "library_work_package_template_name": {
                    "title": "Library work package template name",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "requires_photo": {
                    "title": "Requires photo",
                    "type": "boolean"
                },
                "automatic_creation": {
                    "title": "Automatic creation",
                    "type": "boolean"
                },
                "default_to_complete": {
                    "title": "Default to complete",
                    "type": "boolean"
                },
                "work_item_category": {
                    "title": "Work item category",
                    "type": "integer",
                    "x-nullable": true
                },
                "library_work_order_template": {
                    "title": "Library work order template",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "LibraryCustomFieldListOption": {
            "required": [
                "label",
                "library_custom_field"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "label": {
                    "title": "Label",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "rank": {
                    "title": "Rank",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "library_custom_field": {
                    "title": "Library custom field",
                    "type": "integer"
                }
            }
        },
        "LibraryCustomField": {
            "required": [
                "label"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "list_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LibraryCustomFieldListOption"
                    },
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "data_type": {
                    "title": "Data type",
                    "type": "string",
                    "enum": [
                        "boolean",
                        "date",
                        "date_time",
                        "string",
                        "number",
                        "list",
                        "entity_list",
                        "file",
                        "table"
                    ]
                },
                "data_format": {
                    "title": "Data format",
                    "type": "string",
                    "enum": [
                        "url",
                        "multiline"
                    ]
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "label": {
                    "title": "Label",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "rank": {
                    "title": "Rank",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "object_id": {
                    "title": "Object id",
                    "description": "Object where the field will be defined. Leave empty to make it available to all objects             with this Content Type.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "x-nullable": true
                },
                "entity_list_content_type": {
                    "title": "Entity list content type",
                    "type": "integer",
                    "x-nullable": true
                },
                "content_type": {
                    "title": "Content type",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "LibraryWorkOrderTemplateApproverLevel": {
            "required": [
                "library_work_order_template"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "role_name": {
                    "title": "Role name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "level": {
                    "title": "Level",
                    "type": "integer",
                    "default": 2,
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "role": {
                    "title": "Role",
                    "type": "integer",
                    "x-nullable": true
                },
                "library_work_order_template": {
                    "title": "Library work order template",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "LibraryWorkOrderTemplate": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "work_order_category_name": {
                    "title": "Work order category name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "library_work_item_templates": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "role_name": {
                    "title": "Role name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "library_work_package_template_name": {
                    "title": "Library work package template name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "crew_category_name": {
                    "title": "Crew category name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "library_custom_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LibraryCustomField"
                    },
                    "readOnly": true
                },
                "approver_levels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LibraryWorkOrderTemplateApproverLevel"
                    },
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "crew_category": {
                    "title": "Crew category",
                    "type": "integer",
                    "x-nullable": true
                },
                "role": {
                    "title": "Role",
                    "type": "integer",
                    "x-nullable": true
                },
                "work_order_category": {
                    "title": "Work order category",
                    "type": "integer",
                    "x-nullable": true
                },
                "library_work_package_template": {
                    "title": "Library work package template",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "LibraryWorkPackageTemplate": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "minLength": 1
                },
                "library_work_order_templates": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "role_name": {
                    "title": "Role name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "library_custom_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LibraryCustomField"
                    },
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "sign_off_requirements": {
                    "title": "Sign off requirements",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "role": {
                    "title": "Role",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "MaterialRequirements": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "Subcontract": {
            "required": [
                "name",
                "code",
                "program",
                "subcontractor"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "subcontractor_name": {
                    "title": "Subcontractor name",
                    "type": "string",
                    "readOnly": true
                },
                "billing_contact": {
                    "title": "Billing contact",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "billing_terms": {
                    "title": "Billing terms",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "program": {
                    "title": "Program",
                    "type": "integer",
                    "x-nullable": true
                },
                "subcontractor": {
                    "title": "Subcontractor",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "WorkItemMaterial": {
            "required": [
                "quantity_description",
                "work_item",
                "material"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "operator_code": {
                    "title": "Operator code",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "material_types": {
                    "title": "Material types",
                    "type": "string",
                    "readOnly": true
                },
                "material_item_quantity": {
                    "title": "Material item quantity",
                    "type": "string",
                    "readOnly": true
                },
                "material_name": {
                    "title": "Material name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "material_name_with_unit": {
                    "title": "Material name with unit",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "material_name_with_supplier_and_unit": {
                    "title": "Material name with supplier and unit",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "custom_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomField"
                    },
                    "readOnly": true
                },
                "custom_field_values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "forecast_quantity": {
                    "title": "Forecast quantity",
                    "type": "string",
                    "readOnly": true
                },
                "work_item_name": {
                    "title": "Work item name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "work_item_date_done": {
                    "title": "Work item date done",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "production_reports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductionReportHeadThroughLine"
                    },
                    "readOnly": true
                },
                "region": {
                    "title": "Region",
                    "type": "string",
                    "readOnly": true
                },
                "work_item_status": {
                    "title": "Work item status",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "work_item_template_name": {
                    "title": "Work item template name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "work_item_due_date": {
                    "title": "Work item due date",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "design_element_label": {
                    "title": "Design element label",
                    "type": "string",
                    "readOnly": true
                },
                "design_element_go_from": {
                    "title": "Design element go from",
                    "type": "string",
                    "readOnly": true
                },
                "design_element_go_to": {
                    "title": "Design element go to",
                    "type": "string",
                    "readOnly": true
                },
                "design_element_full_address": {
                    "title": "Design element full address",
                    "type": "string",
                    "readOnly": true
                },
                "design_element": {
                    "title": "Design element",
                    "type": "string",
                    "readOnly": true
                },
                "work_order_name": {
                    "title": "Work order name",
                    "type": "string",
                    "readOnly": true
                },
                "work_order": {
                    "title": "Work order",
                    "type": "string",
                    "readOnly": true
                },
                "work_package_name": {
                    "title": "Work package name",
                    "type": "string",
                    "readOnly": true
                },
                "work_package": {
                    "title": "Work package",
                    "type": "string",
                    "readOnly": true
                },
                "unit": {
                    "title": "Unit",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "quantity": {
                    "title": "Quantity",
                    "type": "number",
                    "format": "decimal"
                },
                "estimated_quantity": {
                    "title": "Estimated quantity",
                    "type": "number",
                    "format": "decimal",
                    "minimum": 0
                },
                "remaining_quantity": {
                    "title": "Remaining quantity",
                    "type": "number",
                    "format": "decimal",
                    "minimum": 0
                },
                "quantity_description": {
                    "title": "Quantity description",
                    "type": "integer"
                },
                "work_item": {
                    "title": "Work item",
                    "type": "integer"
                },
                "material": {
                    "title": "Material",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "FullWorkItemQuantity": {
            "required": [
                "quantity_description",
                "work_item",
                "material"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "integer",
                    "x-nullable": true
                },
                "vendor_code": {
                    "title": "Vendor code",
                    "type": "string",
                    "readOnly": true
                },
                "operator_code": {
                    "title": "Operator code",
                    "type": "string",
                    "readOnly": true
                },
                "system_code": {
                    "title": "System code",
                    "type": "string",
                    "readOnly": true
                },
                "quantity_description_name": {
                    "title": "Quantity description name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_abbreviation": {
                    "title": "Quantity description unit abbreviation",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_imperial": {
                    "title": "Quantity description unit imperial",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_metric": {
                    "title": "Quantity description unit metric",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_factor": {
                    "title": "Quantity description unit factor",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_unit_system": {
                    "title": "Quantity description unit system",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity_description_standard_unit": {
                    "title": "Quantity description standard unit",
                    "type": "string",
                    "readOnly": true
                },
                "work_item_name": {
                    "title": "Work item name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "material_name": {
                    "title": "Material name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "material_code": {
                    "title": "Material code",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "material_name_with_supplier_and_unit": {
                    "title": "Material name with supplier and unit",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "forecasted_quantity": {
                    "title": "Forecasted quantity",
                    "type": "string",
                    "readOnly": true
                },
                "is_locked": {
                    "title": "Is locked",
                    "type": "boolean",
                    "readOnly": true
                },
                "material_category": {
                    "title": "Material category",
                    "type": "string",
                    "readOnly": true
                },
                "can_update_quantities": {
                    "title": "Can update quantities",
                    "type": "boolean",
                    "readOnly": true
                },
                "quantity_description_is_active": {
                    "title": "Quantity description is active",
                    "type": "string",
                    "readOnly": true
                },
                "assign_to_name": {
                    "title": "Assign to name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "crew_name": {
                    "title": "Crew name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "crew_company_name": {
                    "title": "Crew company name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "quantity": {
                    "title": "Quantity",
                    "type": "string",
                    "readOnly": true
                },
                "quantity_description_category": {
                    "title": "Quantity description category",
                    "type": "string",
                    "readOnly": true
                },
                "estimated_quantity": {
                    "title": "Estimated quantity",
                    "type": "string",
                    "readOnly": true
                },
                "remaining_quantity": {
                    "title": "Remaining quantity",
                    "type": "string",
                    "readOnly": true
                },
                "work_package_id": {
                    "title": "Work package id",
                    "type": "string",
                    "readOnly": true
                },
                "work_package_name": {
                    "title": "Work package name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "work_order_id": {
                    "title": "Work order id",
                    "type": "string",
                    "readOnly": true
                },
                "work_order_name": {
                    "title": "Work order name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "work_item_status": {
                    "title": "Work item status",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "work_item_template_name": {
                    "title": "Work item template name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "work_item_due_date": {
                    "title": "Work item due date",
                    "type": "string",
                    "readOnly": true
                },
                "work_item_completed_date": {
                    "title": "Work item completed date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "design_element_id": {
                    "title": "Design element id",
                    "type": "string",
                    "readOnly": true
                },
                "design_element_label": {
                    "title": "Design element label",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "design_element_full_address": {
                    "title": "Design element full address",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "design_element_go_from": {
                    "title": "Design element go from",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "design_element_go_to": {
                    "title": "Design element go to",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "custom_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomField"
                    },
                    "readOnly": true
                },
                "custom_field_values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "region": {
                    "title": "Region",
                    "type": "string",
                    "readOnly": true
                },
                "production_reports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductionReportHeadThroughLine"
                    },
                    "readOnly": true
                },
                "material_labor_name": {
                    "title": "Material labor name",
                    "type": "string",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "quantity_description": {
                    "title": "Quantity description",
                    "type": "integer"
                },
                "work_item": {
                    "title": "Work item",
                    "type": "integer"
                },
                "material": {
                    "title": "Material",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "SplitWorkItemQuantity": {
            "required": [
                "quantity_description",
                "work_item",
                "material"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "quantity": {
                    "title": "Quantity",
                    "type": "number",
                    "format": "decimal"
                },
                "estimated_quantity": {
                    "title": "Estimated quantity",
                    "type": "number",
                    "format": "decimal",
                    "minimum": 0
                },
                "remaining_quantity": {
                    "title": "Remaining quantity",
                    "type": "number",
                    "format": "decimal",
                    "minimum": 0
                },
                "quantity_description": {
                    "title": "Quantity description",
                    "type": "integer"
                },
                "work_item": {
                    "title": "Work item",
                    "type": "integer"
                },
                "material": {
                    "title": "Material",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "SplitWorkItem": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "quantities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SplitWorkItemQuantity"
                    },
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "status_last_modified": {
                    "title": "Status last modified",
                    "type": "object"
                },
                "original_start_date": {
                    "title": "Original start date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "start_date": {
                    "title": "Start date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "end_date": {
                    "title": "End date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "base_start_date": {
                    "title": "Base start date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "base_end_date": {
                    "title": "Base end date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "activity_code": {
                    "title": "Activity code",
                    "type": "string",
                    "maxLength": 16,
                    "x-nullable": true
                },
                "address": {
                    "title": "Address",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "additional_information": {
                    "title": "Additional information",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "new",
                        "issued",
                        "assigned",
                        "completed",
                        "verified",
                        "disputed",
                        "closed",
                        "cancelled",
                        "on hold"
                    ]
                },
                "comment": {
                    "title": "Comment",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "due_date": {
                    "title": "Due date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "created_manually": {
                    "title": "Created manually",
                    "type": "boolean"
                },
                "sibling_number": {
                    "title": "Sibling number",
                    "type": "integer",
                    "readOnly": true
                },
                "reason_code": {
                    "title": "Reason code",
                    "type": "string",
                    "maxLength": 200,
                    "x-nullable": true
                },
                "location": {
                    "title": "Location",
                    "type": "integer",
                    "x-nullable": true
                },
                "work_item_template": {
                    "title": "Work item template",
                    "type": "integer",
                    "x-nullable": true
                },
                "work_order": {
                    "title": "Work order",
                    "type": "integer",
                    "x-nullable": true
                },
                "design_element": {
                    "title": "Design element",
                    "type": "integer",
                    "x-nullable": true
                },
                "process": {
                    "title": "Process",
                    "type": "integer",
                    "x-nullable": true
                },
                "assign_to_person": {
                    "title": "Assign to person",
                    "type": "integer",
                    "x-nullable": true
                },
                "first_sibling": {
                    "title": "First sibling",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "WorkItemBatch": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "original_start_date": {
                    "title": "Original start date",
                    "type": "string",
                    "readOnly": true
                },
                "is_milestone": {
                    "title": "Is milestone",
                    "type": "string",
                    "readOnly": true
                },
                "base_start_date_delta": {
                    "title": "Base start date delta",
                    "type": "integer",
                    "readOnly": true
                },
                "base_end_date_delta": {
                    "title": "Base end date delta",
                    "type": "integer",
                    "readOnly": true
                },
                "estimated_duration": {
                    "title": "Estimated duration",
                    "type": "integer",
                    "readOnly": true
                },
                "actual_duration": {
                    "title": "Actual duration",
                    "type": "integer",
                    "readOnly": true
                },
                "custom_field_values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "status_last_modified": {
                    "title": "Status last modified",
                    "type": "object"
                },
                "start_date": {
                    "title": "Start date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "end_date": {
                    "title": "End date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "base_start_date": {
                    "title": "Base start date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "base_end_date": {
                    "title": "Base end date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "activity_code": {
                    "title": "Activity code",
                    "type": "string",
                    "maxLength": 16,
                    "x-nullable": true
                },
                "address": {
                    "title": "Address",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "additional_information": {
                    "title": "Additional information",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "new",
                        "issued",
                        "assigned",
                        "completed",
                        "verified",
                        "disputed",
                        "closed",
                        "cancelled",
                        "on hold"
                    ]
                },
                "comment": {
                    "title": "Comment",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "due_date": {
                    "title": "Due date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "created_manually": {
                    "title": "Created manually",
                    "type": "boolean"
                },
                "sibling_number": {
                    "title": "Sibling number",
                    "type": "integer",
                    "readOnly": true
                },
                "reason_code": {
                    "title": "Reason code",
                    "type": "string",
                    "maxLength": 200,
                    "x-nullable": true
                },
                "location": {
                    "title": "Location",
                    "type": "integer",
                    "x-nullable": true
                },
                "work_item_template": {
                    "title": "Work item template",
                    "type": "integer",
                    "x-nullable": true
                },
                "work_order": {
                    "title": "Work order",
                    "type": "integer",
                    "x-nullable": true
                },
                "design_element": {
                    "title": "Design element",
                    "type": "integer",
                    "x-nullable": true
                },
                "process": {
                    "title": "Process",
                    "type": "integer",
                    "x-nullable": true
                },
                "assign_to_person": {
                    "title": "Assign to person",
                    "type": "integer",
                    "x-nullable": true
                },
                "first_sibling": {
                    "title": "First sibling",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "WorkOrderTemplateApproverLevel": {
            "required": [
                "work_order_template"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "role_name": {
                    "title": "Role name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "level": {
                    "title": "Level",
                    "type": "integer",
                    "default": 2,
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "role": {
                    "title": "Role",
                    "type": "integer",
                    "x-nullable": true
                },
                "work_order_template": {
                    "title": "Work order template",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "WorkOrderTemplate": {
            "required": [
                "name",
                "work_package_template"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "work_order_category_name": {
                    "title": "Work order category name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "work_item_templates": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "role_name": {
                    "title": "Role name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "work_package_template_name": {
                    "title": "Work package template name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "crew_category_name": {
                    "title": "Crew category name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "custom_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomField"
                    },
                    "readOnly": true
                },
                "program_name": {
                    "title": "Program name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "approver_levels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkOrderTemplateApproverLevel"
                    },
                    "readOnly": true
                },
                "successors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScheduleItemDependency"
                    },
                    "readOnly": true
                },
                "predecessors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ScheduleItemDependency"
                    },
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "weight": {
                    "title": "Weight",
                    "type": "number"
                },
                "rank": {
                    "title": "Rank",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "capacity_formula": {
                    "title": "Capacity formula",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "is_status_task": {
                    "title": "Is status task",
                    "type": "boolean",
                    "x-nullable": true
                },
                "crew_category": {
                    "title": "Crew category",
                    "type": "integer",
                    "x-nullable": true
                },
                "role": {
                    "title": "Role",
                    "type": "integer",
                    "x-nullable": true
                },
                "work_package_template": {
                    "title": "Work package template",
                    "type": "integer",
                    "x-nullable": true
                },
                "work_order_category": {
                    "title": "Work order category",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "WorkPackageTemplate": {
            "required": [
                "name",
                "program"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "work_order_templates": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "role_name": {
                    "title": "Role name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "custom_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomField"
                    },
                    "readOnly": true
                },
                "program_name": {
                    "title": "Program name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "sign_off_requirements": {
                    "title": "Sign off requirements",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "role": {
                    "title": "Role",
                    "type": "integer",
                    "x-nullable": true
                },
                "program": {
                    "title": "Program",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "WorkItemCategory": {
            "required": [
                "name",
                "code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "modified": {
                    "title": "Modified",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "color": {
                    "title": "Color",
                    "type": "string",
                    "maxLength": 7,
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "rank": {
                    "title": "Rank",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "is_active": {
                    "title": "Is active",
                    "type": "boolean"
                },
                "additional_information": {
                    "title": "Additional information",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "quantity_descriptions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "WorkOrderCategory": {
            "required": [
                "name",
                "code"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "is_active": {
                    "title": "Is active",
                    "type": "boolean"
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "code": {
                    "title": "Code",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "color": {
                    "title": "Color",
                    "type": "string",
                    "maxLength": 7,
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "rank": {
                    "title": "Rank",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                }
            }
        },
        "Permission": {
            "required": [
                "name",
                "codename"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "codename": {
                    "title": "Codename",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                }
            }
        },
        "Role": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                }
            }
        },
        "WebToken": {
            "required": [
                "email",
                "password"
            ],
            "type": "object",
            "properties": {
                "email": {
                    "title": "Email",
                    "type": "string",
                    "minLength": 1
                },
                "password": {
                    "title": "Password",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "RefreshToken": {
            "required": [
                "token"
            ],
            "type": "object",
            "properties": {
                "token": {
                    "title": "Token",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "VerifyJSONWebToken": {
            "required": [
                "token"
            ],
            "type": "object",
            "properties": {
                "token": {
                    "title": "Token",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "FullCrewPersonRole": {
            "type": "object",
            "properties": {
                "crew": {
                    "title": "Crew",
                    "type": "string",
                    "readOnly": true
                },
                "crew_name": {
                    "title": "Crew name",
                    "type": "string",
                    "readOnly": true
                },
                "role": {
                    "title": "Role",
                    "type": "string",
                    "readOnly": true
                },
                "role_name": {
                    "title": "Role name",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "Profile": {
            "required": [
                "email",
                "first_name",
                "last_name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "minLength": 1
                },
                "password": {
                    "title": "Password",
                    "type": "string",
                    "default": "gHJ6USyaSpA8z",
                    "minLength": 1
                },
                "first_name": {
                    "title": "First name",
                    "type": "string",
                    "minLength": 1
                },
                "last_name": {
                    "title": "Last name",
                    "type": "string",
                    "minLength": 1
                },
                "full_name": {
                    "title": "Full name",
                    "type": "string",
                    "readOnly": true
                },
                "avatar": {
                    "title": "Avatar",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true,
                    "format": "uri"
                },
                "account": {
                    "title": "Account",
                    "type": "integer",
                    "readOnly": true
                },
                "hourly_rate": {
                    "title": "Hourly rate",
                    "type": "number",
                    "format": "decimal",
                    "x-nullable": true
                },
                "overtime_rate": {
                    "title": "Overtime rate",
                    "type": "number",
                    "format": "decimal",
                    "x-nullable": true
                },
                "city": {
                    "title": "City",
                    "type": "string",
                    "maxLength": 30,
                    "x-nullable": true
                },
                "region": {
                    "title": "Region",
                    "type": "string",
                    "maxLength": 30,
                    "x-nullable": true
                },
                "country": {
                    "title": "Country",
                    "type": "string",
                    "maxLength": 30,
                    "x-nullable": true
                },
                "address1": {
                    "title": "Address1",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "address2": {
                    "title": "Address2",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "post_code": {
                    "title": "Post code",
                    "type": "string",
                    "maxLength": 10,
                    "x-nullable": true
                },
                "phone1": {
                    "title": "Phone1",
                    "type": "string",
                    "maxLength": 20,
                    "x-nullable": true
                },
                "phone2": {
                    "title": "Phone2",
                    "type": "string",
                    "maxLength": 20,
                    "x-nullable": true
                },
                "division": {
                    "title": "Division",
                    "type": "string",
                    "maxLength": 30,
                    "x-nullable": true
                },
                "notes": {
                    "title": "Notes",
                    "type": "string",
                    "maxLength": 65535,
                    "x-nullable": true
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "role_names": {
                    "title": "Role names",
                    "type": "string",
                    "readOnly": true
                },
                "company": {
                    "title": "Company",
                    "type": "integer"
                },
                "company_name": {
                    "title": "Company name",
                    "type": "string",
                    "readOnly": true
                },
                "company_type": {
                    "title": "Company type",
                    "type": "string",
                    "readOnly": true
                },
                "qualifications": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "uniqueItems": true
                },
                "assigned_crews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FullCrewPersonRole"
                    },
                    "readOnly": true
                },
                "supervisor_full_name": {
                    "title": "Supervisor full name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "supervisor": {
                    "title": "Supervisor",
                    "type": "integer",
                    "x-nullable": true
                },
                "employee_id": {
                    "title": "Employee id",
                    "type": "string",
                    "maxLength": 16,
                    "x-nullable": true
                },
                "crew_leads": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                },
                "related_crews_names": {
                    "title": "Related crews names",
                    "type": "string",
                    "readOnly": true
                },
                "user_tier": {
                    "title": "User tier",
                    "type": "string",
                    "enum": [
                        "Office User",
                        "Field User",
                        "Read Only",
                        "Support",
                        "Service",
                        "No Login"
                    ]
                },
                "full_name_with_email": {
                    "title": "Full name with email",
                    "type": "string",
                    "readOnly": true
                },
                "supervisor_full_name_with_email": {
                    "title": "Supervisor full name with email",
                    "type": "string",
                    "readOnly": true
                },
                "is_active": {
                    "title": "Is active",
                    "type": "string",
                    "readOnly": true
                },
                "show_coded_labor_material_only": {
                    "title": "Show coded labor material only",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "Account": {
            "required": [
                "email",
                "profile"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "date_joined": {
                    "title": "Date joined",
                    "type": "string",
                    "format": "date-time"
                },
                "email": {
                    "title": "Email address",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254,
                    "minLength": 1
                },
                "first_name": {
                    "title": "First name",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "last_name": {
                    "title": "Last name",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "profile": {
                    "$ref": "#/definitions/Profile"
                }
            }
        }
    }
}
